{"version":3,"sources":["components/Turf/CardTurf.jsx","components/Turf/CardTurfFull.jsx","common.js","components/QRCodes.jsx","components/Map.jsx","components/Teams.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Turf/index.js","components/Forms.jsx","components/Volunteers.jsx","components/About.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Attributes.jsx","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","app.styles.js","components/Loading.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CardTurf","props","handleTeamsChange","selectedTeamsOption","a","global","state","refer","setState","saving","obj","_handleSelectChange","add","i","_fetch","teamId","turfId","id","rm","notify_success","notify_error","handleMembersChange","selectedMembersOption","vId","_loadData","turf","volunteers","members","teams","teamsSelected","loading","Promise","all","_loadTurf","_loadVolunteers","_loadTeams","teamOptions","membersOption","forEach","t","push","value","_searchStringify","label","key","team","c","volunteer","this","style","display","padding","icon","faStreetView","width","height","color","name","edit","to","Component","CardTurfFull","JSON","stringify","stats","onChange","options","isMulti","isSearchable","placeholder","jobRuntime","start","end","prettyMs","jobNumber","num","formatNumber","fractionDigits","msg","NotificationManager","success","e","error","console","warn","uri","method","body","server","token","https","match","fetch","orgId","headers","Authorization","res","status","Error","text","json","_browserLocation","isGeolocationAvailable","isGeolocationEnabled","coords","access","lng","longitude","lat","latitude","Icon","data-tip","iconName","RootLoader","flag","faSync","onClick","func","children","DialogSaving","aria-labelledby","aria-describedby","open","position","top","left","right","backgroundColor","disableShrink","o","parse","last_seen","created","toLowerCase","_loadImports","imports","data","_inviteLink","inviteCode","_loadQRCode","qrcode","QRCode","toDataURL","img","_loadQRCodes","qrcodes","_loadVolunteer","byType","call","_loadTurfs","_loadNearbyTurfs","dist","_loadTeam","_loadForm","form","_loadForms","forms","_loadAttributes","attributes","_loadAddressData","formId","_loadPeopleAddressData","aId","oldopt","newopt","prior","map","now","ni","n","indexOf","pi","p","PlacesAutocomplete","addressSearch","getInputProps","getSuggestionItemProps","suggestions","className","suggestion","description","TimeAgo","locale","en","QRCodes","search","handlePageClick","pageNum","selected","perPage","localStorage","getItem","thisQRCode","onTypeSearch","bind","handlePageNumChange","setItem","event","target","includes","type","exact","path","render","ListQRCodes","CardQRCode","params","onClose","paginate","list","idx","Math","floor","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","component","qId","handleFormsChange","selectedFormsOption","handleTurfChange","selectedTurfOption","leaderOptions","formOptions","turfOptions","ass","f","direct","turfs","_disableQRCode","onSave","val","ReactTooltip","rebuild","alignItems","alt","src","CardQRCodeFull","link","button","faQrcode","size","primary","secondary","rel","href","last_used","format","Date","num_volunteers","filter","disabled","App","loadMarkerData","onMarkerClick","marker","showingInfoWindow","address","place","title","selectedPlace","activeMarker","onTurfClick","log","infoLocation","paths","activeTurf","mapProps","center","addresses","onMapClicked","visits","polygons","location","geometry","geojson2polygons","polygon","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","ModalMarker","people","units","ModalPerson","person","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","handleClickDelete","menuDelete","handleCloseDelete","_deleteTeam","window","_createTeam","addTeamForm","getValue","formServerItems","struct","String","formServerOptions","fields","ListTeams","Form","ref","onChangeTeam","CardTeam","autoFocus","teamn","turfSelected","formSelected","memberOptions","flex","overflow","faUsers","CardTeamFull","ListTurf","TurfOptions","handleStateChange","selectedStateOption","typeOptions","us_states","sldu","sldl","selectedDrawOption","stateOptions","Object","keys","k","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","CircularProgress","accept","handleImportFiles","files","debounce","onTypeAddress","onSelect","submitAddress","geocodeByAddress","getLatLng","pos","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","result","readAsText","_deleteTurf","_createTurf","addTurfForm","objs","circleToPolygon","urlFromDist","replace","initState","thisTurf","drawOptions","onChangeTurf","_showSubmitButton","Button","Dialog","DialogTitle","DialogActions","FTYPE","enums","TEXTBOX","Number","Boolean","SAND","addItem","reorder","startIndex","endIndex","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","grid","margin","background","getListStyle","isDraggingOver","Forms","getList","id2List","onDragEnd","attributes_selected","droppable","droppable2","optional","values","_deleteForm","_createForm","addFormForm","formName","trim","order","mainForm","customForm","customFormItems","forceUpdate","ListForms","onChangeForm","flexDirection","provided","snapshot","innerRef","item","draggableId","draggableProps","dragHandleProps","required","inputTypeToReadable","CardForm","faClipboard","CardFormFull","NEARBY_DIST","Volunteers","thisVolunteer","ready","unassigned","denied","invited","locked","ListVolunteers","CardVolunteer","handleLeaderChange","selectedLeaderOption","hometurf","nearbyturf","x","y","faHome","leader","autoturf","_lockVolunteer","term","avatar","locationstr","extract_addr","VolunteerBadges","CardVolunteerFull","email","phone","VolunteerAddress","slice","badges","admin","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","arr","split","shift","join","componentDidMount","cb_version","version","neo4j_version","process","faTwitter","faFacebook","faGlobe","renderLabelContent","percent","midAngle","transform","textAnchor","toFixed","_init","attributeOptions","doQuery","selectedAttributeOption","data_breakdown","include_null","d","pop","handleAttributeChange","animation","Checkbox","checked","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","fill","CardDashboard","sortableElement","faShieldAlt","stat","Cards","sortableContainer","dash","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","admins","noAdmins","vol","faUser","faMap","faChartPie","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","axis","Modal","getUserProp","MapSelect","map1","map2","_handleCheck","updateFormats","_setValue","_setMapValue","prop","_renderCheckbox","_renderMapOptions","Fragment","checkbox","dimensions","labelWidth","React","specVal","row","spec","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","classes","theme","root","IconButton","aria-label","direction","TablePaginationActionsWrapped","withStyles","flexShrink","palette","marginLeft","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","rows","emptyRows","min","Paper","tableWrapper","Table","table","TableHead","TableRow","Tooltip","tooltip","TableCell","header","TableBody","s","funcItemTooltip","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","completed","Check","LinearProgress","paddingTop","variant","_pipe","g","pipe","fns","reduce","PAPER_TABLE_SPEC","ImportMap","formats","mapped","formatHeaders","field","updateMapped","mapData","getMapped","generateFormats","getAllIndexes","parseData","isArray","indexes","findIndex","total","next","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","record","defaultState","sending","submitting","ImportData","preProcess","filename","sendData","sepm","seps","RegExp","sepr","percentage","setTimeout","_resetState","faFileCsv","Divider","onError","preProcessError","onFileLoaded","tsToStr","ts","toString","jobStatus","job","started","showErrorIfError","taskObjFromQueue","Queue","r","q","styles","main","marginRight","breakpoints","up","paper","submit","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","Loading","CssBaseline","Typography","role","Login","loginOptions","pathname","dev","selectedLoginOption","reload","Avatar","onSubmit","preventDefault","doSave","fullWidth","LoginOption","FormControl","InputLabel","htmlFor","Input","autoComplete","defaultValue","FormControlLabel","control","qserver","LogoutDialog","menuLogout","handleCloseLogout","_logout","Header","handleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","noWrap","MenuItems","handleClickLogout","List","ListItem","ListItemIcon","ListItemText","Sidebar","handleDrawerClose","Drawer","NoMatch","Routes","Teams","Turf","Map","google_maps_key","hai","singHello","jwt","decode","clear","_loadKeys","aScript","document","createElement","head","appendChild","connectForm","substring","sm_oauth_url","get","sm","user","v","queryString","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.108247f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'turf', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull global={global} turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      <pre>\n      {JSON.stringify(props.refer.state.turf.stats, null, 2)}\n      </pre>\n      <br />\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\nimport QRCode from 'qrcode';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(global, uri, method, body) {\n  if (!global || !global.state) return;\n\n  const { server, token } = global.state;\n\n  let https = true;\n  if (server.match(/^localhost/)) https = false;\n\n  if (!method) method = 'GET';\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ' + (global.state.orgId?'/'+global.state.orgId:'') + '/api/v1' + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(global) {\n  let imports = [];\n  try {\n    let data = await _fetch(global, '/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport function _inviteLink(inviteCode, server, orgId) {\n  return 'https://'+server+'/HelloVoterHQ/'+(orgId?orgId+'/':'')+'mobile/invite?inviteCode='+inviteCode+'&'+(orgId?'orgId='+orgId:'server='+server);\n}\n\nexport async function _loadQRCode(global, id) {\n  let qrcode = {};\n  try {\n    qrcode = await _fetch(\n      global,\n      '/qrcodes/get?id=' + id\n    );\n    qrcode.img = await QRCode.toDataURL(_inviteLink(id, global.state.server, global.state.orgId));\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode info.');\n  }\n  return qrcode;\n}\n\nexport async function _loadQRCodes(global, id) {\n  let qrcodes = [];\n\n  try {\n    qrcodes = await _fetch(global, '/qrcodes/list');\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode data.');\n  }\n\n  return qrcodes;\n}\n\nexport async function _loadVolunteer(global, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      global,\n      '/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(global, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(global, '/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\n\nexport async function _loadTurf(global, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      global,\n      '/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTurfs(global, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(global, '/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(global, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(global, '/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(global, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      global,\n      '/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(global, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(global, '/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(global, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      global,\n      '/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(global, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    let data = await _fetch(global, '/' + uri);\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttributes(global) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(global, '/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\nexport async function _loadAddressData(global, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(global, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  }\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  }\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\nimport EdiText from 'react-editext';\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadQRCode,\n  _loadQRCodes,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _inviteLink,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class QRCodes extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('qrcodesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisQRCode: {},\n      qrcodes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('qrcodesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcodes = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      qrcodes = await _loadQRCodes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load qrcodes.');\n    }\n    this.setState({ loading: false, qrcodes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let qrcodes = [];\n\n    this.state.qrcodes.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      qrcodes.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Route\n              exact={true}\n              path=\"/qrcodes/\"\n              render={() => <ListQRCodes global={global} refer={this} qrcodes={qrcodes} />}\n            />\n            <Route\n              path=\"/qrcodes/view/:id\"\n              render={props => (\n                <CardQRCode\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisQRCode.id ? true : false}\n              onClose={() => this.setState({ thisQRCode: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardQRCode\n                  global={global}\n                  key={this.state.thisQRCode.id}\n                  id={this.state.thisQRCode.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListQRCodes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.qrcodes.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardQRCode global={props.global} key={c.id} qrcode={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.qrcodes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}QRCodes ({props.qrcodes.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n      <Button onClick={async () => {\n        let obj = await _fetch(\n          props.global,\n          '/qrcodes/create',\n          'POST'\n        );\n        if (obj && obj.id) {\n          props.refer.setState({ thisQRCode: obj});\n          props.refer._loadData();\n        } else {\n          notify_error({}, 'QRCode creation failed.');\n        }\n      }} color=\"primary\">\n        Generate QR CODE\n      </Button>\n    </div>\n  );\n};\n\nexport class CardQRCode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      qrcode: this.props.qrcode,\n      selectedTeamsOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.qrcode) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/qrcodes/team/add',\n          'POST',\n          { teamId: obj.add[i], qId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/qrcodes/team/remove',\n          'POST',\n          { teamId: obj.rm[i], qId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        qrcode\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/qrcodes/form/add',\n          'POST',\n          { formId: obj.add[i], qId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/qrcodes/form/remove',\n          'POST',\n          { formId: obj.rm[i], qId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/qrcodes/turf/add',\n          'POST',\n          { turfId: obj.add[i], qId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/qrcodes/turf/remove',\n          'POST',\n          { turfId: obj.rm[i], qId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcode = {},\n      forms = [],\n      turf = [],\n      teams = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [qrcode, forms, turf, teams] = await Promise.all([\n        _loadQRCode(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      qrcode.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    qrcode.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    qrcode.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      qrcode,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedFormsOption,\n      selectedTurfOption,\n    });\n  };\n\n  _disableQRCode = async (qrcode, flag) => {\n    const { global } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcodes/disable',\n        'POST',\n        { id: qrcode.id }\n      );\n      notify_success('QRCode has been disabled.');\n    } catch (e) {\n      notify_error(e, 'Unable to disable QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  };\n\n  onSave = async (val) => {\n    const { global, qrcode } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcodes/update',\n        'POST',\n        { id: qrcode.id, name: val }\n      );\n      notify_success('QRCode has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  }\n\n  render() {\n    const { global, qrcode } = this.state;\n\n    if (!qrcode || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <img alt=\"QR Code\" src={qrcode.img} />\n            </ListItemAvatar>\n          </ListItem>\n          <CardQRCodeFull global={global} qrcode={qrcode} refer={this} link={_inviteLink(qrcode.id, global.state.server, global.state.orgId)} onSave={this.onSave} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisQRCode: qrcode })}\n      >\n        <ListItemAvatar>\n          <Icon icon={faQrcode} size={\"large\"} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={qrcode.name}\n          secondary={\"\"}\n        />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardQRCodeFull = props => (\n  <div>\n    <h1><EdiText type=\"text\" value={props.qrcode.name} onSave={props.onSave} /></h1>\n    <br />\n    <br />\n    Link to use on a mobile device: <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>{props.link}</a>\n    <br />\n    <br />\n    Last Used:{' '}\n    {(props.qrcode.last_used?new TimeAgo('en-US').format(new Date(props.qrcode.last_used-30000)):'Never')}\n    <br />\n    Number of people who've used it: {props.qrcode.num_volunteers}\n    <br />\n    <br />\n    <div>\n      Teams this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.qrcode.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.qrcode.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    {props.qrcode.disabled&&\n    <div>This QR Code is disabled</div>\n    }\n    {!props.qrcode.disabled&&\n    <Button onClick={() => props.refer._disableQRCode(props.qrcode, false)}>\n      Disable QRCode\n    </Button>\n    }\n  </div>\n);\n\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(global, null, true),\n      _loadForms(global),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(global, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    const { global } = this.state;\n\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(global, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    const { global } = this.state;\n\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams global={global} refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam global={props.global} key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: obj.add[i] }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: obj.rm[i] }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { formId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { formId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { turfId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { turfId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(global, this.props.id),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'team', this.props.id),\n        _loadTurfs(global, this.props.id),\n        _loadTurfs(global),\n        _loadForms(global, this.props.id),\n        _loadForms(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull global={global} team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf global={props.global} key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState(props);\n    this.state.global = props.global;\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState(props) {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    const { global } = this.state;\n\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(global, '/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf global={global} turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import { CardTurf } from './CardTurf';\nimport { CardTurfFull } from './CardTurfFull';\nimport { ListTurf } from './ListTurf';\nimport { TurfOptions } from './TurfOptions';\nimport Turf from './Turf';\n\nexport {\n  CardTurf,\n  CardTurfFull,\n  ListTurf,\n  TurfOptions,\n  Turf\n};","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport {\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.jsx';\nimport { CardTeam } from './Teams.jsx';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForms,\n  _loadForm,\n  _loadAttributes,\n  _loadVolunteers,\n  _loadTeams,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nconst FTYPE = t.enums(\n  {\n    String: 'Text Input',\n    TEXTBOX: 'Large Text Box',\n    Number: 'Number',\n    Boolean: 'On/Off Switch',\n    SAND: 'Agree/Disagree'\n    //  'List': 'Select from List',\n  },\n  'FTYPE'\n);\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE\n};\n\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      name: t.String\n    });\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      customForm: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.id2List = {\n        droppable: 'attributes',\n        droppable2: 'attributes_selected',\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n      const { source, destination } = result;\n\n      // dropped outside the list\n      if (!destination) {\n          return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n          const attributes = reorder(\n              this.getList(source.droppableId),\n              source.index,\n              destination.index\n          );\n\n          let state = { attributes };\n\n          if (source.droppableId === 'droppable2') {\n              state = { attributes_selected: attributes };\n          }\n\n          this.setState(state);\n      } else {\n          const result = move(\n              this.getList(source.droppableId),\n              this.getList(destination.droppableId),\n              source,\n              destination\n          );\n\n          this.setState({\n              attributes: result.droppable,\n              attributes_selected: result.droppable2\n          });\n      }\n  };\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n    case 'String':\n      return 'Text Input';\n    case 'TEXTBOX':\n      return 'Text Box';\n    case 'Number':\n      return 'Number';\n    case 'Boolean':\n      return 'On/Off Switch';\n    case 'SAND':\n      return 'Agree/Disagree';\n    case 'List':\n      return 'Select from List';\n    default:\n      return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({ fields, order });\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(global);\n      attributes = await _loadAttributes(global);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n        //if (a.values) fields[a.id].options =\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    const { global } = this.state;\n\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: Object.keys(this.state.fields),\n      };\n\n      await _fetch(global, '/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms global={global} forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                  <DragDropContext onDragEnd={this.onDragEnd}>\n                      <Droppable droppableId=\"droppable\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                      &nbsp;\n                      Drag to assign\n                      &nbsp;\n                      <Droppable droppableId=\"droppable2\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes_selected.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                                  <Checkbox value=\"ack\" color=\"primary\" /> Readonly\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                  </DragDropContext>\n                </div>\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm global={props.global} key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'form', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'form', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { global, form } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull global={global} form={form} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteers,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  RootLoader,\n  Icon,\n  PlacesAutocomplete,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport default class Volunteers extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n    let invited = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else if (c.invited) invited.push(c);\n      else if (c.ass.ready || c.ass.teams.length) ready.push(c);\n      else unassigned.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers global={global} refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/invited\"\n              render={() => (\n                <div>\n                  <ListVolunteers\n                    global={global}\n                    refer={this}\n                    type=\"Invited\"\n                    volunteers={invited}\n                  />\n                  <Button onClick={async () => {\n                    let obj = await _fetch(\n                      global,\n                      '/volunteer/invite',\n                      'POST'\n                    );\n                    if (obj.token) {\n                      this.setState({ thisVolunteer: {id: 'invite:'+obj.token} });\n                    } else {\n                      notify_error({}, 'Invite failed.');\n                    }\n                  }} color=\"primary\">\n                    Invite Someone\n                  </Button>\n                </div>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n                <CardVolunteer\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisVolunteer.id ? true : false}\n              onClose={() => this.setState({ thisVolunteer: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardVolunteer\n                  global={global}\n                  key={this.state.thisVolunteer.id}\n                  id={this.state.thisVolunteer.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer global={global} key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    const { global } = this.state;\n\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/team/members/promote',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/team/members/demote',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { formId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { formId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n      {\n        value: 'auto',\n        id: 'auto',\n        label: (\n          <CardTurf\n            global={global}\n            key=\"auto\"\n            turf={{\n              id: 'auto',\n              name: 'Area surrounnding this volunteer\\'s home address'\n            }}\n            refer={this}\n            icon={faHome}\n          />\n        )\n      }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    const { global } = this.state;\n\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { global, volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull global={global} volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisVolunteer: volunteer })}\n      >\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <Button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </Button>\n    ) : (\n      <Button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </Button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress global={global} refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      global: props.global,\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    const { global } = this.state;\n\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        global,\n        '/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <Button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      cb_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    try {\n      data = await _fetch(global, '/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      cb_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {this.state.cb_version ? (\n            'HelloVoterAPI version ' + this.state.cb_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {this.state.neo4j_version ? (\n            'Neo4j version ' + this.state.neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          &copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(global);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    const { global } = this.state;\n\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = '/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(global, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);\n","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            key={card.name}\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  _fetch,\n  notify_error,\n  RootLoader\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(global, '/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {global.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport {\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {global: props.global};\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n        data: a,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions});\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption});\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._init()}>\n        <h3>Attributes</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to edit\"\n        />\n      {this.state.selectedAttributeOption?\n      <div>{JSON.stringify(this.state.selectedAttributeOption.data)}</div>\n      :\n      <div></div>\n      }\n      </RootLoader>\n    );\n  }\n}\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => format.value && i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      imports: [],\n      ...defaultState,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { global, mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(global, '/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(global, '/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(global, '/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  _fetch,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst tsToStr = ts => {\n  return new Date(ts).toString();\n};\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      global: props.global,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(global, '/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Loading extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            HelloVoterHQ is loading...\n          </Typography>\n          <CircularProgress height={15} />\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loading);\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\n\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let loginOptions = [{label: 'Organization ID', value: 'org'}, {label: '3rd Party Server', value: 'server'}];\n    if (process.env.NODE_ENV === 'development') loginOptions.unshift({label: 'LOCAL DEVELOPMENT', value: 'dev'});\n\n    let token;\n\n    try {\n      if (this.props.location.pathname.match(/\\/jwt\\//)) {\n        token = this.props.location.pathname.split('/').pop();\n      }\n    } catch(e) {\n      console.warn(e);\n    }\n\n    this.state = {\n      global: props.global,\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n      selectedLoginOption: loginOptions[0],\n      loginOptions: loginOptions,\n    };\n\n  }\n\n  componentDidMount() {\n    const { token } = this.state;\n\n    if (token) {\n      localStorage.setItem('jwt', token);\n      setTimeout(() => {window.location.href = '/HelloVoterHQ/#/'}, 500);\n      setTimeout(() => {window.location.reload()}, 1500);\n    }\n  }\n\n  render() {\n    const { global, classes, token, loginOptions, selectedLoginOption } = this.state;\n\n    if (token) return (<Loading classes={classes} />);\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); global.doSave(e, this.state.target); }} >\n            <Select\n              value={selectedLoginOption}\n              options={loginOptions}\n              onChange={selectedLoginOption => this.setState({selectedLoginOption})}\n            />\n            <LoginOption global={global} refer={this} />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({target: 'google'})}\n            >\n              Google Sign In\n            </Button>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => this.setState({target: 'facebook'})}\n              className={classes.submit}\n            >\n              Facebook Sign In\n            </Button>\n          </form>\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nconst LoginOption = props => {\n  switch (props.refer.state.selectedLoginOption.value) {\n    case 'org':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Enter your Organization ID. Example: NCC1701</InputLabel>\n            <Input id=\"orgId\" name=\"orgId\" autoComplete=\"orgId\" autoFocus defaultValue={props.global.state.orgId} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that you have read and agreed to our terms of use.\"\n          />\n        </div>\n      );\n    case 'server':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.global.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  global,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ {(global.state.orgId?'Organization ID: '+global.state.orgId:'@ '+global.state.server)}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n        onClick={() =>\n          (window.location.href =\n            '/HelloVoterHQ/#/volunteers/view/' + getUserProp('id'))\n        }\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      <Link to={'/qrcodes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AspectRatioIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"QR Codes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/map/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <NavigationIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Map\" />\n        </ListItem>\n      </Link>\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  QRCodes,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ global }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard global={global} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} global={global} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers global={global} />} />\n    <Route path=\"/teams/\" render={() => <Teams global={global} />} />\n    <Route path=\"/turf/\" render={() => <Turf global={global} />} />\n    <Route path=\"/forms/\" render={() => <Forms global={global} />} />\n    <Route path=\"/qrcodes/\" render={() => <QRCodes global={global} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes global={global} />} />\n    <Route\n      path=\"/map/\"\n      render={() => <Map global={global} apiKey={global.state.google_maps_key} />}\n    />\n    <Route path=\"/import/\" render={() => <ImportData global={global} />} />\n    <Route path=\"/queue/\" render={() => <Queue global={global} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics global={global} />} />\n    <Route path=\"/settings/\" render={() => <Settings global={global} />} />\n    <Route path=\"/about/\" render={() => <About global={global} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login, Loading } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      global: props.global,\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: localStorage.getItem('server'),\n      token: localStorage.getItem('jwt'),\n      orgId: localStorage.getItem('orgId'),\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let { server, token, orgId } = this.state;\n\n    this.setState({loading: true});\n\n    try {\n      // assume error unless proven otherwise\n      let hai = {error: true};\n\n      if (server && token) {\n        hai = await this.singHello(server, jwt.decode(token)['id'].split(\":\")[0], token, orgId);\n      } else {\n        throw new Error(\"missing server or token\");\n      }\n\n      if (hai.error) {\n        throw new Error(\"hai error\")\n      }\n    } catch (e) {\n      // if we had a token, it was bad, clear everything\n      if (token && server) {\n        this.setState({server: null, token: null, orgId: null});\n        localStorage.clear();\n        console.warn(\"Cleaning localStorage\");\n      }\n      console.warn(e);\n    }\n\n    this.setState({\n      loading: false,\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    const { global } = this.state;\n\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n    if (!this.state.server) return;\n\n    let data;\n\n    try {\n      data = await _fetch(global, '/google_maps_key');\n      if (!data) return;\n\n      // load google places API\n      var aScript = document.createElement('script');\n      aScript.type = 'text/javascript';\n      aScript.src =\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        data.google_maps_key +\n        '&libraries=places';\n      document.head.appendChild(aScript);\n\n      this.setState({ google_maps_key: data.google_maps_key });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.token) return null;\n\n    try {\n      item = jwt.decode(this.state.token)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.clear();\n    this.setState({ menuLogout: false, server: null, token: null, orgId: null });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n    let orgId;\n\n    if (event.target.orgId) {\n      orgId = event.target.orgId.value;\n      let place = orgId.substring(0,2).toLowerCase();\n      server = 'gotv-'+place+'.ourvoiceusa.org';\n    } else if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = 'localhost:8080';\n    }\n    await this.singHello(server, target, null, orgId);\n  };\n\n  singHello = async (server, target, token, orgId) => {\n    let res;\n\n    localStorage.setItem('server', server);\n    if (orgId) localStorage.setItem('orgId', orgId);\n    this.setState({server, orgId});\n\n    let https = true;\n    if (server.match(/^localhost/)) https = false;\n\n    try {\n      res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ/'+(orgId?orgId:'')+'/api/v1/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (token ? token : (this.state.token ? this.state.token : 'of the one ring')),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        setTimeout(() => {\n          window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        }, 500);\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ user: this.state.user });\n        return { error: false, flag: true };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { server, token, loading } = this.state;\n\n    if (loading) return (\n      <Router>\n        <Route path=\"/\" render={props => <Loading {...props}  />} />\n      </Router>\n    );\n\n    if (!server || !token) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} global={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            global={this}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes global={this} />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}