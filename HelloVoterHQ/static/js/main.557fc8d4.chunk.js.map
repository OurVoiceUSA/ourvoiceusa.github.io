{"version":3,"sources":["mocks.js","common.js","components/About.jsx","components/Teams.jsx","components/Forms.jsx","components/Volunteers.jsx","components/Turf/CardTurfFull.jsx","components/Turf/CardTurf.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","components/Jwt.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Map.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","app.styles.js","App.jsx","serviceWorker.js","index.js"],"names":["team_a","id","name","team_b","form_a","form_b","turf_region","geometry","type","coordinates","turf_a","turf_b","turfs","forms","mock_admin","admin","avatar","ass","ready","teams","mock_region_leader","leader","mock_team_a_leader","mock_team_b_leader","mock_team_a_member","mock_team_b_member","mock_solo_volunteer","homeaddress","homelng","homelat","mock_unassigned","mock_denied","locked","mocked_users","value","label","mockFetch","_x","_x2","_x3","_x4","_mockFetch","apply","this","arguments","_callee","token","uri","method","body","arr","dashboard","volunteer","volunteers","user","err","i","_i","_i2","t","_i3","_i4","_i5","_t","_i6","f","_i7","_i8","_f","_i9","_f2","_i10","_err","regenerator_default","a","wrap","_context","prev","next","match","split","pop","sleep","jwt","decode","t0","abrupt","Error","mock","length","attributes","addresses","dbsize","t1","test","t2","keys","t3","done","data","push","values","multi","direct","t4","t5","t6","t7","num_records","created","geocode_end","parse_start","completed","turfadd_start","geocode_success","index_end","parse_end","dupes_address","num_people","submitted","filename","index_start","num_addresses","turfadd_end","goecode_fail","dedupe_end","dedupe_start","geocode_start","input","task","success","active","started","stop","API_BASE_URI","jobRuntime","start","end","prettyMs","notify_success","msg","NotificationManager","notify_error","e","message","error","console","warn","_fetch","_fetch2","server","res","hostname","fetch","headers","Authorization","Content-Type","JSON","stringify","sent","status","text","json","Icon","props","react_default","createElement","index_es","Object","assign","style","width","data-tip","icon","iconName","RootLoader","flag","CircularProgress_default","common_Icon","faSync","color","onClick","func","children","DialogSaving","Modal_default","aria-labelledby","aria-describedby","open","position","top","left","right","backgroundColor","padding","disableShrink","_searchStringify","obj","o","parse","last_seen","toLowerCase","_loadImports","_x5","_loadImports2","_callee2","refer","imports","_context2","state","_loadVolunteer","_x6","_x7","_loadVolunteer2","_callee3","_context3","_loadVolunteers","_x8","_x9","_x10","_loadVolunteers2","_callee4","byType","call","_context4","_loadTurf","_x11","_x12","_loadTurf2","_callee5","turf","_context5","_loadTurfs","_x13","_x14","_x15","_loadTurfs2","_callee6","teamId","_context6","_loadTeam","_x16","_x17","_loadTeam2","_callee7","team","_context7","_loadTeams","_x18","_x19","_x20","_loadTeams2","_callee8","_context8","_loadForm","_x21","_x22","_loadForm2","_callee9","form","_context9","_loadForms","_x23","_x24","_loadForms2","_callee10","_context10","_loadAttributes","_x25","_loadAttributes2","_callee11","_context11","_loadAddressData","_x26","_x27","_x28","_x29","_loadAddressData2","_callee12","lng","lat","formId","_context12","_loadPeopleAddressData","_x30","_x31","_x32","_loadPeopleAddressData2","_callee13","aId","_context13","_handleSelectChange","oldopt","newopt","add","rm","prior","map","now","ni","n","indexOf","pi","p","PlacesAutocomplete","react_places_autocomplete_dist_default","addressSearch","_ref","getInputProps","getSuggestionItemProps","suggestions","loading","className","suggestion","description","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","asyncToGenerator","mark","setState","cb_version","version","neo4j_version","process","height","target","rel","href","faTwitter","faFacebook","faGlobe","Component","TimeAgo","locale","en","handleClickDelete","menuDelete","handleCloseDelete","_deleteTeam","saving","window","location","_loadData","_createTeam","addTeamForm","getValue","search","assertThisInitialized","handlePageClick","pageNum","selected","perPage","localStorage","getItem","formServerItems","struct","String","formServerOptions","fields","onTypeSearch","bind","handlePageNumChange","setItem","event","_this2","list","forEach","includes","HashRouter","Route","exact","path","render","common_RootLoader","onChange","Teams_ListTeams","main_default","Form","ref","options","onChangeTeam","Teams_CardTeam","key","params","edit","Button_default","Dialog_default","onClose","DialogTitle_default","DialogActions_default","autoFocus","common_DialogSaving","ListTeams","paginate","idx","Math","floor","display","react_paginate_dist_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","react_select_esm","Link","to","CardTeam","_Component2","_this3","handleMembersChange","_ref5","selectedMembersOption","vId","handleFormsChange","_ref6","selectedFormsOption","teamn","handleTurfChange","_ref7","selectedTurfOption","turfId","members","turfSelected","formSelected","_ref9","_ref10","memberOptions","formOptions","turfOptions","Promise","all","slicedToArray","c","Volunteers_CardVolunteer","CardTurf_CardTurf","Forms_CardForm","inherits","createClass","flex","overflow","faUsers","Teams_CardTeamFull","CardTeamFull","isMulti","isSearchable","placeholder","FTYPE","enums","TEXTBOX","Number","Boolean","SAND","addItem","Forms","optional","_deleteForm","_ref2","_createForm","formName","addFormForm","trim","order","mainForm","customForm","customFormItems","_this$state","splice","forceUpdate","Forms_ListForms","onChangeForm","field","marginLeft","required","inputTypeToReadable","faTimesCircle","margin","ListForms","CardForm","handleTeamsChange","selectedTeamsOption","teamsSelected","_ref8","teamOptions","membersOption","faClipboard","Forms_CardFormFull","CardFormFull","Volunteers","thisVolunteer","unassigned","denied","Volunteers_ListVolunteers","ListVolunteers","List_default","component","CardVolunteer","handleLeaderChange","_ref3","selectedLeaderOption","_ref4","leaderOptions","faHome","autoturf","_lockVolunteer","term","ReactTooltip","rebuild","_this4","ListItem_default","alignItems","ListItemAvatar_default","Avatar_default","alt","src","ListItemText_default","primary","secondary","locationstr","extract_addr","Volunteers_VolunteerBadges","Volunteers_CardVolunteerFull","button","CardVolunteerFull","format","Date","email","phone","Volunteers_VolunteerAddress","filter","VolunteerAddress","_Component3","_this5","submitAddress","address","pos","geocodeByAddress","getLatLng","onTypeAddress","_this6","common_PlacesAutocomplete","debounce","onSelect","VolunteerBadges","badges","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","shift","join","CardTurfFull","CardTurf","_Component","faStreetView","CardTurfFull_CardTurfFull","ListTurf","TurfOptions","_getPrototypeOf2","_len","args","Array","_key","concat","handleStateChange","selectedStateOption","typeOptions","us_states","sldu","sldl","selectedDrawOption","stateOptions","k","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","accept","handleImportFiles","files","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","result","readAsText","_deleteTurf","_createTurf","objs","_res","_obj","addTurfForm","circleToPolygon","urlFromDist","t8","dist","val","replace","initState","thisTurf","drawOptions","ListTurf_ListTurf","onChangeTurf","TurfOptions_TurfOptions","_showSubmitButton","renderLabelContent","percent","x","y","midAngle","transform","textAnchor","toFixed","_init","attributeOptions","doQuery","data_breakdown","selectedAttributeOption","include_null","d","handleAttributeChange","animation","Checkbox_default","checked","PieChart","Legend","Pie","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","index","Cell","fill","Label","CardDashboard","sortableElement","faShieldAlt","stat","Cards","sortableContainer","dash","item","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","vol","faUser","faMap","ques","questions","faChartPie","number_format_default","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","round","faDatabase","axis","MapSelect","_React$Component","map1","map2","_handleCheck","_this$props","updateFormats","_setValue","_this$props2","_setMapValue","prop","_this$props3","defineProperty","_renderCheckbox","_renderMapOptions","_ref2$map","_ref2$map2","Fragment","_this$props4","_this$props4$label","_this$props4$options","_this$props4$checkbox","checkbox","_this$props4$dimensio","dimensions","labelWidth","React","specVal","row","spec","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","classes","theme","root","IconButton_default","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","withStyles","flexShrink","palette","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","rows","emptyRows","min","Paper_default","tableWrapper","Table_default","table","TableHead_default","TableRow_default","Tooltip_default","title","tooltip","TableCell_default","header","TableBody_default","slice","s","funcItemTooltip","colSpan","TableFooter_default","TablePagination_default","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","icons_index_es","LinearProgress_default","paddingTop","variant","_pipe","g","pipe","fns","reduce","PAPER_TABLE_SPEC","num","formatNumber","fractionDigits","ImportMap","formats","mapped","formatHeaders","objectSpread","updateMapped","mapData","getMapped","_assertThisInitialize","generateFormats","getAllIndexes","parseData","isArray","indexes","findIndex","total","_this$updateFormats","_this$props$fields","_this$state$headers","MapSelect_MapSelect","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","PreviewItem_PreviewItem","record","defaultState","sending","submitting","ImportData","preProcess","sendData","seps","sepm","sepr","percentage","RegExp","setTimeout","_resetState","_this$state2","_this$state2$mapped","_this$state2$data","_this$state2$headers","Elements_ProgressBar","faFileCsv","size","ImportMap_ImportMap","Divider_default","Button_Button_default","ImportPreview_ImportPreview","react_csv_reader_default","onError","preProcessError","onFileLoaded","Elements_PaperTable","tsToStr","ts","toString","jobStatus","job","showErrorIfError","taskObjFromQueue","Queue","r","q","pathname","es_Route","Redirect","LogIn","main","CssBaseline_default","paper","LockOutlined_default","Typography_default","onSubmit","preventDefault","doSave","Login_ServerLiveOrMocked","qserver","role","ServerLiveOrMocked","FormControl_default","fullWidth","InputLabel_default","htmlFor","Input_default","autoComplete","defaultValue","FormControlLabel_default","control","submit","marginRight","breakpoints","up","flexDirection","LogoutDialog","menuLogout","handleCloseLogout","_logout","loadMarkerData","onMarkerClick","marker","place","showingInfoWindow","selectedPlace","activeMarker","mapProps","longitude","latitude","center","onMapClicked","visits","polygons","isGeolocationAvailable","isGeolocationEnabled","coords","access","geojson2polygons","google_maps_react_dist","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","paths","strokeColor","strokeWeight","fillColor","fillOpacity","visible","Map_ModalMarker","ModalMarker","people","units","Map_ModalPerson","person","ModalPerson","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Header","handleDrawerOpen","getUserProp","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","menuButton","menuButtonHidden","Menu_default","noWrap","MenuItems","handleClickLogout","react","ListItemIcon_default","icons_Dashboard_default","Person_default","People_default","Map_default","Assignment_default","Navigation_default","PresentToAll_default","Work_default","BarChart_default","IndeterminateCheckBox_default","AccountBalance_default","Help_default","Sidebar","handleDrawerClose","Drawer_default","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Header_MenuItems","NoMatch","Routes","google_maps_key","Switch","components_Dashboard","Volunteers_Volunteers","Teams_App","Turf_App","Forms_Forms","Map","ImportData_ImportData","Queue_Queue","Analytics_App","Settings_App","Jwt_App","About_App","styles","paddingRight","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","whiteSpace","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","_loadKeys","aScript","document","head","appendChild","connectForm","removeItem","sign","singHello","sm_oauth_url","sm","get","dbx","v","queryString","log","dist_default","components_Header_Header","Header_Sidebar","lib","routes_Routes","components_LogoutDialog","Login","ReactDOM","src_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"koBAGMA,EAAS,CACbC,GAAI,aACJC,KAAM,UAEFC,EAAS,CACbF,GAAI,aACJC,KAAM,UAGFE,EAAS,CACbH,GAAI,aACJC,KAAM,UAEFG,EAAS,CACbJ,GAAI,aACJC,KAAM,UAGFI,EAAc,CAClBL,GAAI,eACJC,KAAM,cACNK,SAAU,CAACC,KAAQ,eAAgBC,YAAe,CAAC,CAAC,CAAC,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,SAAU,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,mBAAoB,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,SAAU,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,SAAU,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,kBAAmB,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,SAAU,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,SAAU,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,SAAU,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,SAAU,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,UAAW,WAAY,EAAE,WAAY,UAAW,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,WAAY,EAAE,WAAY,gBAEj2xBC,EAAS,CACbT,GAAI,aACJC,KAAM,SACNK,SAAU,CAACC,KAAQ,UAAUC,YAAe,CAAC,CAAC,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,SAAS,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,UAAU,UAAU,EAAE,UAAU,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,SAAS,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,SAAS,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,SAAS,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,SAAS,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,UAAU,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,UAAU,EAAE,UAAU,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,wBAErlcE,EAAS,CACbV,GAAI,aACJC,KAAM,SACNK,SAAU,CAACC,KAAQ,UAAUC,YAAe,CAAC,CAAC,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,SAAS,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,QAAQ,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,UAAU,EAAE,WAAW,UAAU,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,UAAU,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,UAAU,EAAE,mBAAmB,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,mBAAmB,UAAU,EAAE,WAAW,WAAW,EAAE,SAAS,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,SAAS,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,UAAU,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,UAAU,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,SAAS,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,UAAU,UAAU,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,SAAS,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,mBAAmB,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,UAAU,UAAU,EAAE,UAAU,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,mBAAmB,WAAW,EAAE,QAAQ,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,UAAU,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,SAAS,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,SAAS,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,SAAS,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,UAAU,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,SAAS,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,UAAU,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,mBAAmB,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,oBAAoB,EAAE,UAAU,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,mBAAmB,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,mBAAmB,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,WAAW,UAAU,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,oBAAoB,EAAE,WAAW,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,WAAW,EAAE,WAAW,WAAW,EAAE,UAAU,UAAU,EAAE,UAAU,oBAAoB,EAAE,UAAU,oBAAoB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","file":"static/js/main.557fc8d4.chunk.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport {sleep} from 'ourvoiceusa-sdk-js';\n\nconst team_a = {\n  id: 'test:teama',\n  name: 'Team A',\n};\nconst team_b = {\n  id: 'test:teamb',\n  name: 'Team B',\n};\n\nconst form_a = {\n  id: 'test:forma',\n  name: 'Form A',\n};\nconst form_b = {\n  id: 'test:formb',\n  name: 'Form B',\n};\n\nconst turf_region = {\n  id: 'test:reagion',\n  name: 'Test Region',\n  geometry: {'type': 'MultiPolygon', 'coordinates': [[[[-112.329155, 39.592468], [-112.302599, 39.644011], [-112.30087, 39.64617], [-112.299796, 39.647082], [-112.273054, 39.666009], [-112.271649, 39.666688], [-112.270709, 39.66721], [-112.271038, 39.66743], [-112.258655, 39.676152], [-112.211314, 39.706157], [-112.209051, 39.707781], [-112.204929, 39.711527], [-112.201776, 39.715475], [-112.199901, 39.718696], [-112.180031, 39.757398], [-112.177648, 39.757566], [-112.135585, 39.757297], [-112.135347, 39.757381], [-112.1349, 39.757413], [-112.134463, 39.757392], [-112.133435, 39.75751], [-112.133132, 39.757291], [-112.114904, 39.7571], [-112.095921, 39.775505], [-112.091632, 39.780221], [-112.089562, 39.782196], [-112.087507, 39.785844], [-112.086712, 39.788195], [-112.08731, 39.790384], [-112.085353, 39.791252], [-112.081599, 39.793991], [-112.076944, 39.799691], [-112.077533, 39.801269], [-112.079722, 39.801486], [-112.079594, 39.802762], [-112.077545, 39.806993], [-112.077722, 39.809069], [-112.075287, 39.811238], [-112.073608, 39.811409], [-112.070882, 39.815244], [-112.071424, 39.818066], [-112.069726, 39.819954], [-112.069349, 39.822395], [-112.068564, 39.824454], [-112.068195, 39.827572], [-112.065364, 39.829959], [-112.067787, 39.83304], [-112.069244, 39.833727], [-112.069684, 39.836663], [-112.071998, 39.839012], [-112.075215, 39.839693], [-112.074873, 39.844281], [-112.075288, 39.844955], [-112.074014, 39.84727], [-112.075318, 39.848863], [-112.075158, 39.849869], [-112.076954, 39.852892], [-112.080614, 39.853317], [-112.079499, 39.856711], [-112.081559, 39.86269], [-112.081111, 39.865142], [-112.079029, 39.866087], [-112.075985, 39.866243], [-112.075753, 39.867199], [-112.073042, 39.869521], [-112.07082, 39.869628], [-112.069802, 39.871245], [-112.067081, 39.873776], [-112.066263, 39.87616], [-112.063186, 39.87665], [-112.062309, 39.878647], [-112.059123, 39.879985], [-112.060334, 39.88424], [-112.059496, 39.885076], [-112.059511, 39.887087], [-112.056681, 39.890144], [-112.054937, 39.891022], [-112.053359, 39.893194], [-112.054812, 39.894002], [-112.05691, 39.894116], [-112.058987, 39.895817], [-112.061575, 39.898709], [-112.062736, 39.901157], [-112.062175, 39.904191], [-112.06603, 39.906331], [-112.067466, 39.907815], [-112.06937, 39.908486], [-112.070427, 39.910129], [-112.072129, 39.911262], [-112.076277, 39.91106], [-112.078788, 39.911572], [-112.081089, 39.91303], [-112.08176, 39.915191], [-112.080653, 39.917381], [-112.08337, 39.918246], [-112.082651, 39.920106], [-112.082852, 39.921748], [-112.085019, 39.922837], [-112.085659, 39.925631], [-112.087967, 39.925387], [-112.089468, 39.926817], [-112.092499, 39.927963], [-112.092671, 39.929863], [-112.096293, 39.929231], [-112.098003, 39.928187], [-112.101023, 39.928192], [-112.103804, 39.929183], [-112.10427, 39.930759], [-112.102928, 39.932557], [-112.102478, 39.93471], [-112.103344, 39.936244], [-112.105761, 39.937703], [-112.106156, 39.939357], [-112.10548, 39.941201], [-112.103171, 39.942326], [-112.103609, 39.943726], [-112.103437, 39.946749], [-112.102822, 39.947635], [-112.097486, 39.951053], [-112.096498, 39.953216], [-112.093948, 39.953707], [-112.094209, 39.954567], [-112.095724, 39.956773], [-112.099107, 39.957394], [-112.102382, 39.958789], [-112.102957, 39.95998], [-112.102873, 39.961737], [-112.103526, 39.962757], [-112.104004, 39.965319], [-112.105401, 39.966341], [-112.105892, 39.96736], [-112.109719, 39.970529], [-112.109572, 39.971745], [-112.109704, 39.973625], [-112.114239, 39.973935], [-112.118127, 39.973566], [-112.124348, 39.974027], [-112.125446, 39.974943], [-112.12808, 39.975281], [-112.132631, 39.977447], [-112.134889, 39.979131], [-112.136004, 39.982316], [-112.139921, 39.984631], [-112.141954, 39.986693], [-112.141758, 39.989675], [-112.143135, 39.989763], [-112.146071, 39.991932], [-112.150774, 39.993377], [-112.151212, 39.995106], [-112.150459, 39.997928], [-112.151821, 39.999207], [-112.154804, 40.000428], [-112.155396, 40.002033], [-112.160026, 40.006758], [-112.162373, 40.007881], [-112.167714, 40.007415], [-112.170614, 40.007816], [-112.172951, 40.009125], [-112.174415, 40.011081], [-112.179729, 40.011569], [-112.178463, 40.014007], [-112.176894, 40.01943], [-112.177017, 40.021815], [-112.177866, 40.022331], [-112.177609, 40.024678], [-112.178075, 40.026517], [-112.177026, 40.028509], [-112.177067, 40.030528], [-112.174135, 40.032537], [-112.174797, 40.035605], [-112.173275, 40.036161], [-112.172102, 40.039021], [-112.172223, 40.040034], [-112.175207, 40.043176], [-112.178098, 40.048267], [-112.177548, 40.051035], [-112.178883, 40.053705], [-112.18153, 40.055867], [-112.182318, 40.05885], [-112.183719, 40.059691], [-112.181624, 40.062755], [-112.179947, 40.067315], [-112.173379, 40.066129], [-112.171935, 40.068788], [-112.174008, 40.071088], [-112.174397, 40.07444], [-112.176054, 40.077698], [-112.174083, 40.079724], [-112.174752, 40.081546], [-112.172621, 40.084571], [-112.171453, 40.085496], [-112.167268, 40.085984], [-112.164797, 40.087786], [-112.160479, 40.087807], [-112.158004, 40.088979], [-112.157179, 40.09796], [-112.150965, 40.105559], [-112.150741, 40.107393], [-112.154908, 40.108796], [-112.155831, 40.110549], [-112.155713, 40.112696], [-112.157308, 40.11411], [-112.160819, 40.114181], [-112.161283, 40.116908], [-112.164286, 40.118887], [-112.16429, 40.121457], [-112.163587, 40.123261], [-112.167545, 40.1262], [-112.172215, 40.127263], [-112.175999, 40.130728], [-112.17618, 40.131615], [-112.174788, 40.133738], [-112.173342, 40.134805], [-112.172415, 40.140771], [-112.16962, 40.143326], [-112.168617, 40.146501], [-112.167815, 40.146318], [-112.167851, 40.147083], [-112.171654, 40.149249], [-112.17386, 40.154362], [-112.173308, 40.15539], [-112.167773, 40.159117], [-112.164593, 40.161738], [-112.158749, 40.163149], [-112.158067, 40.164967], [-112.155956, 40.166607], [-112.155041, 40.168855], [-112.155788, 40.17024], [-112.151948, 40.171478], [-112.14817, 40.171614], [-112.146222, 40.170849], [-112.145163, 40.171239], [-112.144298, 40.173183], [-112.145753, 40.173999], [-112.14667, 40.178331], [-112.148742, 40.178284], [-112.152568, 40.179001], [-112.153254, 40.182138], [-112.152292, 40.184641], [-112.150657, 40.185503], [-112.150383, 40.187658], [-112.146774, 40.189353], [-112.148693, 40.190443], [-112.148536, 40.195364], [-112.154857, 40.197482], [-112.156505, 40.196911], [-112.159426, 40.197915], [-112.160394, 40.199069], [-112.157183, 40.203364], [-112.158005, 40.206134], [-112.155413, 40.208993], [-112.150475, 40.211008], [-112.149416, 40.212103], [-112.150687, 40.213288], [-112.154974, 40.215512], [-112.153691, 40.216729], [-112.153647, 40.218217], [-112.15688, 40.219434], [-112.161473, 40.217064], [-112.164026, 40.21849], [-112.165761, 40.217934], [-112.168766, 40.219376], [-112.168621, 40.222028], [-112.170161, 40.22361299999989], [-112.170575, 40.225694], [-112.176222, 40.227289], [-112.176929, 40.230035], [-112.179558, 40.232069], [-112.179526, 40.2356], [-112.178866, 40.241653], [-112.179668, 40.24775], [-112.17941, 40.249441], [-112.183828, 40.249778], [-112.184521, 40.251035], [-112.18328, 40.253146], [-112.184164, 40.255534], [-112.183843, 40.258132], [-112.186219, 40.259007], [-112.18897, 40.261014], [-112.192251, 40.264735], [-112.191991, 40.265709], [-112.192813, 40.269214], [-112.191756, 40.271342], [-112.189147, 40.273436], [-112.189013, 40.277215], [-112.18843, 40.280033], [-112.18928, 40.281536], [-112.188104, 40.283917], [-112.188439, 40.285702], [-112.186737, 40.286565], [-112.188481, 40.290718], [-112.187382, 40.291954], [-112.187932, 40.293568], [-112.190184, 40.296028], [-112.18943, 40.298237], [-112.189803, 40.300336], [-112.191905, 40.302843], [-112.192184, 40.304165], [-112.196358, 40.306479], [-112.198605, 40.306915], [-112.197394, 40.308751], [-112.198461, 40.313206], [-112.197518, 40.31624], [-112.195831, 40.317677], [-112.193721, 40.318302], [-112.192712, 40.323195], [-112.196195, 40.325712], [-112.193552, 40.32796], [-112.19003, 40.329728], [-112.182373, 40.332074], [-112.180194, 40.332116], [-112.176962, 40.333988], [-112.175521, 40.335758], [-112.178895, 40.340227], [-112.181306, 40.34581], [-112.184866, 40.347891], [-112.185856, 40.350724], [-112.186856, 40.351754], [-112.188122, 40.354999], [-112.190108, 40.357124], [-112.194253, 40.360582], [-112.194653, 40.363182], [-112.193529, 40.36504], [-112.193664, 40.368042], [-112.192364, 40.369372], [-112.189968, 40.37062], [-112.188896, 40.372664], [-112.190864, 40.374328], [-112.1942, 40.379353], [-112.197563, 40.38194], [-112.199183, 40.382617], [-112.200725, 40.384801], [-112.201539, 40.388054], [-112.199338, 40.390883], [-112.199704, 40.391912], [-112.199076, 40.394536], [-112.200051, 40.397356], [-112.198473, 40.400012], [-112.199784, 40.403211], [-112.199535, 40.40535], [-112.198293, 40.408742], [-112.198709, 40.410437], [-112.197706, 40.412742], [-112.197934, 40.414827], [-112.195551, 40.41734], [-112.194813, 40.420683], [-112.197826, 40.42293], [-112.198704, 40.425573], [-112.208148, 40.431619], [-112.209485, 40.433068], [-112.214268, 40.45213], [-112.21327, 40.455085], [-112.212473, 40.456445], [-112.212216, 40.459233], [-112.207884, 40.459541], [-112.205856, 40.4606], [-112.203462, 40.460607], [-112.199284, 40.461743], [-112.195465, 40.462315], [-112.194747, 40.463468], [-112.192434, 40.46531], [-112.190567, 40.468198], [-112.188981, 40.468513], [-112.181313, 40.467719], [-112.179632, 40.468094], [-112.174476, 40.466832], [-112.173208, 40.466923], [-112.171933, 40.471821], [-112.17408, 40.475867], [-112.176279, 40.4764], [-112.176039, 40.479006], [-112.178397, 40.482451], [-112.177456, 40.483944], [-112.176977, 40.485349], [-112.176902, 40.486038], [-112.181275, 40.491845], [-112.181375, 40.495745], [-112.180275, 40.497745], [-112.176093, 40.500497], [-112.18019, 40.502663], [-112.185048, 40.509445], [-112.184998, 40.510188], [-112.187232, 40.513083], [-112.187413, 40.513809], [-112.184883, 40.517864], [-112.178565, 40.521723], [-112.179065, 40.523385], [-112.178611, 40.527219], [-112.179439, 40.528534], [-112.179057, 40.531577], [-112.181165, 40.534924], [-112.18188, 40.537797], [-112.182737, 40.538789], [-112.182211, 40.543204], [-112.179139, 40.546365], [-112.179801, 40.549019], [-112.178439, 40.552847], [-112.178762, 40.555018], [-112.178132, 40.556221], [-112.179412, 40.557366], [-112.182092, 40.560994], [-112.183274, 40.564811], [-112.181801, 40.566508], [-112.182261, 40.568824], [-112.181855, 40.570785], [-112.183274, 40.572495], [-112.183268, 40.574012], [-112.180365, 40.577858], [-112.181428, 40.580504], [-112.178794, 40.582195], [-112.177986, 40.584092], [-112.174992, 40.585436], [-112.176489, 40.588477], [-112.175756, 40.590714], [-112.176418, 40.593667], [-112.177426, 40.595498], [-112.176555, 40.597461], [-112.176362, 40.60023], [-112.17572, 40.600933], [-112.175465, 40.604476], [-112.17834, 40.605465], [-112.178642, 40.607499], [-112.18196, 40.612313], [-112.185547, 40.614181], [-112.187679, 40.613928], [-112.189299, 40.615104], [-112.189714, 40.616435], [-112.192308, 40.618417], [-112.193496, 40.620183], [-112.196024, 40.62143], [-112.196189, 40.623666], [-112.197448, 40.624944], [-112.196253, 40.628034], [-112.196263, 40.629308], [-112.190338, 40.628011], [-112.06661, 40.62892], [-112.065746, 40.631084], [-112.053058, 40.631168], [-112.043978, 40.631217], [-112.043524, 40.631185], [-112.042778, 40.630526], [-112.042465, 40.630746], [-112.041918, 40.630863], [-112.038744, 40.630859], [-112.038335, 40.630929], [-112.03833, 40.631215], [-112.035019, 40.631229], [-112.034931, 40.632987], [-112.03325, 40.634558], [-112.034109, 40.638044], [-112.031385, 40.638556], [-112.027579, 40.638551], [-112.024641, 40.638444], [-112.024634, 40.638551], [-112.021708, 40.638563], [-112.022689, 40.643183], [-112.024575, 40.643178], [-112.02458, 40.643653], [-112.024638, 40.648408], [-112.024608, 40.653048], [-112.024672, 40.667578], [-112.024675, 40.668273], [-112.024676, 40.668462], [-112.024678, 40.668848], [-112.024743, 40.682078], [-112.019975, 40.68207], [-112.015207, 40.68206], [-112.005677, 40.682041], [-111.986595, 40.682086], [-111.986622, 40.690397], [-111.98663, 40.696607], [-111.986645, 40.703894], [-111.979937, 40.703911], [-111.980042, 40.708616], [-111.981381, 40.71159], [-111.985814, 40.718849], [-111.986097, 40.719793], [-111.986234, 40.725732], [-111.977174, 40.725965], [-111.970788, 40.726572], [-111.96801, 40.726637], [-111.960922, 40.725939], [-111.951411, 40.725401], [-111.943772, 40.724292], [-111.938958, 40.724191], [-111.924196, 40.724457], [-111.921061, 40.725976], [-111.91572, 40.725606], [-111.915699, 40.725604], [-111.915617, 40.725599], [-111.911234, 40.725534], [-111.91065, 40.725538], [-111.904175, 40.725418], [-111.896849, 40.725437], [-111.888215, 40.725455], [-111.876796, 40.725434], [-111.876829, 40.72103], [-111.876826, 40.718365], [-111.873682, 40.718474], [-111.871127, 40.718855], [-111.868515, 40.719276], [-111.865358, 40.719512], [-111.853739, 40.719775], [-111.846707, 40.719667], [-111.844207, 40.719314], [-111.835153, 40.717245], [-111.833859, 40.716662], [-111.83165, 40.715657], [-111.822435, 40.713173], [-111.819316, 40.713127], [-111.815195, 40.714499], [-111.815135, 40.714783], [-111.807321, 40.714763], [-111.806769, 40.71419], [-111.804065, 40.713206], [-111.798308, 40.711172], [-111.793179, 40.711848], [-111.7899, 40.712101], [-111.785881, 40.714325], [-111.784561, 40.715668], [-111.782608, 40.718914], [-111.777116, 40.72074], [-111.774434, 40.722778], [-111.777931, 40.720041], [-111.783018, 40.717965], [-111.784184, 40.715015], [-111.785893, 40.71374], [-111.785776, 40.710063], [-111.781515, 40.710185], [-111.781525, 40.709007], [-111.781524, 40.7078], [-111.785789, 40.707796], [-111.785784, 40.696711], [-111.776685, 40.696706], [-111.77669, 40.690515], [-111.775024, 40.690212], [-111.775033, 40.677374], [-111.777034, 40.678944], [-111.776356, 40.675978], [-111.776658, 40.663506], [-111.797996, 40.663858], [-111.796033, 40.667646], [-111.800176, 40.668172], [-111.799033, 40.670478], [-111.801772, 40.670854], [-111.802468, 40.66939], [-111.804432, 40.670795], [-111.802463, 40.674418], [-111.80378, 40.67479], [-111.814996, 40.675291], [-111.814946, 40.687084], [-111.824492, 40.687078], [-111.839818, 40.687099], [-111.84508, 40.687096], [-111.843953, 40.68383], [-111.842429, 40.676728], [-111.841594, 40.674274], [-111.839375, 40.667246], [-111.839246, 40.665884], [-111.842548, 40.665987], [-111.846477, 40.667069], [-111.848392, 40.667313], [-111.854383, 40.665725], [-111.854426, 40.659224], [-111.851211, 40.655199], [-111.848419, 40.649375], [-111.845556, 40.64584], [-111.842098, 40.64396], [-111.839544, 40.6426379999999], [-111.837101, 40.641377], [-111.834965, 40.639231], [-111.834463, 40.638508], [-111.834441, 40.63848], [-111.834393, 40.638241], [-111.834554, 40.638503], [-111.834297, 40.637846], [-111.834114, 40.632937], [-111.842921, 40.630847], [-111.85472, 40.630385], [-111.858742, 40.62999], [-111.86209, 40.630053], [-111.86248, 40.630054], [-111.865124, 40.630055], [-111.8659, 40.630055], [-111.868272, 40.630048], [-111.871282, 40.630024], [-111.872065, 40.630025], [-111.872118, 40.620719], [-111.872187, 40.612479], [-111.872196, 40.612309], [-111.872037, 40.611964], [-111.872047, 40.611801], [-111.872178, 40.611063], [-111.87218, 40.609541], [-111.872146, 40.598686], [-111.872162, 40.597283], [-111.872163, 40.597194], [-111.872165, 40.59693], [-111.872167, 40.596842], [-111.872169, 40.594995], [-111.872221, 40.591647], [-111.872185, 40.590332], [-111.872192, 40.580644], [-111.872171, 40.573269], [-111.872147, 40.570139], [-111.872135, 40.569178], [-111.872129, 40.5687], [-111.872168, 40.558785], [-111.872218, 40.545642], [-111.872005, 40.54431], [-111.89115, 40.544362], [-111.89135, 40.537374], [-111.891675, 40.535758], [-111.891629, 40.535102], [-111.891791, 40.534191], [-111.891897, 40.533034], [-111.89156, 40.531639], [-111.891035, 40.529026], [-111.891243, 40.526729], [-111.891235, 40.504433], [-111.89158, 40.492096], [-111.896816, 40.486308], [-111.899002, 40.484125], [-111.902376, 40.480427], [-111.912551, 40.465881], [-111.913774, 40.463492], [-111.914628, 40.459713], [-111.914476, 40.457017], [-111.913673, 40.45249], [-111.913848, 40.452454], [-111.913937, 40.452436], [-111.913563, 40.450705], [-111.912412, 40.448654], [-111.911523, 40.448709], [-111.897958, 40.438756], [-111.890587, 40.431412], [-111.883229, 40.424378], [-111.873666, 40.416745], [-111.868739, 40.413766], [-111.864399, 40.411163], [-111.847008, 40.399486], [-111.840124, 40.395678], [-111.837158, 40.393919], [-111.835446, 40.392159], [-111.834762, 40.39106], [-111.833872, 40.389201], [-111.83156, 40.385024], [-111.827844, 40.382307], [-111.825469, 40.380898], [-111.818674, 40.376862], [-111.817952, 40.37642], [-111.816684, 40.375801], [-111.816218, 40.37561], [-111.811077, 40.374145], [-111.803628, 40.372005], [-111.802001, 40.371286], [-111.795205, 40.366949], [-111.78553, 40.360745], [-111.774341, 40.353548], [-111.774387, 40.347668], [-111.779298, 40.347661], [-111.772777, 40.341038], [-111.772832, 40.334308], [-111.772899, 40.326155], [-111.772579, 40.326167], [-111.772777, 40.280159], [-111.758587, 40.279922], [-111.757956, 40.278538], [-111.753862, 40.273652], [-111.752862, 40.271252], [-111.747162, 40.266552], [-111.736919, 40.260392], [-111.730561, 40.256653], [-111.73006, 40.252953], [-111.734021, 40.245867], [-111.734959, 40.241252], [-111.736114, 40.239588], [-111.739011, 40.240676], [-111.739816, 40.240354], [-111.740233, 40.239492], [-111.740813, 40.237363], [-111.737648, 40.236883], [-111.739431, 40.235814], [-111.738633, 40.234364], [-111.740045, 40.232681], [-111.739035, 40.230254], [-111.733887, 40.225746], [-111.731692, 40.223498], [-111.731597, 40.1953], [-111.729155, 40.195304], [-111.723465, 40.195314], [-111.676235, 40.195392], [-111.660724, 40.195418], [-111.65601, 40.195426], [-111.656018, 40.199516], [-111.652367, 40.199564], [-111.648984, 40.195339], [-111.647816, 40.193335], [-111.646926, 40.190563], [-111.646698, 40.188139], [-111.646734, 40.184057], [-111.646867, 40.161288], [-111.646951, 40.14852], [-111.646977, 40.144542], [-111.646977, 40.144401], [-111.647054, 40.132331], [-111.647737, 40.130311], [-111.648704, 40.128881], [-111.649321, 40.128239], [-111.650002, 40.127689], [-111.654643, 40.125149], [-111.657062, 40.12389], [-111.663579, 40.119211], [-111.674122, 40.110918], [-111.674821, 40.110362], [-111.683707, 40.103615], [-111.69011, 40.098306], [-111.692794, 40.095659], [-111.692977, 40.095482], [-111.70224, 40.085363], [-111.702307, 40.085363], [-111.715673, 40.072943], [-111.71972, 40.068892], [-111.728022, 40.060627], [-111.731632, 40.056353], [-111.744998, 40.043657], [-111.760219, 40.02822], [-111.761207, 40.026631], [-111.761232, 40.026588], [-111.762562, 40.022738], [-111.7626, 40.011975], [-111.762734, 40.00465], [-111.76429, 39.990094], [-111.765194, 39.986855], [-111.765307, 39.986519], [-111.768516, 39.980367], [-111.772565, 39.975588], [-111.776395, 39.972316], [-111.796865, 39.957347], [-111.801013, 39.952837], [-111.80964, 39.942436], [-111.811116, 39.939738], [-111.808499, 39.938349], [-111.804848, 39.934584], [-111.803221, 39.934241], [-111.799369, 39.932219], [-111.797521, 39.932106], [-111.794837, 39.931159], [-111.792184, 39.927316], [-111.78866, 39.925882], [-111.787102, 39.923665], [-111.78625, 39.92118], [-111.786731, 39.918485], [-111.787712, 39.916537], [-111.789097, 39.915328], [-111.787223, 39.912844], [-111.78729, 39.909728], [-111.786677, 39.908955], [-111.783954, 39.907722], [-111.782076, 39.907329], [-111.781981, 39.906049], [-111.78307, 39.903939], [-111.780541, 39.900523], [-111.778143, 39.899167], [-111.774828, 39.899312], [-111.773441, 39.898655], [-111.768441, 39.898215], [-111.764238, 39.895699], [-111.76199, 39.893933], [-111.761115, 39.891998], [-111.757889, 39.890413], [-111.756925, 39.888811], [-111.758427, 39.88787], [-111.760629, 39.884905], [-111.761006, 39.883642], [-111.758325, 39.880515], [-111.757836, 39.876596], [-111.757062, 39.875684], [-111.755087, 39.874781], [-111.752324, 39.874175], [-111.750866, 39.871566], [-111.747971, 39.870523], [-111.74677, 39.869101], [-111.739833, 39.86567], [-111.737932, 39.863908], [-111.738186, 39.862871], [-111.736833, 39.860447], [-111.736686, 39.859148], [-111.734582, 39.856471], [-111.734201, 39.853741], [-111.737596, 39.851318], [-111.74275, 39.851316], [-111.746645, 39.849957], [-111.746925, 39.846698], [-111.748989, 39.842451], [-111.750189, 39.840837], [-111.74955, 39.839479], [-111.749171, 39.835435], [-111.748422, 39.834297], [-111.748822, 39.833018], [-111.750713, 39.831068], [-111.753671, 39.829415], [-111.755885, 39.82753], [-111.758588, 39.824356], [-111.761263, 39.820061], [-111.764224, 39.816202], [-111.7641, 39.815007], [-111.765478, 39.812758], [-111.766193, 39.810601], [-111.756834, 39.811756], [-111.754368, 39.812375], [-111.676293, 39.812367], [-111.642012, 39.812347], [-111.640578, 39.813017], [-111.56613, 39.812849], [-111.537671, 39.812838], [-111.528286, 39.812891], [-111.528328, 39.811983], [-111.505676, 39.812111], [-111.45608, 39.812306], [-111.453414, 39.812031], [-111.452293, 39.812345], [-111.306975, 39.81232], [-111.306975, 39.813008], [-111.247502, 39.813269], [-111.247388, 39.704611], [-111.247087, 39.61046], [-111.247275, 39.467152], [-111.282693, 39.46728], [-111.301222, 39.467302], [-111.301033, 39.422593], [-111.353571, 39.42195], [-111.361689, 39.421838], [-111.498151, 39.420022], [-111.498912, 39.420013], [-111.561776, 39.419189], [-111.700912, 39.417407], [-111.742959, 39.41691], [-111.747242, 39.416979], [-111.747075, 39.38283], [-111.750756, 39.382932], [-111.755219, 39.382696], [-111.875725, 39.381258], [-111.922462, 39.381452], [-111.921663, 39.36681], [-111.958297, 39.366057], [-111.957777, 39.336847], [-112.015637, 39.336792], [-112.015677, 39.314455], [-112.072087, 39.314922], [-112.072204, 39.329606], [-112.116506, 39.329505], [-112.125572, 39.329871], [-112.135536, 39.329816], [-112.137719, 39.329725], [-112.195578, 39.3296], [-112.192752, 39.331757], [-112.189576, 39.332658], [-112.186968, 39.334711], [-112.187976, 39.337273], [-112.188108, 39.338966], [-112.189153, 39.339885], [-112.188859, 39.341117], [-112.191447, 39.342858], [-112.192281, 39.345138], [-112.190534, 39.34683], [-112.19056, 39.348674], [-112.192225, 39.350592], [-112.192239, 39.35313], [-112.191176, 39.355321], [-112.192411, 39.358906], [-112.191639, 39.360654], [-112.191694, 39.36324], [-112.194242, 39.36478], [-112.194673, 39.366875], [-112.194458, 39.369831], [-112.194801, 39.373391], [-112.192588, 39.374956], [-112.192692, 39.376111], [-112.190064, 39.380907], [-112.19285, 39.380979], [-112.195751, 39.383611], [-112.196767, 39.385502], [-112.199626, 39.386645], [-112.200755, 39.388061], [-112.206743, 39.391344], [-112.208537, 39.39404], [-112.207833, 39.394877], [-112.203721, 39.395296], [-112.202219, 39.394789], [-112.199527, 39.395127], [-112.199528, 39.397589], [-112.198079, 39.398909], [-112.195106, 39.398668], [-112.191243, 39.399126], [-112.18939, 39.401581], [-112.18907, 39.404116], [-112.190304, 39.406192], [-112.190709, 39.409628], [-112.187674, 39.410682], [-112.188754, 39.415598], [-112.191116, 39.416926], [-112.190475, 39.418214], [-112.191708, 39.420234], [-112.191368, 39.422881], [-112.192912, 39.424901], [-112.191939, 39.42639], [-112.193266, 39.42779], [-112.192418, 39.430639], [-112.192884, 39.431387], [-112.190814, 39.436546], [-112.191178, 39.438678], [-112.190702, 39.440513], [-112.193938, 39.446042], [-112.19652, 39.447345], [-112.197766, 39.450548], [-112.200451, 39.451304], [-112.202836, 39.452543], [-112.200838, 39.456816], [-112.203888, 39.460035], [-112.202997, 39.461346], [-112.200167, 39.462055], [-112.198831, 39.463254], [-112.197992, 39.465644], [-112.194241, 39.467905], [-112.191732, 39.468123], [-112.191163, 39.470384], [-112.193103, 39.474158], [-112.192037, 39.476637], [-112.192017, 39.478286], [-112.189219, 39.482044], [-112.188711, 39.483453], [-112.186585, 39.484418], [-112.186939, 39.48676], [-112.190973, 39.486035], [-112.191793, 39.486698], [-112.195194, 39.487347], [-112.199401, 39.486651], [-112.20205, 39.487797], [-112.201273, 39.489101], [-112.201792, 39.49124], [-112.200103, 39.49285], [-112.204047, 39.49396], [-112.204921, 39.49547], [-112.205508, 39.498707], [-112.204882, 39.503225], [-112.205774, 39.504752], [-112.206246, 39.510379], [-112.20698, 39.511778], [-112.209438, 39.51202], [-112.213474, 39.514753], [-112.216274, 39.514253], [-112.218474, 39.518053], [-112.214574, 39.519853], [-112.213174, 39.521553], [-112.209874, 39.521953], [-112.203074, 39.525753], [-112.198174, 39.525753], [-112.195374, 39.526253], [-112.193274, 39.527753], [-112.192474, 39.529553], [-112.193674, 39.531653], [-112.192674, 39.533753], [-112.193374, 39.535953], [-112.197674, 39.538053], [-112.197474, 39.539753], [-112.196274, 39.541253], [-112.196874, 39.542752], [-112.199074, 39.543752], [-112.201474, 39.543952], [-112.206875, 39.546852], [-112.209775, 39.549252], [-112.210375, 39.550752], [-112.213875, 39.551852], [-112.216575, 39.554952], [-112.214821, 39.557007], [-112.216366, 39.557447], [-112.217607, 39.556362], [-112.220818, 39.554962], [-112.220362, 39.554054], [-112.235976, 39.554252], [-112.235776, 39.553452], [-112.354345, 39.553871], [-112.329155, 39.592468]]]]},\n};\nconst turf_a = {\n  id: 'test:turfa',\n  name: 'Turf A',\n  geometry: {'type': 'Polygon','coordinates': [[[-112.005773,40.603252999999995],[-112.005697,40.603471],[-112.005555,40.603669],[-112.005392,40.603862],[-112.005289,40.604071],[-112.005246,40.604293999999996],[-112.005247,40.604521],[-112.00525999999999,40.604748],[-112.005281,40.605388999999995],[-112.00528299999999,40.605671],[-112.00528800000001,40.606083],[-112.005298,40.606517],[-112.00530499999999,40.606798999999995],[-112.005306,40.60684],[-112.005309,40.606964],[-112.00531,40.607006],[-112.005319,40.607493999999996],[-112.005348,40.608962],[-112.005358,40.609451],[-112.00279,40.609455],[-112.000992,40.609459],[-111.998011,40.609463999999996],[-111.997266,40.609465],[-111.997252,40.609465],[-111.996056,40.609471],[-111.995945,40.609472],[-111.994303,40.60948],[-111.99198,40.609463],[-111.990659,40.609454],[-111.990254,40.609451],[-111.989039,40.609442],[-111.988635,40.609438999999995],[-111.98818299999999,40.609435999999995],[-111.986827,40.609427],[-111.986376,40.609425],[-111.986073,40.609429999999996],[-111.985167,40.609446999999996],[-111.984865,40.609452999999995],[-111.984436,40.609454],[-111.983149,40.609459],[-111.982721,40.609460999999996],[-111.982462,40.609460999999996],[-111.981814,40.609463999999996],[-111.981686,40.609457],[-111.981428,40.609443999999996],[-111.981107,40.609443999999996],[-111.980144,40.609446999999996],[-111.979824,40.609448],[-111.97933499999999,40.609448],[-111.978741,40.609449999999995],[-111.977869,40.609449999999995],[-111.977381,40.609449999999995],[-111.977169,40.609451],[-111.976782,40.609454],[-111.976555,40.609456],[-111.976516,40.609456],[-111.976323,40.609460999999996],[-111.9758,40.609463999999996],[-111.975281,40.609468],[-111.974233,40.609477],[-111.973831,40.609480999999995],[-111.973711,40.609483],[-111.973655,40.609480999999995],[-111.973487,40.609474999999996],[-111.973432,40.609474],[-111.973323,40.609469999999995],[-111.972999,40.609459],[-111.972891,40.609456],[-111.97265,40.609456],[-111.971928,40.609457],[-111.971688,40.609458],[-111.971176,40.609458],[-111.97028,40.60946],[-111.969643,40.609460999999996],[-111.969398,40.609460999999996],[-111.969132,40.609462],[-111.968782,40.609469],[-111.967732,40.609491],[-111.967383,40.609499],[-111.966681,40.609499],[-111.964576,40.609503],[-111.963875,40.609504],[-111.963732,40.609504],[-111.963303,40.609504],[-111.963161,40.609505],[-111.963055,40.609505],[-111.962741,40.609505],[-111.962636,40.609505999999996],[-111.962507,40.609505],[-111.962122,40.609505],[-111.961995,40.609505999999996],[-111.961863,40.609505999999996],[-111.961469,40.609507],[-111.961338,40.609508999999996],[-111.961248,40.609508999999996],[-111.960979,40.609508999999996],[-111.960891,40.60951],[-111.96079,40.60951],[-111.96049,40.609511],[-111.96039,40.609511999999995],[-111.960337,40.609511999999995],[-111.960178,40.609511999999995],[-111.960126,40.609513],[-111.959661,40.609513],[-111.958266,40.609514999999995],[-111.957802,40.609517],[-111.957476,40.609517],[-111.957166,40.609517],[-111.953513,40.60944],[-111.952148,40.609451],[-111.951014,40.609455],[-111.949051,40.609456],[-111.948339,40.609458],[-111.948139,40.609458],[-111.94499,40.609486],[-111.944436,40.609528999999995],[-111.944225,40.609528],[-111.944133,40.609527],[-111.943224,40.609524],[-111.942922,40.609524],[-111.942593,40.609522],[-111.941609,40.609516],[-111.941281,40.609514999999995],[-111.94077300000001,40.609514],[-111.93925,40.609514],[-111.938743,40.609514],[-111.938273,40.609514],[-111.936865,40.609516],[-111.936396,40.609517],[-111.936056,40.609517],[-111.935035,40.609518],[-111.934696,40.609519],[-111.934108,40.609522],[-111.932699,40.609532],[-111.932344,40.609535],[-111.931757,40.609539999999996],[-111.930333,40.609516],[-111.929148,40.609406],[-111.92856,40.609246],[-111.928455,40.609207],[-111.928244,40.609139],[-111.927921,40.609049],[-111.927591,40.608968],[-111.927258,40.608903999999995],[-111.927033,40.608866],[-111.926663,40.608821],[-111.92635,40.608793],[-111.926121,40.608781],[-111.925775,40.608775],[-111.925431,40.608781],[-111.925316,40.608785999999995],[-111.924973,40.60881],[-111.924632,40.60885],[-111.924337,40.608895],[-111.923863,40.608992],[-111.923159,40.609137],[-111.922232,40.609327],[-111.922198,40.609336],[-111.921376,40.609507],[-111.921292,40.609525],[-111.920475,40.609697],[-111.918432,40.610057999999995],[-111.916991,40.610184],[-111.916967,40.610186999999996],[-111.916635,40.610213],[-111.91590000000001,40.610271],[-111.915642,40.61029],[-111.915535,40.610299],[-111.914695,40.610366],[-111.914441,40.610381],[-111.91407699999999,40.610405],[-111.91387,40.610417],[-111.913249,40.610457],[-111.913043,40.61047],[-111.91289499999999,40.610478],[-111.912454,40.610504999999996],[-111.912307,40.610513999999995],[-111.912225,40.610519],[-111.912121,40.610526],[-111.911651,40.610557],[-111.911563,40.610563],[-111.911378,40.610575999999995],[-111.911154,40.610588],[-111.910483,40.610628],[-111.91026,40.610641],[-111.910091,40.610656999999996],[-111.90958499999999,40.610707],[-111.909417,40.610724999999995],[-111.908525,40.610808],[-111.908073,40.610851],[-111.907587,40.610886],[-111.906519,40.610903],[-111.906387,40.610904999999995],[-111.906115,40.61091],[-111.905992,40.610912],[-111.905861,40.610915],[-111.905853,40.610852],[-111.90564499999999,40.609921],[-111.90547,40.609131999999995],[-111.905055,40.60693],[-111.904867,40.605931999999996],[-111.904817,40.605681],[-111.90467,40.604931],[-111.904622,40.604681],[-111.904579,40.604465],[-111.90445199999999,40.603817],[-111.90441,40.603601],[-111.904212,40.602593],[-111.903786,40.600418999999995],[-111.903652,40.599564],[-111.90352,40.598714],[-111.903483,40.598552],[-111.90361899999999,40.598546999999996],[-111.903843,40.598538999999995],[-111.904027,40.598532],[-111.904164,40.598527],[-111.904155,40.598483],[-111.904129,40.598349999999996],[-111.904121,40.598307],[-111.904071,40.598028],[-111.904344,40.598014],[-111.904937,40.598473],[-111.905208,40.598638],[-111.905232,40.599078],[-111.905226,40.599128],[-111.905185,40.599481],[-111.905657,40.599472],[-111.907073,40.599447],[-111.907406,40.599441999999996],[-111.907468,40.599412],[-111.907489,40.599345],[-111.907512,40.599346],[-111.907538,40.599347],[-111.907582,40.599349],[-111.907606,40.599351],[-111.907607,40.599312999999995],[-111.907808,40.599354],[-111.908414,40.599478],[-111.908616,40.59952],[-111.908942,40.599446],[-111.908988,40.599436],[-111.909053,40.599422],[-111.909924,40.599226],[-111.910251,40.599153],[-111.910249,40.599052],[-111.910245,40.598749999999995],[-111.910244,40.59865],[-111.910243,40.598617999999995],[-111.910242,40.598524999999995],[-111.910242,40.598493999999995],[-111.910241,40.597983],[-111.910239,40.59645],[-111.910239,40.595939],[-111.910234,40.595165],[-111.910221,40.592845],[-111.910217,40.592072],[-111.910212,40.591201999999996],[-111.910212,40.591091],[-111.9102,40.588592999999996],[-111.910197,40.587953],[-111.910211,40.587835],[-111.910224,40.587725],[-111.910336,40.587727],[-111.910699,40.587731],[-111.910819,40.587733],[-111.911041,40.587736],[-111.911239,40.587739],[-111.911708,40.587739],[-111.911931,40.587739],[-111.912626,40.587738],[-111.912696,40.587738],[-111.912698,40.587714],[-111.912742,40.587610999999995],[-111.913148,40.586937],[-111.913427,40.586413],[-111.91361,40.586095],[-111.913853,40.585831999999996],[-111.914393,40.585516],[-111.914704,40.585282],[-111.915425,40.584682],[-111.915834,40.584482],[-111.916947,40.583841],[-111.917207,40.583548],[-111.91772,40.582941],[-111.917962,40.582592],[-111.918014,40.582488],[-111.918115,40.582288],[-111.91825299999999,40.581927],[-111.918363,40.581756],[-111.918579,40.581523],[-111.918791,40.58123],[-111.918914,40.580991],[-111.918987,40.580847999999996],[-111.919164,40.580517],[-111.91938,40.580511],[-111.919648,40.580504],[-111.919973,40.580503],[-111.92012,40.580503],[-111.920252,40.580498999999996],[-111.920446,40.580494],[-111.921849,40.580497],[-111.922502,40.580498999999996],[-111.922502,40.58051],[-111.92262099999999,40.580507],[-111.922679,40.580507],[-111.922956,40.580504],[-111.924728,40.580492],[-111.925543,40.580486],[-111.926667,40.580478],[-111.927177,40.58042],[-111.929154,40.580453999999996],[-111.929593,40.580458],[-111.933719,40.580449],[-111.93531,40.580456999999996],[-111.936383,40.580456999999996],[-111.93661399999999,40.580456999999996],[-111.936697,40.580456],[-111.937225,40.580456],[-111.937659,40.580452],[-111.938697,40.580455],[-111.940102,40.580458],[-111.94116,40.580456999999996],[-111.941798,40.580458],[-111.943557,40.580458],[-111.944081,40.580462],[-111.944265,40.580458],[-111.945857,40.580459],[-111.946382,40.580459],[-111.948172,40.580459999999995],[-111.949676,40.580464],[-111.949687,40.580501],[-111.949737,40.580622],[-111.949757,40.58069],[-111.94978,40.580768],[-111.949839,40.580964],[-111.950685,40.580968],[-111.9508,40.580965],[-111.952904,40.580967],[-111.953049,40.580967],[-111.954027,40.580968],[-111.95476,40.580968],[-111.956811,40.580943],[-111.957752,40.580931],[-111.957751,40.580791999999995],[-111.957749,40.580507],[-111.957904,40.580506],[-111.967304,40.580490999999995],[-111.968942,40.580489],[-111.969028,40.580487999999995],[-111.972053,40.580503],[-111.972053,40.580489],[-111.972054,40.580321999999995],[-111.972057,40.580143],[-111.972057,40.580093],[-111.972059,40.579941999999996],[-111.97206,40.579893],[-111.97206,40.579626999999995],[-111.972062,40.578829999999996],[-111.972063,40.578565],[-111.972062,40.578339],[-111.972061,40.577661],[-111.972061,40.577435],[-111.972065,40.57723],[-111.972079,40.576617999999996],[-111.97208499999999,40.576414],[-111.97208,40.575786],[-111.972071,40.574368],[-111.97207,40.573904999999996],[-111.97207,40.573277999999995],[-111.972375,40.573279],[-111.973292,40.573282],[-111.973598,40.573282999999996],[-111.973855,40.573285999999996],[-111.974276,40.573291],[-111.974629,40.573299],[-111.974887,40.573305],[-111.975326,40.57329],[-111.975381,40.573288999999995],[-111.97649799999999,40.573274999999995],[-111.976646,40.573276],[-111.977086,40.573281],[-111.977195,40.573285999999996],[-111.977278,40.573291],[-111.977655,40.573285],[-111.978294,40.573277],[-111.979363,40.573295],[-111.979933,40.573305999999995],[-111.980055,40.57331],[-111.98048,40.573305],[-111.980498,40.573305],[-111.982122,40.573316999999996],[-111.982649,40.573321],[-111.98267,40.573319999999995],[-111.982929,40.573319],[-111.983287,40.573319],[-111.984837,40.573319],[-111.984971,40.57333],[-111.985112,40.573357],[-111.985137,40.573366],[-111.985338,40.573443],[-111.985443,40.573474],[-111.985607,40.573502999999995],[-111.985734,40.573508],[-111.985762,40.573509],[-111.985859,40.57351],[-111.98603,40.573512],[-111.986236,40.573505],[-111.986362,40.573502],[-111.986362,40.573603],[-111.986362,40.573907999999996],[-111.986363,40.57401],[-111.986363,40.574175],[-111.986364,40.57467],[-111.986365,40.574836],[-111.986365,40.574999],[-111.986367,40.575486999999995],[-111.986368,40.575651],[-111.986368,40.57584],[-111.986369,40.576408],[-111.98637,40.576598],[-111.98637,40.576761],[-111.986371,40.576930999999995],[-111.986373,40.57725],[-111.986374,40.577413],[-111.986509,40.577411],[-111.986914,40.577408],[-111.98705,40.577408],[-111.987051,40.577805],[-111.987054,40.578998999999996],[-111.987056,40.579397],[-111.986916,40.579397],[-111.986499,40.5794],[-111.98636,40.579401],[-111.986362,40.579567999999995],[-111.986369,40.580068999999995],[-111.986372,40.580237],[-111.986376,40.580259],[-111.986389,40.580324999999995],[-111.986394,40.580346999999996],[-111.986418,40.580470999999996],[-111.986441,40.580588],[-111.99077,40.580596],[-111.99074,40.580625999999995],[-111.990538,40.580769],[-111.990392,40.580847999999996],[-111.990218,40.580943],[-111.990236,40.580946],[-111.990257,40.580951],[-111.990276,40.580979],[-111.990287,40.580995],[-111.990323,40.581046],[-111.990339,40.581298],[-111.990342,40.581343],[-111.990342,40.582245],[-111.990342,40.582561],[-111.990342,40.582705],[-111.990344,40.583138],[-111.990345,40.583283],[-111.990345,40.583363],[-111.990345,40.583465],[-111.990308,40.583600000000004],[-111.99028799999999,40.583678],[-111.990287,40.583822999999995],[-111.990287,40.584258999999996],[-111.990287,40.584405],[-111.99028799999999,40.584579999999995],[-111.990292,40.585107],[-111.990294,40.585283],[-111.990295,40.585418],[-111.990297,40.585602],[-111.990332,40.585744],[-111.990332,40.58582],[-111.990332,40.585955999999996],[-111.990332,40.586042],[-111.99033299999999,40.586301999999996],[-111.990334,40.586389],[-111.990341,40.586562],[-111.99055,40.586672],[-111.990579,40.5867],[-111.99063699999999,40.586743],[-111.990673,40.586776],[-111.990759,40.586897],[-111.990803,40.586985],[-111.990832,40.587286999999996],[-111.990853,40.587387],[-111.990878,40.587506999999995],[-111.99094,40.587803],[-111.990964,40.587866],[-111.990969,40.587879],[-111.990983,40.587913],[-111.990991,40.587956999999996],[-111.991001,40.587984],[-111.991016,40.588023],[-111.991045,40.588097],[-111.991063,40.588144],[-111.991088,40.588176],[-111.991163,40.588141],[-111.991632,40.587922],[-111.991715,40.587883],[-111.993166,40.587883999999995],[-111.99418299999999,40.587886999999995],[-111.995649,40.587891],[-112.005173,40.587914999999995],[-112.005173,40.588294],[-112.005174,40.58838],[-112.005176,40.589099],[-112.005179,40.589776],[-112.00518,40.58989],[-112.005182,40.590241999999996],[-112.005183,40.590399],[-112.005183,40.59043],[-112.005186,40.590995],[-112.005187,40.591184],[-112.005187,40.591277],[-112.005188,40.591524],[-112.005194,40.592544],[-112.005196,40.592884999999995],[-112.00519800000001,40.59327],[-112.00520399999999,40.594425],[-112.005207,40.594811],[-112.005207,40.594966],[-112.00521,40.595433],[-112.005211,40.595589],[-112.005213,40.595907],[-112.005219,40.596863],[-112.005222,40.597182],[-112.005223,40.597401999999995],[-112.005228,40.598062],[-112.00523,40.598282],[-112.005235,40.598604],[-112.005251,40.599571],[-112.005257,40.599894],[-112.005258,40.60004],[-112.005262,40.600477999999995],[-112.005264,40.600625],[-112.005265,40.600716999999996],[-112.005268,40.600994],[-112.005269,40.601087],[-112.00527,40.601167],[-112.005271,40.601272],[-112.00528,40.60181],[-112.00528,40.602298999999995],[-112.00531,40.602385999999996],[-112.005362,40.602489],[-112.005319,40.602509],[-112.005694,40.602802],[-112.00576,40.603024],[-112.005773,40.603252999999995]]]},\n};\nconst turf_b = {\n  id: 'test:turfb',\n  name: 'Turf B',\n  geometry: {'type': 'Polygon','coordinates': [[[-112.005773,40.603252999999995],[-112.005697,40.603471],[-112.005555,40.603669],[-112.005392,40.603862],[-112.005289,40.604071],[-112.005246,40.604293999999996],[-112.005247,40.604521],[-112.00525999999999,40.604748],[-112.005281,40.605388999999995],[-112.00528299999999,40.605671],[-112.00528800000001,40.606083],[-112.005298,40.606517],[-112.00530499999999,40.606798999999995],[-112.005306,40.60684],[-112.005309,40.606964],[-112.00531,40.607006],[-112.005319,40.607493999999996],[-112.005348,40.608962],[-112.005358,40.609451],[-112.00279,40.609455],[-112.000992,40.609459],[-111.998011,40.609463999999996],[-111.997266,40.609465],[-111.997252,40.609465],[-111.996056,40.609471],[-111.995945,40.609472],[-111.994303,40.60948],[-111.99198,40.609463],[-111.990659,40.609454],[-111.990254,40.609451],[-111.989039,40.609442],[-111.988635,40.609438999999995],[-111.98818299999999,40.609435999999995],[-111.986827,40.609427],[-111.986376,40.609425],[-111.986073,40.609429999999996],[-111.985167,40.609446999999996],[-111.984865,40.609452999999995],[-111.984436,40.609454],[-111.983149,40.609459],[-111.982721,40.609460999999996],[-111.982462,40.609460999999996],[-111.981814,40.609463999999996],[-111.981686,40.609457],[-111.981428,40.609443999999996],[-111.981107,40.609443999999996],[-111.980144,40.609446999999996],[-111.979824,40.609448],[-111.97933499999999,40.609448],[-111.978741,40.609449999999995],[-111.977869,40.609449999999995],[-111.977381,40.609449999999995],[-111.977169,40.609451],[-111.976782,40.609454],[-111.976555,40.609456],[-111.976544,40.609603],[-111.976535,40.611035],[-111.976537,40.612746],[-111.976537,40.612901],[-111.976536,40.613107],[-111.976536,40.613313999999995],[-111.976536,40.613521],[-111.976536,40.614363999999995],[-111.976536,40.614785999999995],[-111.976535,40.614996],[-111.976534,40.616031],[-111.976534,40.616102],[-111.976513,40.620218],[-111.976511,40.620804],[-111.976511,40.621483],[-111.976502,40.622451999999996],[-111.976489,40.623594],[-111.976495,40.624033],[-111.976508,40.624033],[-111.977158,40.624033],[-111.97738,40.624033],[-111.977753,40.624006],[-111.978017,40.623988],[-111.978422,40.623940999999995],[-111.97878299999999,40.623836999999995],[-111.978856,40.623816999999995],[-111.979187,40.623731],[-111.979217,40.623718],[-111.979249,40.623704],[-111.97931,40.623677],[-111.979447,40.623619],[-111.979735,40.623495999999996],[-111.979979,40.623402],[-111.980143,40.623329],[-111.980257,40.62328],[-111.98037,40.623222],[-111.980469,40.623402999999996],[-111.980549,40.623567],[-111.9807,40.623825],[-111.980772,40.624006],[-111.980895,40.624237],[-111.981104,40.624687],[-111.981167,40.624801999999995],[-111.981277,40.625],[-111.981759,40.62605],[-111.983009,40.628637999999995],[-111.983274,40.629314],[-111.983366,40.629635],[-111.98345,40.629985],[-111.983556,40.630404999999996],[-111.983656,40.630649],[-111.983831,40.630962],[-111.98409,40.631229],[-111.984152,40.631341],[-111.984248,40.631478],[-111.984323,40.631583],[-111.984361,40.63158],[-111.984377,40.631578999999995],[-111.984447,40.63154],[-111.984795,40.632290999999995],[-111.984901,40.632571999999996],[-111.985291,40.633389],[-111.985573,40.633880999999995],[-111.98590899999999,40.634769],[-111.985901,40.634888],[-111.985825,40.635056],[-111.985703,40.635197],[-111.985535,40.635318999999996],[-111.985077,40.635574],[-111.984016,40.63612],[-111.982923,40.63664],[-111.982934,40.637460999999995],[-111.982928,40.638053],[-111.982923,40.63857],[-111.982967,40.63857],[-111.983028,40.63857],[-111.983214,40.63857],[-111.983276,40.638571],[-111.983305,40.638571],[-111.983394,40.638571],[-111.983424,40.638571999999996],[-111.983663,40.638571999999996],[-111.984383,40.638571999999996],[-111.984623,40.638573],[-111.984994,40.638574],[-111.986107,40.638577],[-111.986479,40.638577999999995],[-111.986482,40.638723],[-111.986491,40.639161],[-111.986495,40.639306999999995],[-111.98649,40.63939],[-111.986477,40.63964],[-111.986474,40.639724],[-111.98647,40.640145],[-111.986459,40.64141],[-111.986458,40.641586],[-111.986479,40.641830999999996],[-111.986478,40.641968],[-111.986477,40.642174999999995],[-111.986484,40.642382],[-111.98649,40.64252],[-111.98648299999999,40.642672],[-111.98647199999999,40.642975],[-111.986478,40.643128],[-111.986485,40.64328],[-111.986486,40.643422],[-111.986492,40.64385],[-111.986494,40.643992999999995],[-111.986491,40.644144999999995],[-111.986486,40.644601],[-111.986484,40.644753],[-111.98648299999999,40.644777],[-111.986482,40.644850999999996],[-111.986482,40.644876],[-111.986558,40.645002999999996],[-111.986642,40.645168999999996],[-111.986769,40.645374],[-111.986792,40.64541],[-111.986836,40.645502],[-111.986902,40.645641],[-111.986928,40.645807],[-111.986938,40.646072],[-111.986944,40.646218999999995],[-111.986939,40.646805],[-111.986925,40.648564],[-111.986921,40.649150999999996],[-111.986918,40.649288999999996],[-111.986913,40.649704],[-111.98691099999999,40.649843],[-111.986913,40.649969],[-111.986919,40.650349999999996],[-111.986921,40.650478],[-111.986915,40.650538],[-111.986898,40.650718999999995],[-111.986893,40.65078],[-111.986654,40.650783],[-111.985937,40.650794],[-111.985868,40.650796],[-111.985699,40.650802999999996],[-111.985435,40.650799],[-111.985096,40.650796],[-111.98465,40.650856999999995],[-111.98439,40.650892999999996],[-111.984401,40.650946],[-111.984434,40.651105],[-111.984446,40.651159],[-111.984359,40.65114],[-111.98423,40.651112999999995],[-111.984179,40.650991],[-111.984146,40.650909999999996],[-111.984057,40.650915999999995],[-111.984025,40.650915],[-111.983663,40.650909999999996],[-111.983543,40.650909],[-111.983112,40.650906],[-111.982779,40.650905],[-111.98182,40.650881999999996],[-111.98139,40.650872],[-111.981342,40.651007],[-111.981383,40.651309],[-111.981569,40.652643999999995],[-111.981631,40.653089],[-111.98156399999999,40.653089],[-111.98154099999999,40.65309],[-111.981366,40.653095],[-111.9813,40.653096999999995],[-111.98147399999999,40.653548],[-111.98150000000001,40.653617],[-111.981727,40.654205],[-111.981954,40.655088],[-111.981963,40.655291],[-111.982006,40.656158999999995],[-111.98193,40.656686],[-111.98178,40.657733],[-111.981611,40.658912],[-111.981545,40.659366999999996],[-111.98152400000001,40.65952],[-111.981493,40.660312],[-111.981477,40.660745999999996],[-111.98146,40.661207],[-111.981448,40.661525999999995],[-111.981448,40.661536999999996],[-111.981448,40.661896],[-111.981448,40.662527999999995],[-111.981448,40.662859],[-111.981448,40.663798],[-111.981448,40.664032],[-111.981448,40.666257],[-111.981436,40.666615],[-111.981407,40.667553999999996],[-111.981194,40.667556],[-111.980556,40.667564999999996],[-111.980344,40.667567999999996],[-111.980077,40.667567],[-111.979279,40.667567],[-111.979013,40.667567],[-111.97872699999999,40.667564],[-111.977872,40.667556],[-111.977587,40.667553999999996],[-111.977471,40.667553],[-111.977126,40.66755],[-111.977011,40.667549],[-111.97652,40.667550999999996],[-111.976444,40.667552],[-111.974746,40.667562],[-111.97418,40.667566],[-111.973808,40.667567999999996],[-111.973254,40.667572],[-111.972694,40.667573],[-111.972323,40.667573999999995],[-111.972034,40.667575],[-111.97117,40.667581999999996],[-111.970898,40.667584],[-111.970882,40.667584],[-111.970196,40.667586],[-111.968138,40.667595999999996],[-111.967453,40.667598999999996],[-111.966848,40.6676],[-111.965034,40.667607],[-111.96443,40.667609999999996],[-111.964165,40.667609999999996],[-111.963373,40.667612],[-111.96311,40.667614],[-111.962944,40.667614],[-111.962447,40.667615],[-111.962282,40.667615999999995],[-111.962073,40.667615999999995],[-111.96144699999999,40.667617],[-111.961239,40.667618],[-111.961022,40.667618],[-111.96037,40.667618999999995],[-111.960154,40.66762],[-111.959715,40.667622],[-111.958401,40.667628],[-111.957963,40.667631],[-111.957589,40.667629],[-111.956467,40.667626],[-111.95609400000001,40.667625],[-111.955989,40.667542],[-111.955879,40.667541],[-111.955147,40.667536],[-111.954904,40.667535],[-111.95447899999999,40.667532],[-111.953359,40.667525],[-111.953311,40.667524],[-111.953205,40.667522999999996],[-111.952781,40.667521],[-111.952685,40.667521],[-111.95241,40.667522],[-111.952304,40.667522],[-111.951662,40.667527],[-111.951027,40.667533],[-111.94981,40.667531],[-111.949307,40.66753],[-111.94913199999999,40.667528999999995],[-111.948735,40.667528],[-111.948617,40.667573999999995],[-111.948456,40.66764],[-111.948152,40.667628],[-111.947977,40.667626999999996],[-111.94654,40.667623999999996],[-111.946061,40.667623999999996],[-111.945688,40.667622],[-111.944571,40.667615999999995],[-111.944199,40.667614],[-111.944009,40.667614],[-111.94374,40.667615],[-111.943439,40.667618],[-111.94325,40.667618999999995],[-111.942368,40.667629999999996],[-111.940701,40.667651],[-111.939722,40.667652],[-111.93884,40.667653],[-111.938836,40.667124],[-111.938826,40.665538],[-111.938823,40.665009999999995],[-111.938831,40.664831],[-111.938844,40.664559],[-111.938839,40.664296],[-111.938837,40.664117999999995],[-111.938498,40.664117999999995],[-111.937483,40.664117999999995],[-111.937145,40.664117999999995],[-111.933907,40.664131],[-111.93374,40.664131999999995],[-111.933725,40.664131999999995],[-111.933705,40.664131999999995],[-111.933683,40.664133],[-111.93367,40.664135],[-111.933611,40.664131999999995],[-111.933245,40.664131],[-111.931971,40.664131],[-111.931792,40.664131],[-111.931547,40.664131],[-111.931508,40.664131],[-111.931393,40.664131],[-111.931355,40.664131],[-111.931375,40.663764],[-111.931387,40.66355],[-111.931496,40.663173],[-111.931498,40.662686],[-111.931473,40.662313999999995],[-111.931207,40.662315],[-111.930412,40.662321],[-111.930147,40.662324],[-111.929666,40.662329],[-111.928226,40.662344999999995],[-111.927746,40.662351],[-111.927369,40.662344],[-111.926238,40.662323],[-111.925862,40.662316],[-111.925473,40.662321999999996],[-111.924307,40.66234],[-111.924179,40.662343],[-111.923922,40.662386999999995],[-111.923932,40.662286],[-111.923948,40.662138],[-111.923947,40.661984],[-111.923947,40.661882999999996],[-111.923947,40.661663],[-111.923951,40.661069],[-111.923951,40.661006],[-111.923953,40.660787],[-111.923958,40.659850999999996],[-111.923958,40.65983],[-111.923946,40.659816],[-111.92395,40.659378],[-111.923955,40.658902999999995],[-111.923956,40.658817],[-111.924325,40.657516],[-111.92401100000001,40.656898],[-111.924103,40.656399],[-111.924016,40.656195],[-111.92383699999999,40.65613],[-111.92342,40.656123],[-111.922982,40.656251999999995],[-111.922219,40.656453],[-111.922349,40.656161],[-111.922617,40.655561999999996],[-111.922824,40.654979],[-111.922967,40.654579],[-111.923074,40.654277],[-111.923237,40.653822],[-111.92339,40.653368],[-111.923448,40.653197999999996],[-111.92345399999999,40.653058],[-111.92355,40.653058],[-111.92379,40.653059],[-111.923833,40.653054],[-111.92395,40.653051],[-111.924694,40.653034999999996],[-111.92544,40.653036],[-111.925937,40.653037],[-111.926503,40.653034],[-111.926942,40.653033],[-111.928077,40.653022],[-111.928169,40.653020999999995],[-111.928202,40.653020999999995],[-111.928769,40.653017999999996],[-111.92886899999999,40.653017],[-111.92892499999999,40.653017],[-111.929312,40.653014999999996],[-111.929394,40.653013],[-111.929551,40.653009999999995],[-111.929812,40.653005],[-111.929784,40.652257999999996],[-111.929788,40.651935],[-111.929811,40.651492999999995],[-111.929817,40.651427],[-111.929838,40.651205999999995],[-111.92954399999999,40.650393],[-111.929331,40.649836],[-111.929244,40.649083],[-111.929251,40.648997],[-111.929261,40.648857],[-111.929293,40.648438999999996],[-111.929304,40.6483],[-111.929299,40.648116],[-111.929299,40.648088],[-111.929343,40.647788999999996],[-111.92942,40.647580999999995],[-111.929485,40.647408999999996],[-111.929611,40.647293],[-111.930128,40.647116],[-111.930531,40.646997999999996],[-111.930894,40.646826],[-111.931084,40.646705999999995],[-111.931414,40.646406],[-111.931734,40.646100000000004],[-111.931849,40.645959999999995],[-111.93203,40.64563],[-111.932155,40.64527],[-111.932185,40.644784],[-111.932205,40.644597999999995],[-111.932213,40.644524],[-111.932222,40.644439],[-111.932222,40.644377999999996],[-111.932227,40.643944],[-111.93223,40.6438],[-111.932175,40.643651999999996],[-111.93206599999999,40.643350999999996],[-111.932003,40.643212],[-111.931938,40.643069],[-111.93186,40.643087],[-111.93162699999999,40.643145],[-111.93155,40.643164],[-111.931501,40.643176],[-111.931393,40.643203],[-111.931353,40.643207],[-111.931304,40.643214],[-111.931134,40.643125],[-111.930961,40.643091999999996],[-111.93068,40.643101],[-111.930643,40.643102999999996],[-111.93022500000001,40.643235],[-111.930067,40.643246],[-111.929685,40.642970999999996],[-111.92944,40.642691],[-111.929396,40.642531999999996],[-111.929447,40.642289999999996],[-111.929481,40.642241999999996],[-111.92965,40.642007],[-111.929764,40.641850999999996],[-111.929841,40.641704],[-111.92993,40.641532999999995],[-111.930009,40.641290999999995],[-111.93001699999999,40.641216],[-111.930038,40.641037999999995],[-111.930009,40.640857],[-111.929872,40.640599],[-111.92953299999999,40.640153999999995],[-111.929303,40.640006],[-111.929226,40.63998],[-111.929108,40.639939999999996],[-111.928717,40.639871],[-111.928922,40.639869999999995],[-111.929537,40.639869999999995],[-111.929743,40.639869999999995],[-111.929679,40.639775],[-111.92949,40.639492],[-111.929427,40.639398],[-111.929341,40.639174],[-111.929328,40.63912],[-111.929248,40.638788],[-111.929248,40.638244],[-111.929249,40.638121],[-111.929254,40.63795],[-111.928939,40.637952],[-111.927993,40.637958],[-111.927679,40.637961],[-111.927534,40.637957],[-111.927102,40.637946],[-111.926958,40.637943],[-111.926936,40.637853],[-111.926924,40.637803999999996],[-111.926924,40.637671999999995],[-111.92697,40.637589999999996],[-111.927016,40.637510999999996],[-111.927127,40.637313999999996],[-111.927133,40.637304],[-111.927515,40.636804999999995],[-111.92753,40.636770999999996],[-111.927573,40.636677999999996],[-111.927541,40.636559],[-111.927379,40.635964],[-111.927365,40.635947],[-111.927285,40.635853999999995],[-111.926939,40.635607],[-111.92678,40.635425999999995],[-111.926535,40.634986999999995],[-111.926478,40.63474],[-111.926579,40.634420999999996],[-111.926597,40.634391],[-111.926817,40.634042],[-111.92695499999999,40.633863999999996],[-111.927047,40.633745999999995],[-111.927134,40.633548],[-111.92721,40.633061999999995],[-111.927271,40.63268],[-111.927251,40.63247],[-111.927213,40.632054],[-111.92712,40.631873],[-111.926918,40.631636],[-111.927076,40.631529],[-111.927075,40.631432],[-111.927071,40.631344999999996],[-111.927579,40.631344],[-111.92875,40.631342],[-111.929095,40.631342],[-111.929256,40.631342],[-111.929256,40.630842],[-111.929256,40.630615],[-111.92924,40.630283],[-111.929225,40.629974999999995],[-111.929223,40.629931],[-111.929222,40.629917999999996],[-111.92922,40.629881999999995],[-111.92922,40.62987],[-111.92922,40.62977],[-111.929221,40.629518999999995],[-111.929222,40.629473],[-111.929226,40.629374999999996],[-111.929226,40.629315999999996],[-111.929227,40.629275],[-111.929221,40.629138999999995],[-111.929219,40.629081],[-111.929217,40.629037],[-111.929212,40.628907],[-111.929211,40.628864],[-111.929212,40.628726],[-111.929215,40.628495],[-111.929215,40.628315],[-111.926089,40.628602],[-111.92603,40.628492],[-111.925888,40.628232],[-111.925758,40.628112],[-111.925687,40.628063999999995],[-111.925427,40.627886],[-111.925254,40.627809],[-111.92477099999999,40.627677999999996],[-111.924338,40.627485],[-111.924168,40.627387],[-111.924014,40.627299],[-111.923798,40.627123],[-111.923727,40.627051],[-111.923625,40.626947],[-111.923557,40.626853],[-111.92338,40.626607],[-111.923345,40.62648],[-111.923288,40.626269],[-111.923136,40.626294],[-111.92311,40.626293],[-111.923295,40.627215],[-111.923304,40.62732],[-111.923348,40.627548],[-111.923561,40.628583],[-111.92326800000001,40.629386],[-111.923191,40.629608999999995],[-111.92308,40.629934],[-111.92304899999999,40.630037],[-111.923,40.630024],[-111.922836,40.629833],[-111.922605,40.62965],[-111.921562,40.628772999999995],[-111.92139399999999,40.628433],[-111.921405,40.627832999999995],[-111.921408,40.627719],[-111.921409,40.627663999999996],[-111.921379,40.627274],[-111.921309,40.626977],[-111.921048,40.625858],[-111.92090999999999,40.624998],[-111.920903,40.624767999999996],[-111.920886,40.624108],[-111.920871,40.62402],[-111.92086,40.623959],[-111.92083,40.623779],[-111.92081999999999,40.623719],[-111.920744,40.62327],[-111.920691,40.622741999999995],[-111.920585,40.622085999999996],[-111.920573,40.621936999999996],[-111.920445,40.620262],[-111.92048,40.620033],[-111.92054999999999,40.619822],[-111.920533,40.619675],[-111.920528,40.619659999999996],[-111.920372,40.619184],[-111.920195,40.618035],[-111.920147,40.617625],[-111.920151,40.617593],[-111.920238,40.616985],[-111.920374,40.616631],[-111.920484,40.616349],[-111.920634,40.616084],[-111.920809,40.61593],[-111.920991,40.615735],[-111.92105,40.615587999999995],[-111.92099,40.615393999999995],[-111.920693,40.615247],[-111.92059499999999,40.615198],[-111.920501,40.615086999999995],[-111.920492,40.614976],[-111.92049,40.614824],[-111.92054,40.614577],[-111.920676,40.614376],[-111.920766,40.614199],[-111.920764,40.614106],[-111.920764,40.614041],[-111.920683,40.613777999999996],[-111.920366,40.613135],[-111.920348,40.6129],[-111.92046,40.612688],[-111.920613,40.612621999999995],[-111.92089,40.612562],[-111.921004,40.612473],[-111.921163,40.612277999999996],[-111.92125899999999,40.612013],[-111.921279,40.611514],[-111.92132,40.610797999999996],[-111.921319,40.610762],[-111.921292,40.609525],[-111.921291,40.609459],[-111.921287,40.609266999999996],[-111.921279,40.60868],[-111.921185,40.608557999999995],[-111.921145,40.608514],[-111.920864,40.608197],[-111.92059,40.607817],[-111.920506,40.607343],[-111.920483,40.607085],[-111.920479,40.606761999999996],[-111.920625,40.605751999999995],[-111.920648,40.605593999999996],[-111.920641,40.604802],[-111.920634,40.604763],[-111.920441,40.603718],[-111.920412,40.603254],[-111.920429,40.602556],[-111.920293,40.601763999999996],[-111.92017,40.601039],[-111.919895,40.600418999999995],[-111.919561,40.599635],[-111.919285,40.599104],[-111.91887,40.598591],[-111.918787,40.598198],[-111.918841,40.597635],[-111.918674,40.597225],[-111.918394,40.596981],[-111.917903,40.596827],[-111.917571,40.596776],[-111.916893,40.596728999999996],[-111.916477,40.596709],[-111.915963,40.596513],[-111.915747,40.596498],[-111.915087,40.596602999999995],[-111.914933,40.596651],[-111.914797,40.596798],[-111.914766,40.59682],[-111.914423,40.597071],[-111.914163,40.597161],[-111.913855,40.597139999999996],[-111.913646,40.597100999999995],[-111.913422,40.597009],[-111.913088,40.5968],[-111.912628,40.596399],[-111.912399,40.595887],[-111.912312,40.595890999999995],[-111.911941,40.595908],[-111.911588,40.595925],[-111.911198,40.596208],[-111.910679,40.596061999999996],[-111.910239,40.595939],[-111.910234,40.595165],[-111.910221,40.592845],[-111.910217,40.592072],[-111.910212,40.591201999999996],[-111.910212,40.591091],[-111.9102,40.588592999999996],[-111.910197,40.587953],[-111.910211,40.587835],[-111.910224,40.587725],[-111.910336,40.587727],[-111.910699,40.587731],[-111.910819,40.587733],[-111.911041,40.587736],[-111.911239,40.587739],[-111.911708,40.587739],[-111.911931,40.587739],[-111.912626,40.587738],[-111.912696,40.587738],[-111.912757,40.587738],[-111.913838,40.587734999999995],[-111.915446,40.587731],[-111.918849,40.587720999999995],[-111.919519,40.587711999999996],[-111.91964,40.58771],[-111.920017,40.587705],[-111.920832,40.587714999999996],[-111.921319,40.587722],[-111.921485,40.587725],[-111.921717,40.587728999999996],[-111.922043,40.587734],[-111.922035,40.587250999999995],[-111.922028,40.586619999999996],[-111.921959,40.586115],[-111.921973,40.586043],[-111.921971,40.585975999999995],[-111.92197,40.585961],[-111.922916,40.585958999999995],[-111.924325,40.585957],[-111.924409,40.585937],[-111.924455,40.585936],[-111.926063,40.585924999999996],[-111.926789,40.58592],[-111.926783,40.585732],[-111.929179,40.585729],[-111.929179,40.585581],[-111.92917800000001,40.585451],[-111.929176,40.585063],[-111.929176,40.584934],[-111.929175,40.584697999999996],[-111.929172,40.583994],[-111.929172,40.583759],[-111.92917,40.583334],[-111.929165,40.582059],[-111.929164,40.581635],[-111.929161,40.581503],[-111.92916,40.581419],[-111.929158,40.58133],[-111.929155,40.581109999999995],[-111.929154,40.580979],[-111.929154,40.580874],[-111.929154,40.580559],[-111.929154,40.580453999999996],[-111.929593,40.580458],[-111.933719,40.580449],[-111.93531,40.580456999999996],[-111.936383,40.580456999999996],[-111.93661399999999,40.580456999999996],[-111.936697,40.580456],[-111.937225,40.580456],[-111.937659,40.580452],[-111.938697,40.580455],[-111.940102,40.580458],[-111.94116,40.580456999999996],[-111.941798,40.580458],[-111.943557,40.580458],[-111.944081,40.580462],[-111.944265,40.580458],[-111.945857,40.580459],[-111.946382,40.580459],[-111.948172,40.580459999999995],[-111.949676,40.580464],[-111.949687,40.580501],[-111.949737,40.580622],[-111.949757,40.58069],[-111.94978,40.580768],[-111.949839,40.580964],[-111.950685,40.580968],[-111.9508,40.580965],[-111.952904,40.580967],[-111.953049,40.580967],[-111.954027,40.580968],[-111.95476,40.580968],[-111.956811,40.580943],[-111.957752,40.580931],[-111.957751,40.580791999999995],[-111.957749,40.580507],[-111.957904,40.580506],[-111.967304,40.580490999999995],[-111.968942,40.580489],[-111.969028,40.580487999999995],[-111.972053,40.580503],[-111.977014,40.580528],[-111.977099,40.580529],[-111.977229,40.580529999999996],[-111.979266,40.580557],[-111.979941,40.580566999999995],[-111.982055,40.580566999999995],[-111.985693,40.580585],[-111.986441,40.580588],[-111.99077,40.580596],[-111.992379,40.580622],[-111.997292,40.58063],[-111.997293,40.580421],[-111.997295,40.580276],[-111.997436,40.580287999999996],[-111.997532,40.580287],[-111.998245,40.580286],[-111.998483,40.580286],[-111.998681,40.580286],[-111.999276,40.580286],[-111.999475,40.580286],[-111.999641,40.580287],[-112.000139,40.58029],[-112.000306,40.580290999999995],[-112.000497,40.58029],[-112.001073,40.580289],[-112.001265,40.580289],[-112.00146,40.58029],[-112.002045,40.580293],[-112.002241,40.580295],[-112.002443,40.580297],[-112.003049,40.580303],[-112.003252,40.580306],[-112.003416,40.580306],[-112.003908,40.580306],[-112.004073,40.580307],[-112.005129,40.580301],[-112.005046,40.580416],[-112.004958,40.580537],[-112.004907,40.580619],[-112.004838,40.580729999999996],[-112.004801,40.580895],[-112.004803,40.580946],[-112.004811,40.58107],[-112.004817,40.581095],[-112.003565,40.581752],[-112.003323,40.58188],[-112.001046,40.582974],[-111.999755,40.583619],[-111.998491,40.584253],[-111.99813,40.584435],[-111.99705,40.584981],[-111.99669,40.585164],[-111.996126,40.585482],[-111.996102,40.585494],[-111.995358,40.585879999999996],[-111.994582,40.58636],[-111.99436,40.586517],[-111.993811,40.586909],[-111.993743,40.58697],[-111.993638,40.587066],[-111.993549,40.587162],[-111.993488,40.587229],[-111.99327,40.587604999999996],[-111.99323,40.587677],[-111.993196,40.587782999999995],[-111.993166,40.587883999999995],[-111.993115,40.588052999999995],[-111.993066,40.588321],[-111.993085,40.588681],[-111.99311900000001,40.588874],[-111.993127,40.588915],[-111.993233,40.589293999999995],[-111.993817,40.590458999999996],[-111.994215,40.591252],[-111.994319,40.591459],[-111.995571,40.593955],[-111.996156,40.595121],[-111.996578,40.595996],[-111.997091,40.59706],[-111.99768399999999,40.59829],[-111.997726,40.598377],[-111.997912,40.598290999999996],[-111.999552,40.598304],[-111.999555,40.597964],[-111.999736,40.597963],[-112.000281,40.597961999999995],[-112.000463,40.597961999999995],[-112.00046,40.597818],[-112.000454,40.597387999999995],[-112.000452,40.597245],[-112.000453,40.597062],[-112.000458,40.596674],[-112.000457,40.596513],[-112.000456,40.596329999999995],[-112.000461,40.59619],[-112.000468,40.596002],[-112.00053199999999,40.595793],[-112.000535,40.595783999999995],[-112.000564,40.595721],[-112.000615,40.595673],[-112.000675,40.595635],[-112.000744,40.595613],[-112.000826,40.595594],[-112.000919,40.595580999999996],[-112.00099399999999,40.595571],[-112.001885,40.595566],[-112.002208,40.595565],[-112.002691,40.595563],[-112.00414,40.59556],[-112.004624,40.595559],[-112.004741,40.59556],[-112.004786,40.595561],[-112.005093,40.595580999999996],[-112.005211,40.595589],[-112.005213,40.595907],[-112.005219,40.596863],[-112.005222,40.597182],[-112.005223,40.597401999999995],[-112.005228,40.598062],[-112.00523,40.598282],[-112.005235,40.598604],[-112.005251,40.599571],[-112.005257,40.599894],[-112.005258,40.60004],[-112.005262,40.600477999999995],[-112.005264,40.600625],[-112.005265,40.600716999999996],[-112.005268,40.600994],[-112.005269,40.601087],[-112.00527,40.601167],[-112.005271,40.601272],[-112.00528,40.60181],[-112.00528,40.602298999999995],[-112.00531,40.602385999999996],[-112.005362,40.602489],[-112.005319,40.602509],[-112.005694,40.602802],[-112.00576,40.603024],[-112.005773,40.603252999999995]]]},\n};\n\nteam_a.turfs = [turf_a];\nteam_a.forms = [form_a];\n\nteam_b.turfs = [turf_b];\nteam_b.forms = [form_b];\n\nconst mock_admin = {\n  id: 'test:admin',\n  admin: true,\n  name: 'Administrator',\n  avatar: 'https://cdn0.iconfinder.com/data/icons/viking-2/500/viking_4-512.png',\n  ass: {\n    ready: false,\n    turfs: [turf_a, turf_b],\n    teams: [],\n    forms: [],\n  }};\nconst mock_region_leader = {\n  id: 'test:regionleader',\n  name: 'Region Leader',\n  avatar: 'https://cdn.iconscout.com/icon/premium/png-256-thumb/thor-3-159482.png',\n  ass: {\n    ready: false,\n    leader: true,\n    turfs: [turf_a, turf_b],\n    teams: [],\n    forms: [],\n  }};\nconst mock_team_a_leader = {\n  id: 'test:teamaleader',\n  name: 'Team A Leader',\n  avatar: 'https://cdn.iconscout.com/icon/premium/png-256-thumb/thor-3-159482.png',\n  ass: {\n    ready: true,\n    leader: true,\n    turfs: [turf_a],\n    teams: [team_a],\n    forms: [form_a],\n  }};\nconst mock_team_b_leader = {\n  id: 'test:teambleader',\n  name: 'Team B Leader',\n  avatar: 'https://cdn.iconscout.com/icon/premium/png-256-thumb/thor-3-159482.png',\n  ass: {\n    ready: true,\n    leader: true,\n    turfs: [turf_b],\n    teams: [team_b],\n    forms: [form_b],\n  }};\nconst mock_team_a_member = {\n  id: 'test:teamamember',\n  name: 'Team A Member',\n  avatar: 'https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/chess_piece_rook.png',\n  ass: {\n    ready: true,\n    turfs: [turf_a],\n    teams: [team_a],\n    forms: [form_a],\n  }};\nconst mock_team_b_member = {\n  id: 'test:teambmember',\n  name: 'Team B Member',\n  avatar: 'https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/chess_piece_rook.png',\n  ass: {\n    ready: true,\n    turfs: [turf_b],\n    teams: [team_b],\n    forms: [form_b],\n  }};\nconst mock_solo_volunteer = {\n  id: 'test:solo',\n  name: 'Solo Volunteer',\n  avatar: 'http://comic-cons.xyz/wp-content/uploads/Star-Wars-avatars-Movie-Han-Solo-Harrison-Ford.jpg',\n  homeaddress: '1234 Nerf Herder Rd., Millennium, Falcon, Galaxy Far Away',\n  homelng: -118.3281370,\n  homelat: 33.9208231,\n  ass: {\n    ready: true,\n    turfs: [turf_a],\n    teams: [],\n    forms: [form_a],\n  }};\nconst mock_unassigned = {\n  id: 'test:unassigned',\n  name: 'Unassigned Volunteer',\n  avatar: 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/emojione/151/shrug_1f937.png',\n  homeaddress: 'Please help me!',\n  ass: {\n    ready: false,\n    turfs: [],\n    teams: [],\n    forms: [],\n  }\n};\nconst mock_denied = {\n  id: 'test:denied',\n  locked: true,\n  name: 'Denied Volunteer',\n  avatar: 'https://cdn1.iconfinder.com/data/icons/users-vol-3/32/user-man-lock-block-512.png',\n  homeaddress: 'Who cares?',\n  ass: {\n    ready: false,\n    turfs: [],\n    teams: [],\n    forms: [],\n  }\n};\n\nexport const mocked_users = [\n  {value: mock_admin, label: mock_admin.name},\n  {value: mock_region_leader, label: mock_region_leader.name},\n  {value: mock_team_a_leader, label: mock_team_a_leader.name},\n  {value: mock_team_a_member, label: mock_team_a_member.name},\n  {value: mock_team_b_leader, label: mock_team_b_leader.name},\n  {value: mock_team_b_member, label: mock_team_b_member.name},\n  {value: mock_solo_volunteer, label: mock_solo_volunteer.name},\n  {value: mock_unassigned, label: mock_unassigned.name},\n  {value: mock_denied, label: mock_denied.name},\n];\n\nexport async function mockFetch(token, uri, method, body) {\n  let id, arr = [], dashboard, volunteer, volunteers, teams, turfs, forms;\n\n  if (uri.match(/=/)) id = uri.split('=').pop();\n\n  // fake wait time\n  await sleep(500);\n\n  let user = jwt.decode(token);\n\n  // define test data based on user\n  switch (user.id) {\n  case 'test:admin':\n    volunteer = mock_admin;\n    volunteers = [mock_admin, mock_region_leader, mock_team_a_leader, mock_team_b_leader, mock_team_a_member, mock_team_b_member, mock_solo_volunteer, mock_unassigned, mock_denied];\n    teams = [team_a, team_b];\n    turfs = [turf_region, turf_a, turf_b];\n    forms = [form_a, form_b];\n    break;\n  case 'test:regionleader':\n    volunteer = mock_region_leader;\n    volunteers = [mock_region_leader, mock_team_a_leader, mock_team_b_leader, mock_team_a_member, mock_team_b_member, mock_solo_volunteer, mock_unassigned, mock_denied];\n    team_a.leader = true;\n    team_b.leader = true;\n    teams = [team_a, team_b];\n    turfs = [turf_region, turf_a, turf_b];\n    forms = [form_a, form_b];\n    break;\n  case 'test:teamaleader':\n    volunteer = mock_team_a_leader;\n    volunteers = [mock_team_a_leader, mock_team_a_member, mock_solo_volunteer, mock_denied];\n    team_a.leader = true;\n    teams = [team_a];\n    turfs = [turf_a];\n    forms = volunteer.ass.forms;\n    break;\n  case 'test:teambleader':\n    volunteer = mock_team_b_leader;\n    volunteers = [mock_team_b_leader, mock_team_b_member, mock_unassigned];\n    team_b.leader = true;\n    teams = [team_b];\n    turfs = [turf_b];\n    forms = volunteer.ass.forms;\n    break;\n  case 'test:teamamember':\n    volunteer = mock_team_a_member;\n    volunteers = [mock_team_a_leader, mock_team_a_member];\n    teams = [team_a];\n    turfs = [turf_a];\n    forms = volunteer.ass.forms;\n    break;\n  case 'test:teambmember':\n    volunteer = mock_team_b_member;\n    volunteers = [mock_team_b_leader, mock_team_b_member];\n    teams = [team_b];\n    turfs = [turf_b];\n    forms = volunteer.ass.forms;\n    break;\n  case 'test:solo':\n    volunteer = mock_solo_volunteer;\n    volunteers = [mock_solo_volunteer];\n    teams = [];\n    turfs = [turf_a];\n    forms = volunteer.ass.forms;\n    break;\n  case 'test:unassigned':\n    volunteer = mock_unassigned;\n    volunteers = [mock_unassigned];\n    teams = [];\n    turfs = [];\n    forms = [];\n    break;\n  case 'test:denied':\n    volunteer = mock_denied;\n    volunteers = [mock_denied];\n    teams = [];\n    turfs = [];\n    forms = [];\n    break;\n  default:\n    let err = new Error('User not mocked: '+user.id);\n    err.mock = true;\n    throw err;\n  }\n\n  dashboard = {volunteers: volunteers.length, teams: teams.length, turfs: turfs.length, forms: forms.length, attributes: 0, addresses: 0, dbsize: 0};\n\n  // return test data based on URI\n  switch (true) {\n  case /v1\\/dashboard/.test(uri): return dashboard;\n  case /v1\\/volunteer\\/list/.test(uri): return volunteers;\n  case /v1\\/volunteer\\/get/.test(uri):\n    for (let i in mocked_users) if (mocked_users[i].value.id === id) return mocked_users[i].value;\n    return {};\n  case /v1\\/team\\/list/.test(uri): return {data: teams};\n  case /v1\\/team\\/get/.test(uri):\n    for (let i in teams) if (teams[i].id === id) arr.push(teams[i]);\n    return {data: arr};\n  case /v1\\/team\\/members\\/list/.test(uri):\n    for (let i in volunteers) {\n      for (let t in volunteers[i].ass.teams) {\n        if (volunteers[i].ass.teams[t].id === id) arr.push(volunteers[i]);\n      }\n    }\n    return arr;\n  case /v1\\/team\\/turf\\/list/.test(uri):\n    for (let i in teams) {\n      if (teams[i].id === id) arr = teams[i].turfs;\n    }\n    return {data: arr};\n  case /v1\\/turf\\/list/.test(uri): return {data: turfs};\n  case /v1\\/form\\/list/.test(uri): return {data: forms};\n  case /v1\\/attribute\\/list/.test(uri): return {\"data\":[{\"name\":\"Party Affiliation\",\"id\":\"4a320f76-ef7b-4d73-ae2a-8f4ccf5de344\",\"type\":\"string\",\"values\":[\"No Party Preference\",\"Democratic\",\"Republican\",\"Green\",\"Libertarian\"],\"multi\":false},{\"name\":\"Registered to Vote\",\"id\":\"dcfc1fbb-4609-4900-bbb3-1c4afb2a5127\",\"type\":\"boolean\",\"multi\":false},{\"name\":\"Subscribe to Carpool Vote\",\"id\":\"432634fd-dc28-457d-ae1f-d6fa8d242d30\",\"type\":\"boolean\",\"multi\":false},{\"name\":\"Receive Notifications\",\"id\":\"134095d5-c1c8-46ad-9952-cc66e2934f9e\",\"type\":\"string\",\"values\":[\"Phone\",\"Text\",\"Email\"],\"multi\":true},{\"name\":\"Phone Number\",\"id\":\"7d3466e5-2cee-491e-b3f4-bfea3a4b010a\",\"type\":\"string\",\"multi\":true},{\"name\":\"Email Address\",\"id\":\"b687b86e-8fe3-4235-bb78-1919bcca00db\",\"type\":\"string\",\"multi\":true},{\"name\":\"Date of Birth\",\"id\":\"9a903e4f-66ea-4625-bacf-43abb53c6cfc\",\"type\":\"date\",\"multi\":false},{\"name\":\"US Military Veteran\",\"id\":\"f6a41b03-0dc8-4d59-90bf-033db6a96214\",\"type\":\"boolean\",\"multi\":false},{\"name\":\"Health Insurance\",\"id\":\"689dc96a-a1db-4b20-9443-e69185675d28\",\"type\":\"boolean\",\"multi\":false},{\"name\":\"Race and Ethnicity\",\"id\":\"2ad269f5-2712-4a0e-a3d4-be3074a695b6\",\"type\":\"string\",\"values\":[\"Prefer not to say\",\"African American\",\"Asian\",\"Hispanic\",\"Latino\",\"Native American\",\"Pacific Islander\",\"White\"],\"multi\":true},{\"name\":\"Spoken Languages\",\"id\":\"59f09d32-b782-4a32-b7f1-4ffe81975167\",\"type\":\"string\",\"values\":[\"English\",\"Spanish\",\"Chinese\",\"Arabic\",\"French\",\"German\"],\"multi\":true}]};\n  case /v1\\/team\\/form\\/list/.test(uri):\n    for (let i in teams) {\n      if (teams[i].id === id) arr = teams[i].forms;\n    }\n    return {data: arr};\n  case /v1\\/turf\\/assigned\\/volunteer\\/list/.test(uri):\n    for (let i in volunteers) {\n      if (volunteers[i].ass.direct) {\n        for (let t in volunteers[i].ass.turfs)\n          if (volunteers[i].ass.turfs[t].id === id) arr.push(volunteers[i]);\n      }\n    }\n    return arr;\n  case /v1\\/turf\\/assigned\\/team\\/list/.test(uri):\n    for (let i in teams) {\n      for (let f in teams[i].turfs) {\n        if (teams[i].turfs[f].id === id) {\n          arr.push(teams[i].turfs[f]);\n        }\n      }\n    }\n    return {data: arr};\n  case /v1\\/turf\\/get/.test(uri):\n    for (let i in turfs) if (turfs[i].id === id) return {data: [turfs[i]]};\n    return {};\n  case /v1\\/form\\/assigned\\/volunteer\\/list/.test(uri):\n    for (let i in volunteers) {\n      if (volunteers[i].ass.direct) {\n        for (let f in volunteers[i].ass.forms)\n          if (volunteers[i].ass.forms[f].id === id) arr.push(volunteers[i]);\n      }\n    }\n    return arr;\n  case /v1\\/form\\/assigned\\/team\\/list/.test(uri):\n    for (let i in teams) {\n      for (let f in teams[i].forms) {\n        if (teams[i].forms[f].id === id) {\n          arr.push(teams[i].forms[f]);\n        }\n      }\n    }\n    return {data: arr};\n  case /v1\\/form\\/get/.test(uri):\n    for (let i in forms) if (forms[i].id === id) return forms[i];\n    return {};\n  case /v1\\/import\\/list/.test(uri):\n    return {data: [\n      {'num_records':93106,'created':1548087047894,'geocode_end':1548087187359,'parse_start':1548087129694,'completed':1548087381458,'turfadd_start':1548087363914,'geocode_success':79996,'index_end':1548087363914,'parse_end':1548087186906,'dupes_address':28843,'num_people':93105,'submitted':1548087129539,'filename':'js7.csv','index_start':1548087357685,'num_addresses':79996,'turfadd_end':1548087381458,'goecode_fail':0,'dedupe_end':1548087357685,'id':'5d5e3dc9-a2f3-4b3a-8604-edb542818fe0','dedupe_start':1548087187359,'geocode_start':1548087186906},\n      {'num_records':9314,'created':1548086794888,'geocode_end':1548086806260,'parse_start':1548086803438,'completed':1548086814977,'turfadd_start':1548086813191,'geocode_success':7974,'index_end':1548086813191,'parse_end':1548086806208,'dupes_address':2929,'num_people':9314,'submitted':1548086803381,'filename':'js6.csv','index_start':1548086812116,'num_addresses':7974,'turfadd_end':1548086814977,'goecode_fail':0,'dedupe_end':1548086812116,'id':'1a4b5785-ceee-4439-9dec-801f724ec42b','dedupe_start':1548086806260,'geocode_start':1548086806208},\n      {'num_records':9324,'created':1548086772939,'geocode_end':1548086784798,'parse_start':1548086781872,'completed':1548086792587,'turfadd_start':1548086790814,'geocode_success':8018,'index_end':1548086790814,'parse_end':1548086784724,'dupes_address':2883,'num_people':9324,'submitted':1548086781823,'filename':'js5.csv','index_start':1548086789972,'num_addresses':8018,'turfadd_end':1548086792587,'goecode_fail':0,'dedupe_end':1548086789972,'id':'53d6a6e8-a4c7-405a-b9ee-5d292009c199','dedupe_start':1548086784798,'geocode_start':1548086784724},\n      {'num_records':9329,'created':1548086756528,'geocode_end':1548086768635,'parse_start':1548086765407,'completed':1548086777251,'turfadd_start':1548086775161,'geocode_success':7978,'index_end':1548086775161,'parse_end':1548086768546,'dupes_address':2932,'num_people':9329,'submitted':1548086765320,'filename':'js4.csv','index_start':1548086774491,'num_addresses':7978,'turfadd_end':1548086777251,'goecode_fail':0,'dedupe_end':1548086774491,'id':'8c00b4c4-ec10-4168-af61-535b8d1579f5','dedupe_start':1548086768635,'geocode_start':1548086768546},\n      {'num_records':953,'created':1548086745946,'geocode_end':1548086747856,'parse_start':1548086747331,'completed':1548086748679,'turfadd_start':1548086748202,'geocode_success':802,'index_end':1548086748202,'parse_end':1548086747829,'dupes_address':312,'num_people':953,'submitted':1548086747294,'filename':'js3.csv','index_start':1548086748062,'num_addresses':802,'turfadd_end':1548086748679,'goecode_fail':0,'dedupe_end':1548086748062,'id':'364d71ca-ddf8-42de-8630-dad516e5a039','dedupe_start':1548086747856,'geocode_start':1548086747829},\n      {'num_records':950,'created':1548086736815,'geocode_end':1548086738747,'parse_start':1548086738293,'completed':1548086739623,'turfadd_start':1548086739135,'geocode_success':802,'index_end':1548086739135,'parse_end':1548086738719,'dupes_address':310,'num_people':950,'submitted':1548086738264,'filename':'js2.csv','index_start':1548086738969,'num_addresses':802,'turfadd_end':1548086739623,'goecode_fail':0,'dedupe_end':1548086738969,'id':'ec9143e5-10d2-4bd6-9421-ab76505deb79','dedupe_start':1548086738747,'geocode_start':1548086738719},\n      {'num_records':935,'created':1548086729045,'geocode_end':1548086732950,'parse_start':1548086731455,'completed':1548086734292,'turfadd_start':1548086733572,'geocode_success':799,'index_end':1548086733572,'parse_end':1548086732823,'dupes_address':289,'num_people':935,'submitted':1548086731273,'filename':'js1.csv','index_start':1548086733326,'num_addresses':799,'turfadd_end':1548086734292,'goecode_fail':0,'dedupe_end':1548086733326,'id':'f48bfd84-0b39-42b9-8bb7-97f5ca32634b','dedupe_start':1548086732950,'geocode_start':1548086732823},\n    ]};\n  case /v1\\/import\\/begin/.test(uri):\n    return {};\n  case /v1\\/import\\/add/.test(uri):\n    return {};\n  case /v1\\/import\\/end/.test(uri):\n    return {};\n  case /v1\\/queue\\/list/.test(uri):\n    return {data:[\n      [{'input':'{\"turfId\":\"eca53cb8-09f1-4aa9-9f25-41e9d7f5b751\"}','task':'doTurfIndexing','success':null,'created':1548093446682,'active':false,'started':null,'completed':null,'id':'21fe5221-44cd-485c-9121-d4f0a93ebd67'},'Turf',{'name':'Utah State House 1','id':'eca53cb8-09f1-4aa9-9f25-41e9d7f5b751','filename':null}],\n      [{'input':'{\"turfId\":\"27718d12-4923-4610-a801-603f4a6eaa0e\"}','task':'doTurfIndexing','success':null,'created':1548093403265,'active':false,'started':1548093685440,'completed':null,'id':'fb9ec768-af97-4659-b22d-68bd3868a937'},'Turf',{'name':'Utah Congressional UT-4','id':'27718d12-4923-4610-a801-603f4a6eaa0e','filename':null}],\n      [{'input':'{\"turfId\":\"61b66183-b343-4852-bee2-dedd5709fc32\"}','task':'doTurfIndexing','success':true,'created':1548093403041,'active':false,'started':1548093620161,'completed':1548093685433,'id':'35251d83-e9b7-4fc8-93e9-6f5fd73d1927'},'Turf',{'name':'Utah Congressional UT-3','id':'61b66183-b343-4852-bee2-dedd5709fc32','filename':null}],\n      [{'input':'{\"turfId\":\"ca4f4f93-e007-441c-a199-71711859a181\"}','task':'doTurfIndexing','success':true,'created':1548093402801,'active':false,'started':1548093481848,'completed':1548093619427,'id':'f2d5651e-fac0-4cdf-b19a-5eb3f41b4bed'},'Turf',{'name':'Utah Congressional UT-2','id':'ca4f4f93-e007-441c-a199-71711859a181','filename':null}],\n      [{'input':'{\"turfId\":\"e3c670f1-7a6e-4a5b-9019-a3d8e5a1812e\"}','task':'doTurfIndexing','success':true,'created':1548093400905,'active':false,'started':1548093402888,'completed':1548093448374,'id':'8071417e-f9cf-4069-9156-b9ccdb8d5635'},'Turf',{'name':'Utah Congressional UT-1','id':'e3c670f1-7a6e-4a5b-9019-a3d8e5a1812e','filename':null}],\n      [{'input':'{\"turfId\":\"e86bc354-6ffc-4021-b925-a21fa8db48b7\"}','task':'doTurfIndexing','success':true,'created':1548093365740,'active':false,'started':1548093365740,'completed':1548093402880,'id':'cbbcd67f-4626-42f3-8209-1a6ffb952ae1'},'Turf',{'name':'State of Utah','id':'e86bc354-6ffc-4021-b925-a21fa8db48b7','filename':null}],\n      [{'input':'{\"filename\":\"js7.csv\"}','task':'doProcessImport','created':1548087129544,'success':true,'active':false,'started':1548087129544,'completed':1548087381462,'id':'0ec30057-7238-45af-90f7-4a0733c454ca'},'ImportFile',{'name':null,'id':'5d5e3dc9-a2f3-4b3a-8604-edb542818fe0','filename':'js7.csv'}],\n      [{'input':'{\"filename\":\"js6.csv\"}','task':'doProcessImport','created':1548086803386,'success':true,'active':false,'started':1548086803386,'completed':1548086814997,'id':'03ee4ad9-c6aa-49a1-8285-fec7170dda84'},'ImportFile',{'name':null,'id':'1a4b5785-ceee-4439-9dec-801f724ec42b','filename':'js6.csv'}],\n      [{'input':'{\"filename\":\"js5.csv\"}','task':'doProcessImport','created':1548086781839,'success':true,'active':false,'started':1548086781839,'completed':1548086792594,'id':'63cbb12a-02b8-4a3b-9c48-22c87d6a991a'},'ImportFile',{'name':null,'id':'53d6a6e8-a4c7-405a-b9ee-5d292009c199','filename':'js5.csv'}],\n      [{'input':'{\"filename\":\"js4.csv\"}','task':'doProcessImport','created':1548086765327,'success':true,'active':false,'started':1548086765327,'completed':1548086777263,'id':'32b2a46f-7e18-43d7-8756-25655df394a9'},'ImportFile',{'name':null,'id':'8c00b4c4-ec10-4168-af61-535b8d1579f5','filename':'js4.csv'}],\n      [{'input':'{\"filename\":\"js3.csv\"}','task':'doProcessImport','created':1548086747300,'success':true,'active':false,'started':1548086747300,'completed':1548086748685,'id':'5a90ab6c-7277-4287-b3de-5ec3d03b5198'},'ImportFile',{'name':null,'id':'364d71ca-ddf8-42de-8630-dad516e5a039','filename':'js3.csv'}],\n      [{'input':'{\"filename\":\"js2.csv\"}','task':'doProcessImport','created':1548086738271,'success':true,'active':false,'started':1548086738271,'completed':1548086739629,'id':'c39f218c-2534-4299-a4d3-875dc85cd63e'},'ImportFile',{'name':null,'id':'ec9143e5-10d2-4bd6-9421-ab76505deb79','filename':'js2.csv'}],\n      [{'input':'{\"filename\":\"js1.csv\"}','task':'doProcessImport','created':1548086731306,'success':true,'active':false,'started':1548086731306,'completed':1548086734321,'id':'d54841a8-f955-4a06-bd22-ca4de4557956'},'ImportFile',{'name':null,'id':'f48bfd84-0b39-42b9-8bb7-97f5ca32634b','filename':'js1.csv'}],\n    ]};\n  default:\n    let err = new Error('URI not mocked: '+uri);\n    err.mock = true;\n    throw err;\n  }\n}\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { mockFetch } from './mocks.js';\n\nexport const API_BASE_URI = '/HelloVoterHQ/api/v1';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  if (e && e.mock) msg = e.message;\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(server, uri, method, body) {\n  if (!server) return;\n  if (server && server.mock) return mockFetch(server.jwt, uri, method, body);\n\n  if (!method) method = 'GET';\n\n  if (!server.hostname) {\n    notify_error({}, 'API server definition error.');\n    return;\n  }\n\n  let res = await fetch('https://' + server.hostname + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + server.jwt,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(refer) {\n  let imports = [];\n  try {\n    let data = await _fetch(refer.state.server, API_BASE_URI+'/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport async function _loadVolunteer(refer, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(refer, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\nexport async function _loadTurf(refer, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf.data[0];\n}\n\nexport async function _loadTurfs(refer, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(refer, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(refer, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(refer, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(refer, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + uri);\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttributes(refer) {\n  let forms = [];\n\n  try {\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/attribute/list');\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAddressData(refer, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(refer.props.server, API_BASE_URI+'/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(refer, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(refer.props.server, API_BASE_URI+'/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  }\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  }\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cb_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let data = {};\n    try {\n      data = await _fetch(this.props.server, API_BASE_URI+'/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      cb_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {this.state.cb_version ? (\n            'volunteer-broker version ' + this.state.cb_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {this.state.neo4j_version ? (\n            'Neo4j version ' + this.state.neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          &copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: obj.add[i] }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: obj.rm[i] }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { formId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { formId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(this, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { turfId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { turfId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(this, this.props.id),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'team', this.props.id),\n        _loadTurfs(this.props.refer, this.props.id),\n        _loadTurfs(this.props.refer),\n        _loadForms(this.props.refer, this.props.id),\n        _loadForms(this.props.refer),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  faTimesCircle,\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.jsx';\nimport { CardTeam } from './Teams.jsx';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForms,\n  _loadForm,\n  _loadAttributes,\n  _loadVolunteers,\n  _loadTeams,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nconst FTYPE = t.enums(\n  {\n    String: 'Text Input',\n    TEXTBOX: 'Large Text Box',\n    Number: 'Number',\n    Boolean: 'On/Off Switch',\n    SAND: 'Agree/Disagree'\n    //  'List': 'Select from List',\n  },\n  'FTYPE'\n);\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE\n};\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      name: t.String\n    });\n\n    this.state = {\n      loading: true,\n      forms: [],\n      attributes: [],\n      fields: fields,\n      order: order,\n      customForm: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n    case 'String':\n      return 'Text Input';\n    case 'TEXTBOX':\n      return 'Text Box';\n    case 'Number':\n      return 'Number';\n    case 'Boolean':\n      return 'On/Off Switch';\n    case 'SAND':\n      return 'Agree/Disagree';\n    case 'List':\n      return 'Select from List';\n    default:\n      return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({ fields, order });\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(this);\n      attributes = await _loadAttributes(this);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n        //if (a.values) fields[a.id].options =\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: Object.keys(this.state.fields),\n      };\n\n      await _fetch(this.props.server, API_BASE_URI+'/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  render() {\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                {Object.keys(this.state.fields).map(f => {\n                  let field = this.state.fields[f];\n                  return (\n                    <li key={f} style={{ marginLeft: 25 }}>\n                      {field.label + (field.required ? ' *' : '')} :{' '}\n                      {this.inputTypeToReadable(field.type)}{' '}\n                      <Icon icon={faTimesCircle} color=\"red\" />\n                    </li>\n                  );\n                })}\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'form', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'form', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { form } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull form={form} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteers,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  PlacesAutocomplete,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class Volunteers extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else {\n        if (c.ass.ready || c.ass.teams.length) ready.push(c);\n        else unassigned.push(c);\n      }\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n                <CardVolunteer\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisVolunteer.id ? true : false}\n              onClose={() => this.setState({ thisVolunteer: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardVolunteer\n                  key={this.state.thisVolunteer.id}\n                  id={this.state.thisVolunteer.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/promote',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/demote',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { formId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { formId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(this, this.props.id),\n        _loadForms(this.props.refer),\n        _loadTurfs(this.props.refer),\n        _loadTeams(this.props.refer)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n      {\n        value: 'auto',\n        id: 'auto',\n        label: (\n          <CardTurf\n            key=\"auto\"\n            turf={{\n              id: 'auto',\n              name: 'Area surrounnding this volunteer\\'s home address'\n            }}\n            refer={this}\n            icon={faHome}\n          />\n        )\n      }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        this.state.server,\n        API_BASE_URI+'/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisVolunteer: volunteer })}\n      >\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </button>\n    ) : (\n      <button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    # of doors knocked: 0\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        this.props.refer.state.server,\n        API_BASE_URI+'/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'turf', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState();\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState() {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(this.props.server, API_BASE_URI+'/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(this);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(this);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = API_BASE_URI+'/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(this.props.server, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => this.setState({selectedTurfOption}, () => this.doQuery());\n  handleAttributeChange = selectedAttributeOption => this.setState({selectedAttributeOption}, () => this.doQuery());\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  RootLoader\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,ques,addr,dbsz').split(',');\n\n    this.state = {\n      loading: true,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(this.props.server, API_BASE_URI+'/dashboard');\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        ques: {\n          name: 'Questions',\n          stat: data.questions,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n      </RootLoader>\n    );\n  }\n}\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n  componentDidMount() {\n    this._loadData();\n  }\n\n  state = {\n    server: this.props.server,\n    imports: [],\n    ...defaultState,\n  };\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(this.props.server, API_BASE_URI+'/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(this.props.server, API_BASE_URI+'/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(this.props.server, API_BASE_URI+'/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst tsToStr = ts => {\n  return new Date(ts).toString();\n};\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      server: this.props.server,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(this.state.server, API_BASE_URI+'/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router';\nimport jwt from 'jsonwebtoken';\nimport {notify_error} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let token;\n\n    try {\n      token = this.props.location.pathname.split('/').pop();\n      jwt.decode(token);\n      this.props.refer._loadData(token);\n    } catch (e) {\n      notify_error(e, 'Unable to extract jwt from URI');\n      token = 'error';\n    }\n\n    this.state = {token: token};\n  }\n\n  render() {\n    if (this.state.token === 'error') return (<div>There was an error parsing the jwt</div>);\n\n    return (\n      <Route render={() => (\n        <Redirect to=\"/\" />\n      )} />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport { mocked_users } from '../mocks.js';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nclass LogIn extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mock: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); this.props.refer.doSave(e, this.state.target); }} >\n            {(process.env.NODE_ENV === 'development')?\n              <FormControlLabel\n                control={<Checkbox id=\"mock\" name=\"mock\" value=\"mock\" color=\"primary\" checked={this.state.mock} onChange={(e, c) => this.setState({mock: c})} />}\n                label=\"DEVELOPMENT MODE\"\n              />\n              :''}\n            <ServerLiveOrMocked classes={classes} mock={this.state.mock} refer={this} qserver={this.props.refer.state.qserver} />\n          </form>\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nconst ServerLiveOrMocked = (props) => {\n\n  if (props.mock) return (\n    <Select\n      options={mocked_users}\n      placeholder=\"Choose a user to mock\"\n      onChange={(obj) => props.refer.props.refer.doSave(null, null, obj.value)}\n    />\n  );\n\n  return (\n    <div>\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n        <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.qserver} />\n      </FormControl>\n      <FormControlLabel\n        control={<Checkbox value=\"ack\" color=\"primary\" required />}\n        label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={props.classes.submit}\n        onClick={() => props.refer.setState({target: 'google'})}\n      >\n        Google Sign In\n      </Button>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.refer.setState({target: 'facebook'})}\n        className={props.classes.submit}\n      >\n        Facebook Sign In\n      </Button>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(LogIn);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(this, null, true),\n      _loadForms(this),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption =>\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(this, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(this, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push(p));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    console.warn(a);\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  server,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ @ {server.hostname}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n        onClick={() =>\n          (window.location.href =\n            '/HelloVoterHQ/#/volunteers/view/' + getUserProp('id'))\n        }\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      <Link to={'/map/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <NavigationIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Map\" />\n        </ListItem>\n      </Link>\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/tree/mast\n  er/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Jwt,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ server, refer, google_maps_key }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard server={server} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers server={server} />} />\n    <Route path=\"/teams/\" render={() => <Teams server={server} />} />\n    <Route path=\"/turf/\" render={() => <Turf server={server} />} />\n    <Route path=\"/forms/\" render={() => <Forms server={server} />} />\n    <Route\n      path=\"/map/\"\n      render={() => <Map server={server} apiKey={google_maps_key} />}\n    />\n    <Route path=\"/import/\" render={() => <ImportData server={server} />} />\n    <Route path=\"/queue/\" render={() => <Queue server={server} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics server={server} />} />\n    <Route path=\"/settings/\" render={() => <Settings server={server} />} />\n    <Route path=\"/jwt/\" render={props => <Jwt {...props} refer={refer} />} />\n    <Route path=\"/about/\" render={() => <About server={server} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  avatar: {\n    margin: 10\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      open: true,\n      menuLogout: false,\n      server: {},\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async jwt => {\n    let mock = false;\n\n    if (jwt) localStorage.setItem('jwt', jwt);\n    else jwt = localStorage.getItem('jwt');\n\n    let hostname = localStorage.getItem('server');\n    if (hostname === 'npm start') mock = true;\n\n    this.setState({\n      server: {\n        hostname: hostname,\n        jwt: jwt,\n        mock: mock,\n      }\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n\n    let data = await _fetch(this.state.server, API_BASE_URI+'/google_maps_key');\n\n    // load google places API\n    var aScript = document.createElement('script');\n    aScript.type = 'text/javascript';\n    aScript.src =\n      'https://maps.googleapis.com/maps/api/js?key=' +\n      data.google_maps_key +\n      '&libraries=places';\n    document.head.appendChild(aScript);\n\n    this.setState({ google_maps_key: data.google_maps_key });\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.server.jwt) return null;\n\n    try {\n      item = jwt.decode(this.state.server.jwt)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.removeItem('server');\n    localStorage.removeItem('jwt');\n    this.setState({ menuLogout: false, server: {} });\n  };\n\n  doSave = async (event, target, user) => {\n    // mocked user\n    if (user) {\n      let token = jwt.sign(user, 'shhhhh');\n      localStorage.setItem('server', 'npm start');\n      localStorage.setItem('jwt', token);\n      this.setState({\n        server: {\n          hostname: 'npm start',\n          jwt: token,\n          mock: true\n        }\n      });\n    } else {\n      // live poll\n      await this.singHello(event.target.server.value, target);\n    }\n  };\n\n  singHello = async (server, target) => {\n    let res;\n\n    localStorage.setItem('server', server);\n\n    try {\n      res = await fetch('https://' + server + API_BASE_URI+'/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (this.state.server.jwt ? this.state.server.jwt : 'of the one ring'),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ';\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ server: server, dbx: null, user: this.state.user });\n        return { error: false, flag: true };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { server } = this.state;\n\n    if (!server.hostname) return <Login refer={this} />;\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            server={server}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            classes={classes}\n            open={this.state.open}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes\n              server={server}\n              refer={this}\n              google_maps_key={this.state.google_maps_key}\n            />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}