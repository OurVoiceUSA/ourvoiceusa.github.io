{"version":3,"sources":["components/Volunteers/CardVolunteer.jsx","components/Turf/CardTurf.jsx","components/Turf/CardTurfFull.jsx","common.js","components/Volunteers/Volunteers.jsx","components/Map.jsx","components/Volunteers/CardVolunteerFull.jsx","components/Forms/Forms.jsx","components/Forms/FormEditor.jsx","components/Forms/CardForm.jsx","components/Forms/CardFormFull.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/Volunteers/index.js","components/About.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/Dashboard.jsx","components/Dashboard/index.js","components/QRCodes.jsx","components/Attribute/AddAttribute.js","components/Attributes.jsx","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","app.styles.js","components/Loading.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["TimeAgo","locale","en","extract_addr","addr","arr","split","length","shift","join","CardVolunteer","Component","constructor","props","super","handleFormsChange","selectedFormsOption","a","global","state","refer","setState","saving","obj","_handleSelectChange","adrm","add","forEach","push","_fetch","formId","vId","id","rm","Promise","all","_loadVolunteer","volunteer","notify_success","notify_error","handleTurfChange","selectedTurfOption","turfId","_loadData","forms","turf","hometurf","nearbyturf","loading","_loadForms","_loadTurfs","location","_loadNearbyTurfs","x","y","formOptions","value","label","turfOptions","f","_searchStringify","key","form","ass","t","turfs","icon","autoturf","faHome","_lockVolunteer","flag","term","this","componentDidMount","ReactTooltip","rebuild","componentDidUpdate","render","edit","alignItems","style","width","alt","name","src","avatar","primary","secondary","locationstr","VolunteerBadges","button","onClick","thisVolunteer","window","href","badges","admin","faCrown","color","data-tip","locked","faBan","ready","faCheckCircle","faExclamationTriangle","CardTurf","handleMembersChange","selectedMembersOption","volunteers","members","_loadTurf","_loadVolunteers","membersOption","c","display","padding","faStreetView","height","to","CardTurfFull","onChange","options","isMulti","isSearchable","placeholder","JSON","stringify","stats","spec","header","tooltip","params","rows","Object","keys","map","k","jobRuntime","start","end","prettyMs","jobNumber","num","formatNumber","fractionDigits","tsToStr","ts","Date","toString","msg","NotificationManager","success","e","error","console","warn","uri","method","body","server","token","https","match","fetch","orgId","headers","Authorization","res","status","Error","text","json","_browserLocation","isGeolocationAvailable","isGeolocationEnabled","coords","access","lng","longitude","lat","latitude","Icon","iconName","RootLoader","faSync","func","children","DialogSaving","aria-labelledby","aria-describedby","open","position","top","left","right","backgroundColor","disableShrink","o","parse","last_seen","created","toLowerCase","_loadImports","imports","data","_inviteLink","inviteCode","_loadQRCode","qrcode","QRCode","toDataURL","img","_loadQRCodes","qrcodes","byType","call","dist","_loadForm","_loadAttribute","attribute","_loadAttributes","attributes","_loadAddressData","_loadPeopleAddressData","aId","oldopt","newopt","prior","now","n","indexOf","p","PlacesAutocomplete","addressSearch","getInputProps","getSuggestionItemProps","suggestions","className","suggestion","description","InviteSomeone","ModalInvite","onClose","App","search","handlePageClick","pageNum","selected","perPage","localStorage","getItem","onTypeSearch","bind","handlePageNumChange","setItem","event","target","unassigned","denied","invited","includes","type","exact","path","ListVolunteers","paginate","list","idx","Math","floor","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","component","loadMarkerData","onMarkerClick","marker","showingInfoWindow","address","place","title","selectedPlace","activeMarker","onTurfClick","log","infoLocation","paths","activeTurf","mapProps","center","addresses","onMapClicked","statusColor","visits","polygons","geometry","geojson2polygons","polygon","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","strokeColor","strokeWeight","fillColor","fillOpacity","visible","ModalMarker","people","units","ModalPerson","person","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","CardVolunteerFull","format","email","phone","VolunteerAddress","slice","submitAddress","geocodeByAddress","getLatLng","pos","onTypeAddress","debounce","onSelect","Forms","handleClickDelete","menuDelete","handleCloseDelete","attributes_selected","fields","optional","values","_deleteForm","_createForm","addFormForm","getValue","formName","trim","atupdate","order","formServerItems","struct","String","formServerOptions","onChangeForm","ListForms","Form","ref","margin","Button","Dialog","DialogTitle","DialogActions","autoFocus","FormEditor","getList","id2List","onDragEnd","result","source","destination","droppableId","startIndex","endIndex","Array","from","splice","removed","reorder","index","droppableSource","droppableDestination","sourceClone","destClone","move","droppable","droppable2","flexDirection","AttributeDroppable","provided","snapshot","innerRef","isDraggingOver","background","item","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","required","inputTypeToReadable","CardForm","handleNameChange","handleAttributeChange","CircularProgress","faClipboard","onSave","CardFormFull","ListTurf","TurfOptions","handleStateChange","selectedStateOption","typeOptions","us_states","sldu","sldl","selectedDrawOption","stateOptions","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","accept","handleImportFiles","files","rel","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","readAsText","_deleteTurf","_createTurf","addTurfForm","objs","geoData","features","g","properties","NAME","precinctid","subprecinc","circleToPolygon","i","urlFromDist","failed","asyncForEach","val","replace","initState","thisTurf","onChangeTurf","_showSubmitButton","drawOptions","MapSelect","React","checked","map1","map2","_handleCheck","updateFormats","_setValue","_setMapValue","prop","_renderCheckbox","Checkbox","_renderMapOptions","Fragment","checkbox","dimensions","labelWidth","specVal","row","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","classes","theme","root","IconButton","disabled","aria-label","direction","TablePaginationActionsWrapped","withStyles","flexShrink","palette","marginLeft","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","emptyRows","min","Paper","tableWrapper","Table","table","TableHead","TableRow","Tooltip","TableCell","TableBody","s","funcItemTooltip","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","completed","Check","LinearProgress","paddingTop","variant","api_version","version","neo4j_version","process","faTwitter","faFacebook","faGlobe","renderLabelContent","percent","midAngle","transform","textAnchor","toFixed","_init","attributeOptions","doQuery","selectedAttributeOption","data_breakdown","include_null","d","pop","animation","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","fill","CardDashboard","sortableElement","faShieldAlt","flex","overflow","stat","Cards","sortableContainer","dash","card","cards","onSortEnd","oldIndex","newIndex","arrayMove","admins","noAdmins","vol","faUser","faMap","faChartPie","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","axis","Modal","getUserProp","Dashboard","QRCodes","thisQRCode","ListQRCodes","List","CardQRCode","qId","leaderOptions","_disableQRCode","onAutoTurfToggle","ListItem","ListItemAvatar","CardQRCodeFull","link","faQrcode","size","ListItemText","last_used","num_volunteers","useStyles","makeStyles","formControl","selectEmpty","AddAttribute","useState","setName","setValue","setType","showAddOps","setShowAddOps","additionalOptions","setAdditionalOptions","multi","setMulti","handleShowAddOps","handleAddOption","tempArray","concat","handleMultiChange","handleValueChange","addOpsCheck","FormControlLabel","control","FormControl","TextField","additionalOps","addAnotherBtn","handleOptionChange","filter","ind","deleteOption","showMultiCheck","InputLabel","Select","labelId","MenuItem","create","undefined","value2select","ucFirst","_deleteAttribute","_createAttribute","attr","addattributeForm","onChangeAttribute","addAttributeForm","ListAttributes","CardAttribute","onSaveName","onSaveType","CardAttributeFull","_pipe","args","PAPER_TABLE_SPEC","ImportMap","formatHeaders","field","formats","updateMapped","mapped","mapData","mappedAttributes","getMapped","fns","reduce","pipe","generateFormats","getAllIndexes","parseData","isArray","indexes","findIndex","total","next","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","record","defaultState","sending","submitting","ImportData","preProcess","filename","getRequiredFields","sendData","every","requiredID","r","meh","sepm","seps","RegExp","sepr","percentage","setTimeout","_resetState","preProcessError","Divider","selectedAttribute","onError","onFileLoaded","jobStatus","job","started","showErrorIfError","taskObjFromQueue","Queue","q","styles","main","marginRight","breakpoints","up","paper","submit","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","Loading","CssBaseline","Typography","role","Login","loginOptions","REACT_APP_NO_AUTH","pathname","dev","selectedLoginOption","reload","Avatar","onSubmit","preventDefault","doSave","LoginOption","fullWidth","htmlFor","Input","autoComplete","defaultValue","qserver","LogoutDialog","menuLogout","handleCloseLogout","_logout","Header","handleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","noWrap","MenuItems","assignments","handleClickLogout","experimental","ListItemIcon","Sidebar","handleDrawerClose","Drawer","NoMatch","Routes","Volunteers","Turf","hai","singHello","jwt","decode","clear","_loadKeys","google_maps_key","aScript","document","createElement","head","appendChild","connectForm","substring","host","retry","sleep","sm_oauth_url","get","sm","user","v","queryString","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca2be3fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteer,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  Icon,\n} from '../../common.js';\n\nimport { CardTurf } from '../Turf';\nimport { CardForm } from '../Forms';\nimport { CardVolunteerFull } from './CardVolunteerFull';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      volunteer: this.props.volunteer,\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { formId: add, vId: this.props.id }\n        ));\n      })\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { formId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: add, vId: this.props.id }\n        ));\n      })\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: rm, vId: this.props.id }\n        ));\n      })\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf] = await Promise.all([\n        _loadVolunteer(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' }\n    ];\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: (\n          <CardTurf\n            global={global}\n            key={t.id}\n            turf={t}\n            refer={this}\n            icon={volunteer.autoturf ? faHome : null}\n          />\n        )\n      });\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      formOptions,\n      turfOptions,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    const { global } = this.state;\n\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { global, volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull global={global} volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => {\n          this.props.refer.setState({ thisVolunteer: volunteer });\n          window.location.href = \"/HelloVoterHQ/#/volunteers/view/\"+volunteer.id;\n        }}>\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nconst VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turf: this.props.turf,\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { vId: add, turfId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: rm, turfId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove volunteers.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turf = {},\n      volunteers = [],\n      members = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members] = await Promise.all([\n        _loadTurf(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let membersOption = [];\n    let selectedMembersOption = [];\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      membersOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull global={global} turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { PaperTable } from '../Elements';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      Volunteers assigned to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      <h3>Turf Stats</h3>\n      <pre>{JSON.stringify(props.refer.state.turf.stats)}</pre>\n      <PaperTable\n        spec={[\n          {\n            header: 'Query Name',\n            tooltip: 'Constraints which define this attribute query.',\n            params: ['Name'],\n          },\n          {\n            header: 'Total Addresses',\n            tooltip: 'Total number of houses/buildings in this area.',\n            params: ['Total Addresses'],\n          },\n          {\n            header: 'Total People',\n            tooltip: 'Total number of people in this area.',\n            params: ['Total People'],\n          },\n          {\n            header: 'Total People Visited',\n            tooltip: 'Total number of people in this area who have been visited.',\n            params: ['Total People Visited'],\n          },\n          {\n            header: 'People Visited in past month',\n            tooltip: 'Total number of peple in this area who have been visited.',\n            params: ['People Visited in past month'],\n          },\n        ]}\n        rows={\n          Object.keys(props.refer.state.turf.stats[\"Stats by Attribute\"]).map(k => {\n            props.refer.state.turf.stats[\"Stats by Attribute\"][k]['Name'] = k;\n            return props.refer.state.turf.stats[\"Stats by Attribute\"][k];\n          })\n        }\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\nimport QRCode from 'qrcode';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function tsToStr(ts) {\n  return new Date(ts).toString();\n};\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(global, uri, method, body) {\n  if (!global || !global.state) return;\n\n  const { server, token } = global.state;\n\n  let https = true;\n  if (server.match(/:8080$/)) https = false;\n\n  if (!method) method = 'GET';\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ' + (global.state.orgId?'/'+global.state.orgId:'') + '/api/v1' + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(global) {\n  let imports = [];\n  try {\n    let data = await _fetch(global, '/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport function _inviteLink(inviteCode, server, orgId) {\n  return 'http'+(server.match(/:8080$/)?'':'s')+'://'+server+'/HelloVoterHQ/'+(orgId?orgId+'/':'')+'mobile/invite?inviteCode='+inviteCode+'&'+(orgId?'orgId='+orgId:'server='+server);\n}\n\nexport async function _loadQRCode(global, id) {\n  let qrcode = {};\n  try {\n    qrcode = await _fetch(\n      global,\n      '/qrcode/get?id=' + id\n    );\n    qrcode.img = await QRCode.toDataURL(_inviteLink(id, global.state.server, global.state.orgId));\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode info.');\n  }\n  return qrcode;\n}\n\nexport async function _loadQRCodes(global, id) {\n  let qrcodes = [];\n\n  try {\n    qrcodes = await _fetch(global, '/qrcode/list');\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode data.');\n  }\n\n  return qrcodes;\n}\n\nexport async function _loadVolunteer(global, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      global,\n      '/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  if (!volunteer.ass) volunteer.ass = {forms:[],turfs:[]};\n  return volunteer;\n}\n\nexport async function _loadVolunteers(global, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(global, '/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\n\nexport async function _loadTurf(global, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      global,\n      '/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTurfs(global, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    let data = await _fetch(global, '/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(global, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(global, '/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadForm(global, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      global,\n      '/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(global) {\n  let forms = [];\n\n  try {\n    let uri = 'form/list';\n\n    forms = await _fetch(global, '/' + uri);\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttribute(global, id) {\n  let attribute = {};\n\n  try {\n    let data = await _fetch(global, '/attribute/get?id='+id);\n    if (data.data) attribute = data.data[0];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  return attribute;\n}\n\nexport async function _loadAttributes(global) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(global, '/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\n\nexport async function _loadAddressData(global, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(global, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  now.forEach(n => {\n    if (prior.indexOf(n) === -1) add.push(n);\n  });\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  prior.forEach(p => {\n    if (now.indexOf(p) === -1) rm.push(p);\n  });\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport const InviteSomeone = props => (\n  <div>\n    <Button onClick={() => props.refer.setState({ModalInvite: true})} color=\"primary\">\n      Invite Someone\n    </Button>\n    <Modal\n    aria-labelledby=\"simple-modal-title\"\n    aria-describedby=\"simple-modal-description\"\n    open={props.refer.state.ModalInvite ? true : false}\n    onClose={() => props.refer.setState({ ModalInvite: false })}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: 100,\n          left: 200,\n          right: 200,\n          backgroundColor: 'white',\n          padding: 40\n        }}>\n        To invite someone, have them use the HelloVoter mobile app to scan a QR Code\n        (created in the \"QR Codes\" menu) and they will recieve the same assignments\n        that QR Code has.\n      </div>\n    </Modal>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  _fetch,\n  _searchStringify,\n  _loadVolunteers,\n  RootLoader,\n  DialogSaving,\n  InviteSomeone,\n} from '../../common.js';\n\nimport { CardVolunteer } from './CardVolunteer'\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n    let invited = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else if (c.invited) invited.push(c);\n      else if (c.ass.ready) ready.push(c);\n      else unassigned.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n          <InviteSomeone refer={this} />\n\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers global={global} refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/invited\"\n              render={() => (\n                <div>\n                  <ListVolunteers\n                    global={global}\n                    refer={this}\n                    type=\"Invited\"\n                    volunteers={invited}\n                  />\n                  <Button onClick={async () => {\n                    let obj = await _fetch(\n                      global,\n                      '/volunteer/invite',\n                      'POST'\n                    );\n                    if (obj.token) {\n                      this.setState({ thisVolunteer: {id: 'invite:'+obj.token} });\n                    } else {\n                      notify_error({}, 'Invite failed.');\n                    }\n                  }} color=\"primary\">\n                    Invite Someone\n                  </Button>\n                </div>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n              <CardVolunteer\n                global={global}\n                key={props.match.params.id}\n                id={props.match.params.id}\n                edit={true}\n                refer={this}\n              />\n              </div>)}\n            />\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer global={global} key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type} Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(global, true),\n      _loadForms(global),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(global, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    const { global } = this.state;\n\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(global, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport Select from 'react-select';\n\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  PlacesAutocomplete,\n} from '../../common.js';\n\nimport { CardTurf } from '../Turf';\nimport { CardForm } from '../Forms';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <Button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </Button>\n    ) : (\n      <Button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </Button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress global={global} refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Forms this volunteer is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      global: props.global,\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    const { global } = this.state;\n\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        global,\n        '/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <Button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardForm, FormEditor } from '.';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadForms,\n  _loadAttributes,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(global);\n      attributes = await _loadAttributes(global);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    const { global, attributes_selected } = this.state;\n\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: attributes_selected.map(a => a.id),\n      };\n\n      await _fetch(global, '/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  atupdate = props => {\n    const { attributes_selected } = props;\n    this.setState({attributes_selected});\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms global={global} forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <FormEditor onChange={this.atupdate} attributes={this.state.attributes} selected={this.state.attributes_selected} />\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm global={props.global} key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nfunction inputTypeToReadable(type) {\n  switch (type) {\n  case 'String':\n    return 'Text Input';\n  case 'TEXTBOX':\n    return 'Text Box';\n  case 'Number':\n    return 'Number';\n  case 'Boolean':\n    return 'On/Off Switch';\n  case 'SAND':\n    return 'Agree/Disagree';\n  case 'List':\n    return 'Select from List';\n  default:\n    return type;\n  }\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nexport default class FormEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n\n    this.state = {\n      onChange: props.onChange,\n      attributes: [],\n      attributes_selected: props.selected,\n    };\n\n    // any attributes not selected go in attributes\n    props.attributes.forEach(attribute => {\n      if (this.state.attributes_selected.map(a => a.id).indexOf(attribute.id) === -1) this.state.attributes.push(attribute);\n    });\n\n    this.id2List = {\n      droppable: 'attributes',\n      droppable2: 'attributes_selected',\n    };\n\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n    const { onChange } = this.state;\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const attributes = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      let state = { attributes };\n\n      if (source.droppableId === 'droppable2') {\n        state = { attributes_selected: attributes };\n      }\n\n      this.setState(state, () => onChange(this.state));\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      this.setState({\n        attributes: result.droppable,\n        attributes_selected: result.droppable2\n      }, () => onChange(this.state));\n    }\n  };\n\n  render() {\n    const { refer, attributes, attributes_selected } = this.state;\n\n    return (\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <AttributeDroppable label=\"Available Attributes\" droppableId=\"droppable\" attributes={attributes} />\n          &nbsp;\n          Drag to assign\n          &nbsp;\n          <AttributeDroppable label=\"Attributes on this Form\" droppableId=\"droppable2\" attributes={attributes_selected} />\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst AttributeDroppable = props => (\n  <Droppable droppableId={props.droppableId}>\n      {(provided, snapshot) => (\n          <div\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}>\n              {props.label}\n              {props.attributes.map((item, index) => (\n                  <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}>\n                      {(provided, snapshot) => (\n                          <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={getItemStyle(\n                                  snapshot.isDragging,\n                                  provided.draggableProps.style\n                              )}>\n                              {item.label + (item.required ? ' *' : '')} :{' '}\n                              {inputTypeToReadable(item.type)}{' '}\n                          </div>\n                      )}\n                  </Draggable>\n              ))}\n              {provided.placeholder}\n          </div>\n      )}\n  </Droppable>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\nimport EdiText from 'react-editext';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardFormFull } from '.';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForm,\n  _loadVolunteers,\n  _loadAttributes,\n  Icon,\n} from '../../common.js';\n\nexport default class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      form: this.props.form,\n      selectedMembersOption: [],\n      attributes: [],\n      attributes_selected: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleNameChange = async (name) => {\n    const { global } = this.state;\n\n    try {\n      await _fetch(\n        global,\n        '/form/update',\n        'POST',\n        { formId: this.props.id, name: name }\n      );\n      notify_success('Form name saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to save form name.');\n    }\n  }\n\n  handleAttributeChange = async ({attributes_selected}) => {\n    const { global } = this.state;\n\n    try {\n      await _fetch(\n        global,\n        '/form/update',\n        'POST',\n        { formId: this.props.id, attributes: attributes_selected.map(a => a.id) }\n      );\n      notify_success('Attributes assignments saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove attribute.');\n    }\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { vId: add, formId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { vId: rm, formId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove volunteers.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let form = {},\n      volunteers = [],\n      members = [],\n      attributes = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, attributes] = await Promise.all([\n        _loadForm(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'form', this.props.id),\n        _loadAttributes(global)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let membersOption = [];\n    let selectedMembersOption = [];\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      attributes,\n      attributes_selected: form.attributes.map(a => {\n        if (!a.label) a.label = a.name;\n        return a;\n      }),\n      volunteers,\n      membersOption,\n      selectedMembersOption,\n      loading: false,\n    });\n\n  };\n\n  render() {\n    const { global, form, attributes, attributes_selected } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {this.props.edit ? (\n              <EdiText type=\"text\" value={form.name} onSave={this.handleNameChange} />\n            ) :\n              form.name\n            }\n            &nbsp;\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull global={global} form={form} refer={this} attributes={attributes} selected={attributes_selected} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { FormEditor } from '.';\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Volunteers assigned to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <p>\n    NOTE: After any changes here, users will see these updates the next time they enter the map\n    </p>\n    <FormEditor\n      onChange={props.refer.handleAttributeChange}\n      attributes={props.attributes} selected={props.selected}\n    />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf global={props.global} key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { asyncForEach } from 'ourvoiceusa-sdk-js';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState(props);\n    this.state.global = props.global;\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState(props) {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    const { global } = this.state;\n\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        let geoData = JSON.parse(this.state.importFileData);\n        if (geoData.type === \"FeatureCollection\") {\n          geoData.features.forEach(g => {\n            if (g.properties.name) g.name = g.properties.name;\n            else if (g.properties.NAME) g.name = g.properties.NAME;\n            else g.name = g.properties.precinctid + (g.properties.subprecinc?\" \"+g.properties.subprecinc:\"\");\n            objs.push(g);\n          });\n        } else {\n          objs.push(geoData);\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      let failed = 0;\n      let success = 0;\n      await asyncForEach(objs, async (obj) => {\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (obj.name) name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        try {\n          await _fetch(global, '/turf/create', 'POST', {name, geometry});\n          success++;\n        } catch (e) {\n          failed++;\n        }\n      });\n      notify_success('Created '+success+' Turf.');\n      if (failed > 0) notify_error({success, failed}, 'Failed to create '+failed+' Turf.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf global={global} turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","import { CardVolunteer } from './CardVolunteer';\nimport Volunteers from './Volunteers';\n\nexport {\n  CardVolunteer,\n  Volunteers\n};\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      api_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    try {\n      data = await _fetch(global, '/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      api_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    const { api_version, neo4j_version } = this.state;\n\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {api_version ? (\n            'HelloVoterAPI version ' + api_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {neo4j_version ? (\n            'Neo4j version ' + neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        {(api_version && api_version !== \"unknown\" && api_version !== process.env.REACT_APP_VERSION)&&\n        <h3 style={{color: \"red\"}}>WARNING: API version doesn't match HQ version.</h3>\n        }\n        <div>\n          &copy; 2020, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoter/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md\">Privacy Policy</a>\n          ||\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md\">Terms of Service</a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(global);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    const { global } = this.state;\n\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = '/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(global, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);\n","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            key={card.name}\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  _fetch,\n  notify_error,\n  RootLoader,\n  InviteSomeone,\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(global, '/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    const { global, data, loading, noAdmins } = this.state;\n\n    return (\n      <RootLoader flag={loading} func={this._loadData}>\n        {(data.version && data.version !== process.env.REACT_APP_VERSION)&&\n        <h3 style={{color: \"red\"}}>WARNING: API version doesn't match HQ version.</h3>\n        }\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <InviteSomeone refer={this} />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {global.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\nimport EdiText from 'react-editext';\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadQRCode,\n  _loadQRCodes,\n  _loadForms,\n  _loadTurfs,\n  _inviteLink,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class QRCodes extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('qrcodesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisQRCode: {},\n      qrcodes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('qrcodesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcodes = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      qrcodes = await _loadQRCodes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load qrcodes.');\n    }\n    this.setState({ loading: false, qrcodes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let qrcodes = [];\n\n    this.state.qrcodes.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      qrcodes.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Route\n              exact={true}\n              path=\"/qrcode/\"\n              render={() => <ListQRCodes global={global} refer={this} qrcodes={qrcodes} />}\n            />\n            <Route\n              path=\"/qrcode/view/:id\"\n              render={props => (\n                <CardQRCode\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n              )}\n            />\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListQRCodes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.qrcodes.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardQRCode global={props.global} key={c.id} qrcode={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.qrcodes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}QRCodes ({props.qrcodes.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n      <Button onClick={async () => {\n        let obj = await _fetch(\n          props.global,\n          '/qrcode/create',\n          'POST'\n        );\n        if (obj && obj.id) {\n          props.refer.setState({ thisQRCode: obj});\n          props.refer._loadData();\n        } else {\n          notify_error({}, 'QRCode creation failed.');\n        }\n      }} color=\"primary\">\n        Generate QR CODE\n      </Button>\n    </div>\n  );\n};\n\nexport class CardQRCode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      qrcode: this.props.qrcode,\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.qrcode) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/form/add',\n          'POST',\n          { formId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/form/remove',\n          'POST',\n          { formId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/turf/add',\n          'POST',\n          { turfId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/turf/remove',\n          'POST',\n          { turfId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcode = {},\n      forms = [],\n      turf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [qrcode, forms, turf] = await Promise.all([\n        _loadQRCode(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    let leaderOptions = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n    ];\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    qrcode.ass.forms.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    qrcode.ass.turfs.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: (\n          <CardTurf\n            global={global}\n            key={t.id}\n            turf={t}\n            refer={this}\n          />\n        )\n      });\n    });\n\n    this.setState({\n      loading: false,\n      qrcode,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedFormsOption,\n      selectedTurfOption,\n    });\n  };\n\n  _disableQRCode = async (qrcode, flag) => {\n    const { global } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/disable',\n        'POST',\n        { id: qrcode.id }\n      );\n      notify_success('QRCode has been disabled.');\n    } catch (e) {\n      notify_error(e, 'Unable to disable QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  };\n\n  onAutoTurfToggle = async (x,val) => {\n    const { global, qrcode } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/update',\n        'POST',\n        { id: qrcode.id, autoturf: val }\n      );\n      notify_success('QRCode has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  }\n\n  onSave = async (val) => {\n    const { global, qrcode } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/update',\n        'POST',\n        { id: qrcode.id, name: val }\n      );\n      notify_success('QRCode has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  }\n\n  render() {\n    const { global, qrcode } = this.state;\n\n    if (!qrcode || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <img alt=\"QR Code\" src={qrcode.img} />\n            </ListItemAvatar>\n          </ListItem>\n          <CardQRCodeFull global={global} qrcode={qrcode} refer={this} link={_inviteLink(qrcode.id, global.state.server, global.state.orgId)} onSave={this.onSave} onAutoTurfToggle={this.onAutoTurfToggle} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => {\n          this.props.refer.setState({ thisQRCode: qrcode });\n          window.location.href = \"/HelloVoterHQ/#/qrcode/view/\"+qrcode.id;\n        }}>\n        <ListItemAvatar>\n          <Icon icon={faQrcode} size={\"large\"} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={qrcode.name}\n          secondary={\"\"}\n        />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardQRCodeFull = props => (\n  <div>\n    <h1><EdiText type=\"text\" value={props.qrcode.name} onSave={props.onSave} /></h1>\n    <br />\n    <br />\n    Link to use on a mobile device: <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>{props.link}</a>\n    <br />\n    <br />\n    Last Used:{' '}\n    {(props.qrcode.last_used?new TimeAgo('en-US').format(new Date(props.qrcode.last_used-30000)):'Never')}\n    <br />\n    Number of people who've used it: {props.qrcode.num_volunteers}\n    <br />\n    <br />\n    <div>\n      Forms this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Auto-assign nearest turf: <Checkbox color=\"primary\" checked={(props.qrcode.autoturf?true:false)} onChange={props.onAutoTurfToggle} />\n      <br />\n      {!props.qrcode.autoturf&&\n      <div>\n      Turf this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      </div>\n      }\n    </div>\n    <br />\n    {props.qrcode.disabled&&\n    <div>This QR Code is disabled</div>\n    }\n    {!props.qrcode.disabled&&\n    <Button onClick={() => props.refer._disableQRCode(props.qrcode, false)}>\n      Disable QRCode\n    </Button>\n    }\n  </div>\n);\n","import React, {useState} from 'react';\n\nimport { Checkbox, Select, FormControl,FormControlLabel,InputLabel,\n        MenuItem,TextField,Button,IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n/**\n * This form isn't very dynamic with its construction, but does re-render\n * based on the type of attribute selected in the dropdown.  The only property\n * needed is the callback function to send back the attribute object.\n * Uses material-ui for the form elements.\n * @param {*} props\n */\nconst AddAttribute = (props) => {\n\n    //need some state for UI\n    //name - string\n    const [name, setName] = useState('');\n\n    //type - string\n    const [value, setValue] = useState('string');\n\n    //type - string\n    const [type, setType] = useState('string');\n\n    const [showAddOps, setShowAddOps] = useState(false);\n\n    //additionalOptions - array of strings\n    const [additionalOptions, setAdditionalOptions] = useState([]);\n\n    //multi-select flag - bool only on additional options.\n    const [multi, setMulti] = useState(false);\n\n    const handleShowAddOps = (event) => {\n        setShowAddOps(event.target.checked);\n    };\n\n    const handleTypeChange = (event) => {\n        setType(event.target.value);\n        if(event.target.value !== 'string' && showAddOps)\n            setShowAddOps(false);\n    };\n\n    const handleAddOption = () => {\n        const tempArray = additionalOptions.concat('');\n        setAdditionalOptions(tempArray);\n    };\n\n    const deleteOption = (index) => {\n        const tempArray = additionalOptions.filter((value,ind) => index != ind);\n        setAdditionalOptions(tempArray);\n    };\n\n    const handleNameChange = (event) => {\n        setName(event.target.value);\n    };\n\n    const handleMultiChange = (event) => {\n        setMulti(event.target.checked);\n    }\n\n    const handleValueChange = (event) => {\n        setValue(event.target.value);\n    }\n\n    const handleOptionChange = (event, index) => {\n        const tempArray = [];\n        for ( let key in additionalOptions) {\n            if(key == index) {\n                tempArray.push(event.target.value);\n            } else {\n                tempArray.push(additionalOptions[key]);\n            }\n        }\n\n        setAdditionalOptions(tempArray);\n    };\n\n    let addOpsCheck = null;\n\n    if(type === 'string') {\n        addOpsCheck = (\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={showAddOps}\n                        onChange={handleShowAddOps}\n                        value=\"showAdd\"\n                        color=\"primary\"\n                    />\n            }\n            label=\"Additional Options\"\n          />\n        );\n    }\n\n    if (type === 'hyperlink') {\n        addOpsCheck = (\n          <FormControl className={useStyles.formControl}>\n              <TextField\n                id=\"value\"\n                label=\"URL\"\n                onChange={(event) => handleValueChange(event)}\n              />\n          </FormControl>\n        );\n    }\n\n    if (type === 'note') {\n        addOpsCheck = (\n          <FormControl className={useStyles.formControl}>\n              <TextField\n                id=\"value\"\n                label=\"Note text\"\n                onChange={(event) => handleValueChange(event)}\n              />\n          </FormControl>\n        );\n    }\n\n    let additionalOps = null;\n    let addAnotherBtn = null;\n\n    if(showAddOps) {\n        additionalOps = (\n            additionalOptions.map((data,index) => {\n                return (\n                <React.Fragment key={index}>\n                <FormControl key={index} className={useStyles.formControl}>\n                    <TextField id={\"option-\"+(index+1)}\n                            label={\"Option \"+(index+1)}\n                            onChange={(event) => handleOptionChange(event,index)}\n                            value={data} />\n                </FormControl>\n                <IconButton aria-label=\"delete\" onClick={() => deleteOption(index)}>\n                    <DeleteIcon />\n                </IconButton>\n                <br/>\n                <br/>\n                </React.Fragment>)\n            })\n        );\n        addAnotherBtn = (\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAddOption} >Add Option</Button>\n        );\n\n    }\n\n    let showMultiCheck = null;\n\n    if(additionalOptions.length > 1) {\n        showMultiCheck = (\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={multi}\n                        onChange={handleMultiChange}\n                        value=\"showMulti\"\n                        color=\"primary\"\n                    />\n            }\n            label=\"Mutli-Select\"\n          />\n        );\n    }\n\n    //build the return object, format unknown.\n    const buildAttr = () => {\n        return {\n            name: name,\n            value: value,\n            type: type,\n            options: (additionalOptions.length?additionalOptions:undefined),\n            multi: multi\n        };\n    }\n\n    return (\n        <div>\n            <h3>Enter Attribute Details</h3>\n            <FormControl className={useStyles.formControl}>\n                <TextField required\n                    id=\"standard-required\"\n                    label=\"Name\"\n                    value={name}\n                    onChange={handleNameChange} />\n            </FormControl>\n            <br/>\n            <br/>\n            <FormControl className={useStyles.formControl}>\n                <InputLabel id=\"attribute-type-label\">Type</InputLabel>\n                <Select\n                    labelId=\"attribute-type-label\"\n                    id=\"attribute-type\"\n                    value={type}\n                    onChange={handleTypeChange}\n                >\n                <MenuItem value='string'>Text</MenuItem>\n                <MenuItem value='textbox'>Textbox</MenuItem>\n                <MenuItem value='number'>Number</MenuItem>\n                <MenuItem value='boolean'>On/Off Switch (Boolean)</MenuItem>\n                <MenuItem value='hyperlink'>Hyperlink</MenuItem>\n                <MenuItem value='note'>Note</MenuItem>\n                {/* TODO: <MenuItem value='date'>Date</MenuItem> */}\n                {/* TODO: <MenuItem value='sand'>Agree/Disagree</MenuItem> */}\n                </Select>\n            </FormControl>\n            &emsp;&emsp;{addOpsCheck}\n            <br/>\n            <br/>\n            {additionalOps}\n            {/* TODO: showMultiCheck */}\n            <br/>\n            {addAnotherBtn}&emsp;\n            <Button variant=\"contained\"\n                color=\"primary\"\n                onClick={() => props.create(buildAttr())} >\n                Create Attribute\n            </Button>\n        </div>\n    );\n}\n\nexport default AddAttribute;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport EdiText from 'react-editext';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\nimport {ucFirst} from 'ourvoiceusa-sdk-js';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport AddAttribute from './Attribute/AddAttribute';\n\nimport {\n  _loadAttribute,\n  _loadAttributes,\n  _searchStringify,\n  _fetch,\n  notify_error,\n  notify_success,\n  RootLoader,\n  DialogSaving,\n} from '../common.js';\n\nfunction value2select(val) {\n  return {value: val, label: ucFirst(val)};\n}\n\nconst typeOptions = [\n  value2select(\"string\"),\n  value2select(\"boolean\"),\n  value2select(\"number\"),\n  value2select(\"textbox\"),\n];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('attributesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      attributes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Attribute Name',\n          error: 'You must enter an Attribute name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.addattributeForm);\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeAttribute(addAttributeForm) {\n    console.log(\"Changing attributeState: \",addAttributeForm);\n    //this.setState({ addAttributeForm });\n    this.setState({name: addAttributeForm.name});\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('attributesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteAttribute = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/attribute/delete', 'POST', {\n        id: id,\n      });\n      notify_success('Attribute has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete Attributes.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _createAttribute = async (attr) => {\n    //console.log(attr);\n    const { global } = this.state;\n\n    //let json = this.addAttributeForm.getValue();\n    let json = attr;\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/attribute/create', 'POST', json);\n      notify_success('Attribute has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create Attribute.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let attributes = [];\n\n    try {\n      attributes = await _loadAttributes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, attributes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.attributes.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/attributes/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListAttributes global={global} refer={this} attributes={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/attributes/add\"\n            render={() => (\n              // <div>\n              //   <t.form.Form\n              //     // ref={ref => (this.addattributeForm = ref)}\n              //     type={this.formServerItems}\n              //     options={this.formServerOptions}\n              //     onChange={e => this.onChangeAttribute(e)}\n              //     value={this.state.name}\n              //   />\n              //   <button onClick={() => this._createAttribute()}>Submit</button>\n              // </div>\n              <AddAttribute create={(data) => this._createAttribute(data)}/>\n            )}\n          />\n          <Route\n            path=\"/attributes/view/:id\"\n            render={props => (\n              <div>\n                <CardAttribute\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete attribute\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this attribute?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteAttribute(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListAttributes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.attributes.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardAttribute global={props.global} key={t.id} attribute={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.attributes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Attributes ({props.attributes.length})\n      </h3>\n      <Link to={'/attributes/add'}>\n        <button>Add attribute</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardAttribute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      attribute: this.props.attribute,\n      selectedMembersOption: [],\n    };\n\n    this.onSaveName = this.onSaveName.bind(this);\n    this.onSaveType = this.onSaveType.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.attribute) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let attribute = {};\n    this.setState({ loading: true });\n\n    try {\n      [\n        attribute,\n      ] = await Promise.all([\n        _loadAttribute(global, this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load attribute info.');\n      return this.setState({ loading: false });\n    }\n\n    this.setState({\n      attribute,\n      loading: false,\n    });\n  };\n\n  onSave = async (type, val) => {\n    const { global, attribute } = this.state;\n\n    this.setState({ saving: true });\n\n    let obj = {id: attribute.id};\n    obj[type] = val;\n\n    try {\n      await _fetch(\n        global,\n        '/attribute/update',\n        'POST',\n        obj\n      );\n      notify_success('Attribute has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update Attribute.');\n    }\n\n    this._loadData();\n  }\n\n  onSaveName(val) {\n    this.onSave('name', val);\n  }\n\n  onSaveType(val) {\n    this.onSave('type', val);\n  }\n\n  render() {\n    const { attribute } = this.state;\n\n    if (!attribute || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <PaperclipIcon />{' '}\n            {attribute.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/attributes/view/' + attribute.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardAttributeFull attribute={attribute} onSaveName={this.onSaveName} onSaveType={this.onSaveType} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardAttributeFull = ({attribute, onSaveName, onSaveType}) => (\n  <div>\n    <h1><EdiText type=\"text\" value={attribute.name} onSave={onSaveName} onSaveType={onSaveType} /></h1>\n    <Select\n      value={value2select(attribute.type)}\n      onChange={onSaveType}\n      options={typeOptions}\n      isMulti={false}\n      isSearchable={true}\n      placeholder=\"Select an attribute type\"\n    />\n    {JSON.stringify(attribute)}\n  </div>\n);\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.data || [],\n      headers: this.props.headers || [],\n      fields: props.fields,\n      formats: {},\n      mapped: [],\n    };\n  }\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => {\n        const mappedAttributes = Object.keys(this.state.formats).map((key) => {\n          if (this.state.formats[key] && this.state.formats[key].value && this.state.formats[key].value.length > 0) {\n            return key\n          }\n        })\n        const test = mappedAttributes.filter((k) => k);\n        this.props.getMapped && this.props.getMapped(this.state.mapped, mappedAttributes)\n      }\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => format.value && i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { PAPER_TABLE_SPEC } from './utilities';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport AddIcon from '@material-ui/icons/Add';\nimport Select from 'react-select';\n\nimport {ucFirst} from 'ourvoiceusa-sdk-js';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  _loadAttributes,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nfunction value2select(val) {\n  return {value: val, label: ucFirst(val)};\n}\n\nexport default class ImportData extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      imports: [],\n      attributes: [],\n      fields: [\n        'Unique Record ID',\n        'Street Address',\n        'Unit',\n        'City',\n        'State',\n        'Zip',\n        'Longitude',\n        'Latitude',\n      ],\n      required: [],\n      mappedAttributes: [],\n      ...defaultState,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  getRequiredFields = async (global) => {\n    let required = [];\n\n    try {\n      required = await _fetch(global, '/import/required-fields');\n    } catch (e) {\n      notify_error(e, 'Unable to load required fields.');\n    }\n\n    return required;\n  };\n\n  sendData = async () => {\n    const valid = this.state.required.every((requiredID) => {\n      return this.state.mappedAttributes.indexOf(this.state.fields[requiredID]) !== -1;\n    })\n\n    if (!valid) {\n      notify_error(null, `Required fields: ${this.state.required.map((r)=>this.state.fields[r])}`)\n      return\n    }\n\n    const { global, fields, mapped: data, filename, required } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n\n    await _fetch(global, '/import/begin', 'POST', {\n      filename: filename.name,\n      attributes: fields.filter((meh,idx) => idx >= 8),\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(global, '/import/add', 'POST', {\n        filename: filename.name,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(global, '/import/end', 'POST', {\n      filename: filename.name,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let imports = [];\n    let attributes = [];\n    let required = [];\n\n    this.setState({ loading: true });\n    try {\n      attributes = await _loadAttributes(global);\n      imports = await _loadImports(global);\n      required = await this.getRequiredFields(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports, attributes, required }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = (mapped, mappedAttributes) => this.setState({ mapped, mappedAttributes });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      attributes,\n      fields,\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <PaperclipIcon />\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Select\n          value={this.state.selectedAttribute}\n          options={attributes.filter(a => fields.indexOf(a.label) === -1).map(a => {\n            return {\n              value: a.id,\n              label: a.name,\n            };\n          })}\n          onChange={(selectedAttribute) => this.setState({selectedAttribute})}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute\"\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            let { fields, selectedAttribute } = this.state;\n            if (!selectedAttribute) return;\n            fields.push(selectedAttribute.label);\n            this.setState({fields, selectedAttribute: null})\n          }}\n        >\n          <AddIcon /> Add Attribute\n          <Divider variant=\"middle\" />\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  _fetch,\n  tsToStr,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      global: props.global,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(global, '/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Loading extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            HelloVoterHQ is loading...\n          </Typography>\n          <CircularProgress height={15} />\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loading);\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\n\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let loginOptions = [];\n    if (!process.env.REACT_APP_NO_AUTH) loginOptions = [{label: 'Organization ID', value: 'org'}, {label: '3rd Party Server', value: 'server'}];\n    if (process.env.NODE_ENV === 'development') loginOptions.unshift({label: 'LOCAL DEVELOPMENT', value: 'dev'});\n\n    let token;\n\n    try {\n      if (this.props.location.pathname.match(/\\/jwt\\//)) {\n        token = this.props.location.pathname.split('/').pop();\n      }\n    } catch(e) {\n      console.warn(e);\n    }\n\n    this.state = {\n      global: props.global,\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n      selectedLoginOption: loginOptions[0],\n      loginOptions: loginOptions,\n    };\n\n  }\n\n  componentDidMount() {\n    const { token } = this.state;\n\n    if (token) {\n      localStorage.setItem('jwt', token);\n      setTimeout(() => {window.location.href = '/HelloVoterHQ/#/'}, 500);\n      setTimeout(() => {window.location.reload()}, 1500);\n    }\n  }\n\n  render() {\n    const { global, classes, token, loginOptions, selectedLoginOption } = this.state;\n\n    if (token) return (<Loading classes={classes} />);\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); global.doSave(e, this.state.target); }} >\n            <Select\n              value={selectedLoginOption}\n              options={loginOptions}\n              onChange={selectedLoginOption => this.setState({selectedLoginOption})}\n            />\n            <center>\n              <br />\n              &nbsp; || &nbsp;\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md\">Privacy Policy</a>\n              &nbsp; || &nbsp;\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md\">Terms of Service</a>\n              &nbsp; || &nbsp;\n            </center>\n            <LoginOption global={global} refer={this} />\n            {(process.env.REACT_APP_NO_AUTH)&&\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({target: 'none'})}\n            >\n              Sign In\n            </Button>\n            ||\n            <div>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={() => this.setState({target: 'google'})}\n              >\n                Google Sign In\n              </Button>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => this.setState({target: 'facebook'})}\n                className={classes.submit}\n              >\n                Facebook Sign In\n              </Button>\n            </div>\n            }\n          </form>\n        </Paper>\n        <br />\n        <center>\n          Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA\n          <p />\n          Not for any candidate or political party.\n          <p />\n          Copyright (c) 2020, Our Voice USA. All rights reserved.\n          <p />\n          This program is free software; you can redistribute it and/or\n          modify it under the terms of the GNU Affero General Public License\n          as published by the Free Software Foundation; either version 3\n          of the License, or (at your option) any later version.\n        </center>\n      </main>\n    );\n  }\n}\n\nconst LoginOption = props => {\n  switch (props.refer.state.selectedLoginOption.value) {\n    case 'org':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Enter your Organization ID. Example: NCC1701</InputLabel>\n            <Input id=\"orgId\" name=\"orgId\" autoComplete=\"orgId\" autoFocus defaultValue={props.global.state.orgId} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that you have read and agreed to our Terms of Service.\"\n          />\n        </div>\n      );\n    case 'server':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.global.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's Terms of Service.\"\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  global,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ {(global.state.orgId?'Organization ID: '+global.state.orgId:'@ '+global.state.server)}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ assignments, handleClickLogout, experimental }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      {assignments.admin&&\n      <div>\n      <Link to={'/qrcode/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AspectRatioIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"QR Codes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </div>\n    }\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  assignments,\n  experimental,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems assignments={assignments} handleClickLogout={handleClickLogout} experimental={experimental} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Turf,\n  Forms,\n  QRCodes,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ global, experimental }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard global={global} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} global={global} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers global={global} />} />\n    <Route path=\"/turf/\" render={() => <Turf global={global} />} />\n    <Route path=\"/forms/\" render={() => <Forms global={global} />} />\n    <Route path=\"/qrcode/\" render={() => <QRCodes global={global} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes global={global} />} />\n    <Route path=\"/import/\" render={() => <ImportData global={global} />} />\n    <Route path=\"/queue/\" render={() => <Queue global={global} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics global={global} />} />\n    <Route path=\"/settings/\" render={() => <Settings global={global} />} />\n    <Route path=\"/about/\" render={() => <About global={global} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport { asyncForEach, sleep } from 'ourvoiceusa-sdk-js';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login, Loading } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      global: props.global,\n      assignments: {},\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: localStorage.getItem('server'),\n      token: localStorage.getItem('jwt'),\n      orgId: localStorage.getItem('orgId'),\n      experimental: ((process.env.NODE_ENV === 'development' || localStorage.getItem('experimental'))?true:false),\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let { server, token, orgId } = this.state;\n\n    this.setState({loading: true});\n\n    // assume error unless proven otherwise\n    let hai = {error: true};\n\n    try {\n      if (server && token) {\n        hai = await this.singHello(server, jwt.decode(token)['id'].split(\":\")[0], token, orgId);\n      } else {\n        throw new Error(\"missing server or token\");\n      }\n\n      if (hai.error) {\n        throw new Error(\"hai error\")\n      }\n    } catch (e) {\n      // if we had a token, it was bad, clear everything\n      if (token && server) {\n        this.setState({server: null, token: null, orgId: null});\n        localStorage.clear();\n        console.warn(\"Cleaning localStorage\");\n      }\n      console.warn(e);\n    }\n\n    this.setState({\n      loading: false,\n      assignments: (hai.data?hai.data:{}),\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    const { global } = this.state;\n\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n    if (!this.state.server) return;\n\n    let data;\n\n    try {\n      data = await _fetch(global, '/google_maps_key');\n      if (!data) return;\n\n      // load google places API\n      var aScript = document.createElement('script');\n      aScript.type = 'text/javascript';\n      aScript.src =\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        data.google_maps_key +\n        '&libraries=places';\n      document.head.appendChild(aScript);\n\n      this.setState({ google_maps_key: data.google_maps_key });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.token) return null;\n\n    try {\n      item = jwt.decode(this.state.token)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.clear();\n    this.setState({ menuLogout: false, server: null, token: null, orgId: null });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n    let orgId;\n\n    if (event.target.orgId) {\n      orgId = event.target.orgId.value;\n      let place = orgId.substring(0,2).toLowerCase();\n      server = 'gotv-'+place+'.ourvoiceusa.org';\n    } else if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = window.location.host.replace(':3000',':8080');\n    }\n    if (process.env.REACT_APP_NO_AUTH) {\n      // TODO: ask developer for username and generate a token with it\n      let token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Im5vYXV0aDpsb2NhbHVzZXIiLCJuYW1lIjoiTG9jYWwgVXNlciIsImVtYWlsIjoibG9jYWxAbG9jYWxob3N0IiwiaXNzIjoib3Vydm9pY2V1c2Eub3JnIiwiaWF0IjoxLCJleHAiOjIsImRpc2NsYWltZXIiOiJCbGFoIGJsYWggZGlzY2xhaW1lciJ9.qa5K2pgi1uLYkV7jP3aNvazcchvgBD8RwhdG6Q86GxlvusQx7nNCTr3LrAnn6pxDJxNidJoqjD3Ie77jj5hWK_-lbgtHMLhNXGExDxI8pQ0I5ZnAV_5pDu7vARinoy3mctQWFO2pIQSu8KzQc7eQ90IQZBseE7nQV-ugZRfK8Teo_48COcJxGxqwCNCO80G_JzBoif2xaWRb2i2n0qeSUKfXN4Fwy46JOiHFnL9yOS5s54tB6doe1wFJNYps8eVQbVkTBL1I9PQP4Gs-BmzND0vcQaczTdu_J50uvLL5do1FHb48lRhrA44ZrYv3EVwNsJXZtH3MbasxgPrZhl69VQ';\n      localStorage.setItem('jwt', token);\n      this.setState({token}, () => this.singHello(server, target, null, orgId));\n    }\n    else await this.singHello(server, target, null, orgId);\n  };\n\n  singHello = async (server, target, token, orgId) => {\n    let res;\n\n    localStorage.setItem('server', server);\n    if (orgId) localStorage.setItem('orgId', orgId);\n    this.setState({server, orgId});\n\n    let https = true;\n    if (server.match(/:8080$/)) https = false;\n\n    try {\n      let retry = true;\n\n      while (retry) {\n        res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ/'+(orgId?orgId+'/':'')+'api/v1/hello', {\n          method: 'POST',\n          headers: {\n            Authorization:\n              'Bearer ' +\n              (token ? token : (this.state.token ? this.state.token : 'of the one ring')),\n            'Content-Type': 'application/json'\n          },\n        });\n\n        if (res.status === 418) await sleep(12345);\n        else retry = false;\n      }\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        setTimeout(() => {\n          window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        }, 500);\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg, data: body.data };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ user: this.state.user });\n        return { error: false, flag: true, data: body.data };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { assignments, experimental, server, token, loading } = this.state;\n\n    if (loading) return (\n      <Router>\n        <Route path=\"/\" render={props => <Loading {...props}  />} />\n      </Router>\n    );\n\n    if (!server || !token) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} global={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            global={this}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            assignments={assignments}\n            experimental={experimental}\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes global={this} experimental={experimental} />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}