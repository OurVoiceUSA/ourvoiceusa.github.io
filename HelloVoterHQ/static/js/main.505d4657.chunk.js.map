{"version":3,"sources":["components/Turf/CardTurf.jsx","common.js","components/Turf/CardTurfFull.jsx","components/QRCodes.jsx","components/Map.jsx","components/Teams.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Turf/index.js","components/Forms.jsx","components/Volunteers.jsx","components/About.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Attributes.jsx","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","app.styles.js","components/Loading.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CardTurf","props","handleTeamsChange","selectedTeamsOption","a","global","state","refer","setState","saving","obj","_handleSelectChange","add","i","_fetch","API_BASE_URI","teamId","turfId","id","rm","notify_success","notify_error","handleMembersChange","selectedMembersOption","vId","_loadData","turf","volunteers","members","teams","teamsSelected","loading","Promise","all","_loadTurf","_loadVolunteers","_loadTeams","teamOptions","membersOption","forEach","t","push","value","_searchStringify","label","key","team","c","volunteer","this","style","display","padding","icon","faStreetView","width","height","color","name","edit","to","Component","jobRuntime","start","end","prettyMs","jobNumber","num","formatNumber","fractionDigits","msg","NotificationManager","success","e","error","console","warn","uri","method","body","server","token","https","match","fetch","headers","Authorization","JSON","stringify","res","status","Error","text","json","_browserLocation","isGeolocationAvailable","isGeolocationEnabled","coords","access","lng","longitude","lat","latitude","Icon","data-tip","iconName","RootLoader","flag","faSync","onClick","func","children","DialogSaving","aria-labelledby","aria-describedby","open","position","top","left","right","backgroundColor","disableShrink","o","parse","last_seen","created","toLowerCase","_loadImports","imports","data","_loadQRCode","qrcode","code","orgId","QRCode","toDataURL","img","_loadQRCodes","qrcodes","_loadVolunteer","byType","call","_loadTurfs","_loadNearbyTurfs","dist","_loadTeam","_loadForm","form","_loadForms","forms","_loadAttributes","attributes","_loadAddressData","formId","_loadPeopleAddressData","aId","oldopt","newopt","prior","map","now","ni","n","indexOf","pi","p","PlacesAutocomplete","addressSearch","getInputProps","getSuggestionItemProps","suggestions","className","suggestion","description","CardTurfFull","stats","onChange","options","isMulti","isSearchable","placeholder","TimeAgo","locale","en","QRCodes","search","handlePageClick","pageNum","selected","perPage","localStorage","getItem","thisQRCode","onTypeSearch","bind","handlePageNumChange","setItem","event","target","includes","type","exact","path","render","ListQRCodes","CardQRCode","params","onClose","paginate","list","idx","Math","floor","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","component","handleFormsChange","selectedFormsOption","handleTurfChange","selectedTurfOption","leaderOptions","formOptions","turfOptions","ass","f","direct","turfs","_disableQRCode","ReactTooltip","rebuild","alignItems","alt","src","CardQRCodeFull","button","faQrcode","size","primary","secondary","disabled","last_used","format","Date","filter","App","loadMarkerData","onMarkerClick","marker","showingInfoWindow","address","place","title","selectedPlace","activeMarker","onTurfClick","log","infoLocation","paths","activeTurf","mapProps","center","addresses","onMapClicked","visits","polygons","location","geometry","geojson2polygons","polygon","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","ModalMarker","people","units","ModalPerson","person","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","handleClickDelete","menuDelete","handleCloseDelete","_deleteTeam","window","href","_createTeam","addTeamForm","getValue","formServerItems","struct","String","formServerOptions","fields","ListTeams","Form","ref","onChangeTeam","CardTeam","autoFocus","teamn","turfSelected","formSelected","memberOptions","flex","overflow","faUsers","CardTeamFull","ListTurf","TurfOptions","handleStateChange","selectedStateOption","typeOptions","us_states","sldu","sldl","selectedDrawOption","stateOptions","Object","keys","k","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","CircularProgress","accept","handleImportFiles","files","debounce","onTypeAddress","onSelect","submitAddress","rel","geocodeByAddress","getLatLng","pos","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","result","readAsText","_deleteTurf","_createTurf","addTurfForm","objs","circleToPolygon","urlFromDist","val","replace","initState","thisTurf","drawOptions","onChangeTurf","_showSubmitButton","Button","Dialog","DialogTitle","DialogActions","FTYPE","enums","TEXTBOX","Number","Boolean","SAND","addItem","reorder","startIndex","endIndex","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","grid","margin","background","getListStyle","isDraggingOver","Forms","getList","id2List","onDragEnd","attributes_selected","droppable","droppable2","optional","values","_deleteForm","_createForm","addFormForm","formName","trim","order","mainForm","customForm","customFormItems","forceUpdate","ListForms","onChangeForm","flexDirection","provided","snapshot","innerRef","item","draggableId","draggableProps","dragHandleProps","required","inputTypeToReadable","CardForm","faClipboard","CardFormFull","NEARBY_DIST","Volunteers","thisVolunteer","ready","unassigned","denied","invited","locked","ListVolunteers","CardVolunteer","handleLeaderChange","selectedLeaderOption","hometurf","nearbyturf","x","y","faHome","leader","autoturf","_lockVolunteer","term","avatar","locationstr","extract_addr","VolunteerBadges","CardVolunteerFull","email","phone","VolunteerAddress","slice","badges","admin","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","arr","split","shift","join","componentDidMount","cb_version","version","neo4j_version","process","faTwitter","faFacebook","faGlobe","renderLabelContent","percent","midAngle","transform","textAnchor","toFixed","_init","attributeOptions","doQuery","selectedAttributeOption","data_breakdown","include_null","d","pop","handleAttributeChange","animation","Checkbox","checked","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","fill","CardDashboard","sortableElement","faShieldAlt","stat","Cards","sortableContainer","dash","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","admins","noAdmins","vol","faUser","faMap","faChartPie","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","axis","Modal","getUserProp","MapSelect","map1","map2","_handleCheck","updateFormats","_setValue","_setMapValue","prop","_renderCheckbox","_renderMapOptions","Fragment","checkbox","dimensions","labelWidth","React","specVal","row","spec","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","classes","theme","root","IconButton","aria-label","direction","TablePaginationActionsWrapped","withStyles","flexShrink","palette","marginLeft","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","rows","emptyRows","min","Paper","tableWrapper","Table","table","TableHead","TableRow","Tooltip","tooltip","TableCell","header","TableBody","s","funcItemTooltip","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","completed","Check","LinearProgress","paddingTop","variant","_pipe","g","pipe","fns","reduce","PAPER_TABLE_SPEC","ImportMap","formats","mapped","formatHeaders","field","updateMapped","mapData","getMapped","generateFormats","getAllIndexes","parseData","isArray","indexes","findIndex","total","next","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","record","defaultState","sending","submitting","ImportData","preProcess","filename","sendData","sepm","seps","RegExp","sepr","percentage","setTimeout","_resetState","faFileCsv","Divider","onError","preProcessError","onFileLoaded","tsToStr","ts","toString","jobStatus","job","started","showErrorIfError","taskObjFromQueue","Queue","r","q","styles","main","marginRight","breakpoints","up","paper","submit","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","Loading","CssBaseline","Typography","role","Login","loginOptions","pathname","dev","selectedLoginOption","reload","Avatar","onSubmit","preventDefault","doSave","fullWidth","LoginOption","FormControl","InputLabel","htmlFor","Input","autoComplete","defaultValue","FormControlLabel","control","qserver","LogoutDialog","menuLogout","handleCloseLogout","_logout","Header","handleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","noWrap","MenuItems","handleClickLogout","List","ListItem","ListItemIcon","ListItemText","Sidebar","handleDrawerClose","Drawer","NoMatch","Routes","Teams","Turf","Map","google_maps_key","hai","singHello","jwt","decode","clear","_loadKeys","aScript","document","createElement","head","appendChild","connectForm","substring","sm_oauth_url","get","sm","user","v","queryString","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.505d4657.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'turf', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull global={global} turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\nimport QRCode from 'qrcode';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport const API_BASE_URI = '/HelloVoterHQ/api/v1';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(global, uri, method, body) {\n  if (!global || !global.state) return;\n\n  const { server, token } = global.state;\n\n  let https = true;\n  if (server.match(/^localhost/)) https = false;\n\n  if (!method) method = 'GET';\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(global) {\n  let imports = [];\n  try {\n    let data = await _fetch(global, API_BASE_URI+'/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport async function _loadQRCode(global, id) {\n  let qrcode = {};\n  try {\n    qrcode = await _fetch(\n      global,\n      API_BASE_URI+'/qrcodes/get?id=' + id\n    );\n    let code = {code: qrcode.id};\n    if (global.state.orgId) code.orgId = global.state.orgId;\n    else code.server = global.state.server;\n    qrcode.img = await QRCode.toDataURL(JSON.stringify(code));\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode info.');\n  }\n  return qrcode;\n}\n\nexport async function _loadQRCodes(global, id) {\n  let qrcodes = [];\n\n  try {\n    qrcodes = await _fetch(global, API_BASE_URI+'/qrcodes/list');\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode data.');\n  }\n\n  return qrcodes;\n}\n\nexport async function _loadVolunteer(global, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      global,\n      API_BASE_URI+'/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(global, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(global, API_BASE_URI+'/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\n\nexport async function _loadTurf(global, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      global,\n      API_BASE_URI+'/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTurfs(global, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(global, API_BASE_URI+'/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(global, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(global, API_BASE_URI+'/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(global, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      global,\n      API_BASE_URI+'/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(global, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(global, API_BASE_URI+'/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(global, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      global,\n      API_BASE_URI+'/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(global, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    let data = await _fetch(global, API_BASE_URI+'/' + uri);\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttributes(global) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(global, API_BASE_URI+'/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\nexport async function _loadAddressData(global, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, API_BASE_URI+'/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(global, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, API_BASE_URI+'/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  }\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  }\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React from 'react';\nimport Select from 'react-select';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      <pre>\n      {JSON.stringify(props.refer.state.turf.stats, null, 2)}\n      </pre>\n      <br />\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadQRCode,\n  _loadQRCodes,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class QRCodes extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('qrcodesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisQRCode: {},\n      qrcodes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('qrcodesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcodes = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      qrcodes = await _loadQRCodes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load qrcodes.');\n    }\n    this.setState({ loading: false, qrcodes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let qrcodes = [];\n\n    this.state.qrcodes.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      qrcodes.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Route\n              exact={true}\n              path=\"/qrcodes/\"\n              render={() => <ListQRCodes global={global} refer={this} qrcodes={qrcodes} />}\n            />\n            <Route\n              path=\"/qrcodes/view/:id\"\n              render={props => (\n                <CardQRCode\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisQRCode.id ? true : false}\n              onClose={() => this.setState({ thisQRCode: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardQRCode\n                  global={global}\n                  key={this.state.thisQRCode.id}\n                  id={this.state.thisQRCode.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListQRCodes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.qrcodes.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardQRCode global={props.global} key={c.id} qrcode={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.qrcodes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}QRCodes ({props.qrcodes.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n      <Button onClick={async () => {\n        let obj = await _fetch(\n          props.global,\n          API_BASE_URI+'/qrcodes/create',\n          'POST'\n        );\n        if (obj && obj.id) {\n          props.refer.setState({ thisQRCode: obj});\n          props.refer._loadData();\n        } else {\n          notify_error({}, 'QRCode creation failed.');\n        }\n      }} color=\"primary\">\n        Generate QR CODE\n      </Button>\n    </div>\n  );\n};\n\nexport class CardQRCode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      qrcode: this.props.qrcode,\n      selectedTeamsOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.qrcode) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/qrcodes/team/add',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/qrcodes/team/remove',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        qrcode\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/qrcodes/form/add',\n          'POST',\n          { formId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/qrcodes/form/remove',\n          'POST',\n          { formId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/qrcodes/turf/add',\n          'POST',\n          { turfId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/qrcodes/turf/remove',\n          'POST',\n          { turfId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcode = {},\n      forms = [],\n      turf = [],\n      teams = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [qrcode, forms, turf, teams] = await Promise.all([\n        _loadQRCode(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      qrcode.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    qrcode.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    qrcode.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      qrcode,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedFormsOption,\n      selectedTurfOption,\n    });\n  };\n\n  _disableQRCode = async (qrcode, flag) => {\n    const { global } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        API_BASE_URI+'/qrcodes/disable',\n        'POST',\n        { id: qrcode.id }\n      );\n      notify_success('QRCode hass been disabled.');\n    } catch (e) {\n      notify_error(e, 'Unable to disable QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { global, qrcode } = this.state;\n\n    if (!qrcode || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <img alt=\"QR Code\" src={qrcode.img} />\n            </ListItemAvatar>\n          </ListItem>\n          <CardQRCodeFull global={global} qrcode={qrcode} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisQRCode: qrcode })}\n      >\n        <ListItemAvatar>\n          <Icon icon={faQrcode} size={\"large\"} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={qrcode.name}\n          secondary={\"\"}\n        />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardQRCodeFull = props => (\n  <div>\n    <h1>{props.qrcode.name}{(props.qrcode.disabled?' (DISABLED)':'')}</h1>\n    <br />\n    Last Used:{' '}\n    {(props.qrcode.last_used?new TimeAgo('en-US').format(new Date(props.qrcode.last_used-30000)):'Never')}\n    <br />\n    Number of people who've used it: N/A\n    <br />\n    <br />\n    <div>\n      Teams this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.qrcode.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.qrcode.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    {props.qrcode.disabled&&\n    <div>This QR Code is disabled</div>\n    }\n    {!props.qrcode.disabled&&\n    <Button onClick={() => props.refer._disableQRCode(props.qrcode, false)}>\n      Disable QRCode\n    </Button>\n    }\n  </div>\n);\n\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(global, null, true),\n      _loadForms(global),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(global, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    const { global } = this.state;\n\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(global, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, API_BASE_URI+'/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    const { global } = this.state;\n\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, API_BASE_URI+'/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams global={global} refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam global={props.global} key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: obj.add[i] }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: obj.rm[i] }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { formId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { formId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { turfId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { turfId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(global, this.props.id),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'team', this.props.id),\n        _loadTurfs(global, this.props.id),\n        _loadTurfs(global),\n        _loadForms(global, this.props.id),\n        _loadForms(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull global={global} team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf global={props.global} key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState(props);\n    this.state.global = props.global;\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState(props) {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, API_BASE_URI+'/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    const { global } = this.state;\n\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(global, API_BASE_URI+'/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf global={global} turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import { CardTurf } from './CardTurf';\nimport { CardTurfFull } from './CardTurfFull';\nimport { ListTurf } from './ListTurf';\nimport { TurfOptions } from './TurfOptions';\nimport Turf from './Turf';\n\nexport {\n  CardTurf,\n  CardTurfFull,\n  ListTurf,\n  TurfOptions,\n  Turf\n};","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport {\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.jsx';\nimport { CardTeam } from './Teams.jsx';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForms,\n  _loadForm,\n  _loadAttributes,\n  _loadVolunteers,\n  _loadTeams,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nconst FTYPE = t.enums(\n  {\n    String: 'Text Input',\n    TEXTBOX: 'Large Text Box',\n    Number: 'Number',\n    Boolean: 'On/Off Switch',\n    SAND: 'Agree/Disagree'\n    //  'List': 'Select from List',\n  },\n  'FTYPE'\n);\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE\n};\n\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      name: t.String\n    });\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      customForm: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.id2List = {\n        droppable: 'attributes',\n        droppable2: 'attributes_selected',\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n      const { source, destination } = result;\n\n      // dropped outside the list\n      if (!destination) {\n          return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n          const attributes = reorder(\n              this.getList(source.droppableId),\n              source.index,\n              destination.index\n          );\n\n          let state = { attributes };\n\n          if (source.droppableId === 'droppable2') {\n              state = { attributes_selected: attributes };\n          }\n\n          this.setState(state);\n      } else {\n          const result = move(\n              this.getList(source.droppableId),\n              this.getList(destination.droppableId),\n              source,\n              destination\n          );\n\n          this.setState({\n              attributes: result.droppable,\n              attributes_selected: result.droppable2\n          });\n      }\n  };\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n    case 'String':\n      return 'Text Input';\n    case 'TEXTBOX':\n      return 'Text Box';\n    case 'Number':\n      return 'Number';\n    case 'Boolean':\n      return 'On/Off Switch';\n    case 'SAND':\n      return 'Agree/Disagree';\n    case 'List':\n      return 'Select from List';\n    default:\n      return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({ fields, order });\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(global);\n      attributes = await _loadAttributes(global);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n        //if (a.values) fields[a.id].options =\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, API_BASE_URI+'/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    const { global } = this.state;\n\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: Object.keys(this.state.fields),\n      };\n\n      await _fetch(global, API_BASE_URI+'/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms global={global} forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                  <DragDropContext onDragEnd={this.onDragEnd}>\n                      <Droppable droppableId=\"droppable\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                      &nbsp;\n                      Drag to assign\n                      &nbsp;\n                      <Droppable droppableId=\"droppable2\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes_selected.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                                  <Checkbox value=\"ack\" color=\"primary\" /> Readonly\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                  </DragDropContext>\n                </div>\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm global={props.global} key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'form', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'form', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { global, form } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull global={global} form={form} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteers,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  RootLoader,\n  Icon,\n  PlacesAutocomplete,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport default class Volunteers extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n    let invited = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else if (c.invited) invited.push(c);\n      else if (c.ass.ready || c.ass.teams.length) ready.push(c);\n      else unassigned.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers global={global} refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/invited\"\n              render={() => (\n                <div>\n                  <ListVolunteers\n                    global={global}\n                    refer={this}\n                    type=\"Invited\"\n                    volunteers={invited}\n                  />\n                  <Button onClick={async () => {\n                    let obj = await _fetch(\n                      global,\n                      API_BASE_URI+'/volunteer/invite',\n                      'POST'\n                    );\n                    if (obj.token) {\n                      this.setState({ thisVolunteer: {id: 'invite:'+obj.token} });\n                    } else {\n                      notify_error({}, 'Invite failed.');\n                    }\n                  }} color=\"primary\">\n                    Invite Someone\n                  </Button>\n                </div>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n                <CardVolunteer\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisVolunteer.id ? true : false}\n              onClose={() => this.setState({ thisVolunteer: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardVolunteer\n                  global={global}\n                  key={this.state.thisVolunteer.id}\n                  id={this.state.thisVolunteer.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer global={global} key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    const { global } = this.state;\n\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/team/members/promote',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/team/members/demote',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { formId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { formId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n      {\n        value: 'auto',\n        id: 'auto',\n        label: (\n          <CardTurf\n            global={global}\n            key=\"auto\"\n            turf={{\n              id: 'auto',\n              name: 'Area surrounnding this volunteer\\'s home address'\n            }}\n            refer={this}\n            icon={faHome}\n          />\n        )\n      }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    const { global } = this.state;\n\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        API_BASE_URI+'/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { global, volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull global={global} volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisVolunteer: volunteer })}\n      >\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <Button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </Button>\n    ) : (\n      <Button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </Button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress global={global} refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      global: props.global,\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    const { global } = this.state;\n\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        global,\n        API_BASE_URI+'/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <Button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      cb_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    try {\n      data = await _fetch(global, API_BASE_URI+'/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      cb_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {this.state.cb_version ? (\n            'HelloVoterAPI version ' + this.state.cb_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {this.state.neo4j_version ? (\n            'Neo4j version ' + this.state.neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          &copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(global);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    const { global } = this.state;\n\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = API_BASE_URI+'/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(global, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);\n","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            key={card.name}\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  RootLoader\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(global, API_BASE_URI+'/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {global.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport {\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {global: props.global};\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n        data: a,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions});\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption});\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._init()}>\n        <h3>Attributes</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to edit\"\n        />\n      {this.state.selectedAttributeOption?\n      <div>{JSON.stringify(this.state.selectedAttributeOption.data)}</div>\n      :\n      <div></div>\n      }\n      </RootLoader>\n    );\n  }\n}\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => format.value && i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      imports: [],\n      ...defaultState,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { global, mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(global, API_BASE_URI+'/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(global, API_BASE_URI+'/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(global, API_BASE_URI+'/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst tsToStr = ts => {\n  return new Date(ts).toString();\n};\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      global: props.global,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(global, API_BASE_URI+'/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Loading extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            HelloVoterHQ is loading...\n          </Typography>\n          <CircularProgress height={15} />\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loading);\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\n\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let loginOptions = [{label: 'Organization ID', value: 'org'}, {label: '3rd Party Server', value: 'server'}];\n    if (process.env.NODE_ENV === 'development') loginOptions.unshift({label: 'LOCAL DEVELOPMENT', value: 'dev'});\n\n    let token;\n\n    try {\n      if (this.props.location.pathname.match(/\\/jwt\\//)) {\n        token = this.props.location.pathname.split('/').pop();\n      }\n    } catch(e) {\n      console.warn(e);\n    }\n\n    this.state = {\n      global: props.global,\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n      selectedLoginOption: loginOptions[0],\n      loginOptions: loginOptions,\n    };\n\n  }\n\n  componentDidMount() {\n    const { token } = this.state;\n\n    if (token) {\n      localStorage.setItem('jwt', token);\n      setTimeout(() => {window.location.href = '/HelloVoterHQ/#/'}, 500);\n      setTimeout(() => {window.location.reload()}, 1500);\n    }\n  }\n\n  render() {\n    const { global, classes, token, loginOptions, selectedLoginOption } = this.state;\n\n    if (token) return (<Loading classes={classes} />);\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); global.doSave(e, this.state.target); }} >\n            <Select\n              value={selectedLoginOption}\n              options={loginOptions}\n              onChange={selectedLoginOption => this.setState({selectedLoginOption})}\n            />\n            <LoginOption global={global} refer={this} />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({target: 'google'})}\n            >\n              Google Sign In\n            </Button>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => this.setState({target: 'facebook'})}\n              className={classes.submit}\n            >\n              Facebook Sign In\n            </Button>\n          </form>\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nconst LoginOption = props => {\n  switch (props.refer.state.selectedLoginOption.value) {\n    case 'org':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Enter your Organization ID. Example: NCC1701</InputLabel>\n            <Input id=\"orgId\" name=\"orgId\" autoComplete=\"orgId\" autoFocus defaultValue={props.global.state.orgId} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that you have read and agreed to our terms of use.\"\n          />\n        </div>\n      );\n    case 'server':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.global.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  global,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ {(global.state.orgId?'Orginization ID: '+global.state.orgId:'@ '+global.state.server)}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n        onClick={() =>\n          (window.location.href =\n            '/HelloVoterHQ/#/volunteers/view/' + getUserProp('id'))\n        }\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      <Link to={'/qrcodes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AspectRatioIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"QR Codes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/map/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <NavigationIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Map\" />\n        </ListItem>\n      </Link>\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  QRCodes,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ global }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard global={global} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} global={global} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers global={global} />} />\n    <Route path=\"/teams/\" render={() => <Teams global={global} />} />\n    <Route path=\"/turf/\" render={() => <Turf global={global} />} />\n    <Route path=\"/forms/\" render={() => <Forms global={global} />} />\n    <Route path=\"/qrcodes/\" render={() => <QRCodes global={global} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes global={global} />} />\n    <Route\n      path=\"/map/\"\n      render={() => <Map global={global} apiKey={global.state.google_maps_key} />}\n    />\n    <Route path=\"/import/\" render={() => <ImportData global={global} />} />\n    <Route path=\"/queue/\" render={() => <Queue global={global} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics global={global} />} />\n    <Route path=\"/settings/\" render={() => <Settings global={global} />} />\n    <Route path=\"/about/\" render={() => <About global={global} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login, Loading } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      global: props.global,\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: localStorage.getItem('server'),\n      token: localStorage.getItem('jwt'),\n      orgId: localStorage.getItem('orgId'),\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let { server, token, orgId } = this.state;\n\n    this.setState({loading: true});\n\n    try {\n      // assume error unless proven otherwise\n      let hai = {error: true};\n\n      if (server && token) {\n        hai = await this.singHello(server, jwt.decode(token)['id'].split(\":\")[0], token, orgId);\n      } else {\n        throw new Error(\"missing server or token\");\n      }\n\n      if (hai.error) {\n        throw new Error(\"hai error\")\n      }\n    } catch (e) {\n      // if we had a token, it was bad, clear everything\n      if (token && server) {\n        this.setState({server: null, token: null, orgId: null});\n        localStorage.clear();\n        console.warn(\"Cleaning localStorage\");\n      }\n      console.warn(e);\n    }\n\n    this.setState({\n      loading: false,\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    const { global } = this.state;\n\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n    if (!this.state.server) return;\n\n    let data;\n\n    try {\n      data = await _fetch(global, API_BASE_URI+'/google_maps_key');\n      if (!data) return;\n\n      // load google places API\n      var aScript = document.createElement('script');\n      aScript.type = 'text/javascript';\n      aScript.src =\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        data.google_maps_key +\n        '&libraries=places';\n      document.head.appendChild(aScript);\n\n      this.setState({ google_maps_key: data.google_maps_key });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.token) return null;\n\n    try {\n      item = jwt.decode(this.state.token)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.clear();\n    this.setState({ menuLogout: false, server: null, token: null, orgId: null });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n    let orgId;\n\n    if (event.target.orgId) {\n      orgId = event.target.orgId.value;\n      let place = orgId.substring(0,2).toLowerCase();\n      server = 'gotv-'+place+'.ourvoiceusa.org';\n    } else if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = 'localhost:8080';\n    }\n    await this.singHello(server, target, null, orgId);\n  };\n\n  singHello = async (server, target, token, orgId) => {\n    let res;\n\n    localStorage.setItem('server', server);\n    if (orgId) localStorage.setItem('orgId', orgId);\n    this.setState({server, orgId});\n\n    let https = true;\n    if (server.match(/^localhost/)) https = false;\n\n    try {\n      res = await fetch('http'+(https?'s':'')+'://' + server + API_BASE_URI+'/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (token ? token : (this.state.token ? this.state.token : 'of the one ring')),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        setTimeout(() => {\n          window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        }, 500);\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ user: this.state.user });\n        return { error: false, flag: true };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { server, token, loading } = this.state;\n\n    if (loading) return (\n      <Router>\n        <Route path=\"/\" render={props => <Loading {...props}  />} />\n      </Router>\n    );\n\n    if (!server || !token) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} global={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            global={this}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes global={this} />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}