{"version":3,"sources":["common.js","components/About.jsx","components/Teams.jsx","components/Forms.jsx","components/Volunteers.jsx","components/Turf/CardTurfFull.jsx","components/Turf/CardTurf.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Attributes.jsx","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Map.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","app.styles.js","App.jsx","serviceWorker.js","index.js"],"names":["API_BASE_URI","jobRuntime","start","end","prettyMs","notify_success","msg","NotificationManager","success","notify_error","e","error","console","warn","_fetch","_x","_x2","_x3","_x4","_fetch2","apply","this","arguments","_callee","server","uri","method","body","https","res","regenerator_default","a","wrap","_context","prev","next","abrupt","hostname","match","fetch","headers","Authorization","jwt","Content-Type","JSON","stringify","sent","status","t0","Error","text","t1","json","stop","Icon","props","react_default","createElement","index_es","Object","assign","style","width","data-tip","icon","iconName","RootLoader","flag","CircularProgress","common_Icon","faSync","color","onClick","func","children","DialogSaving","Modal","aria-labelledby","aria-describedby","open","position","top","left","right","backgroundColor","padding","disableShrink","_searchStringify","obj","o","parse","last_seen","created","id","toLowerCase","_loadImports","_x5","_loadImports2","_callee2","refer","imports","data","_context2","state","_loadVolunteer","_x6","_x7","_loadVolunteer2","_callee3","volunteer","_context3","_loadVolunteers","_x8","_x9","_x10","_loadVolunteers2","_callee4","byType","volunteers","call","_context4","_loadTurf","_x11","_x12","_loadTurf2","_callee5","turf","_context5","_loadTurfs","_x13","_x14","_x15","_loadTurfs2","_callee6","teamId","_context6","_loadNearbyTurfs","_x16","_x17","_x18","_x19","_loadNearbyTurfs2","_callee7","lng","lat","dist","_context7","_loadTeam","_x20","_x21","_loadTeam2","_callee8","team","_context8","_loadTeams","_x22","_x23","_x24","_loadTeams2","_callee9","teams","_context9","_loadForm","_x25","_x26","_loadForm2","_callee10","form","_context10","_loadForms","_x27","_x28","_loadForms2","_callee11","forms","_context11","_loadAttributes","_x29","_loadAttributes2","_callee12","attributes","_context12","forEach","label","name","_loadAddressData","_x30","_x31","_x32","_x33","_loadAddressData2","_callee13","formId","_context13","_loadPeopleAddressData","_x34","_x35","_x36","_loadPeopleAddressData2","_callee14","aId","_context14","_handleSelectChange","oldopt","newopt","add","rm","prior","map","now","ni","n","indexOf","push","pi","p","PlacesAutocomplete","react_places_autocomplete_dist_default","addressSearch","_ref","getInputProps","getSuggestionItemProps","suggestions","loading","className","suggestion","description","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","asyncToGenerator","mark","setState","cb_version","version","neo4j_version","process","height","target","rel","href","faTwitter","faFacebook","faGlobe","Component","TimeAgo","locale","en","handleClickDelete","menuDelete","handleCloseDelete","_deleteTeam","saving","window","location","_loadData","_createTeam","addTeamForm","getValue","search","assertThisInitialized","handlePageClick","pageNum","selected","perPage","localStorage","getItem","formServerItems","t","struct","String","formServerOptions","fields","onTypeSearch","bind","handlePageNumChange","setItem","value","event","_this2","list","includes","react_router_dom","react_router","exact","path","render","common_RootLoader","type","onChange","Teams_ListTeams","main_default","Form","ref","options","onChangeTeam","Teams_CardTeam","key","params","edit","Button","Dialog","onClose","DialogTitle","DialogActions","autoFocus","common_DialogSaving","ListTeams","paginate","idx","Math","floor","display","react_paginate_dist_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","react_select_browser_esm","to","CardTeam","_Component2","_this3","handleMembersChange","_ref5","selectedMembersOption","i","_i","keys","done","vId","t2","t3","t4","handleFormsChange","_ref6","selectedFormsOption","_i2","teamn","handleTurfChange","_ref7","selectedTurfOption","_i3","turfId","members","turfSelected","turfs","formSelected","_ref9","_ref10","memberOptions","formOptions","turfOptions","Promise","all","slicedToArray","c","Volunteers_CardVolunteer","CardTurf_CardTurf","f","Forms_CardForm","inherits","createClass","flex","overflow","faUsers","Teams_CardTeamFull","CardTeamFull","isMulti","isSearchable","placeholder","FTYPE","enums","TEXTBOX","Number","Boolean","SAND","addItem","reorder","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","index","droppableId","getItemStyle","isDragging","draggableStyle","objectSpread","userSelect","grid","margin","concat","background","getListStyle","isDraggingOver","Forms","getList","id2List","onDragEnd","attributes_selected","droppable","droppable2","optional","values","_deleteForm","_ref2","_createForm","formName","addFormForm","trim","order","mainForm","customForm","customFormItems","_this$state","forceUpdate","Forms_ListForms","onChangeForm","flexDirection","react_beautiful_dnd_esm","provided","snapshot","innerRef","item","draggableId","draggableProps","dragHandleProps","required","inputTypeToReadable","Checkbox","ListForms","CardForm","handleTeamsChange","selectedTeamsOption","teamsSelected","_ref8","teamOptions","membersOption","faClipboard","Forms_CardFormFull","CardFormFull","NEARBY_DIST","Volunteers","thisVolunteer","ready","unassigned","denied","locked","ass","Volunteers_ListVolunteers","ListVolunteers","List","component","CardVolunteer","handleLeaderChange","_ref3","selectedLeaderOption","_ref4","_i4","hometurf","nearbyturf","leaderOptions","x","y","faHome","leader","direct","autoturf","_lockVolunteer","term","ReactTooltip","rebuild","_this4","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","avatar","ListItemText","primary","secondary","locationstr","extract_addr","Volunteers_VolunteerBadges","Volunteers_CardVolunteerFull","button","CardVolunteerFull","format","Date","email","phone","Volunteers_VolunteerAddress","slice","filter","VolunteerAddress","_Component3","_this5","submitAddress","address","pos","geocodeByAddress","getLatLng","onTypeAddress","_this6","common_PlacesAutocomplete","debounce","onSelect","VolunteerBadges","badges","admin","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","arr","split","shift","join","CardTurfFull","stats","CardTurf","_Component","faStreetView","CardTurfFull_CardTurfFull","ListTurf","TurfOptions","_getPrototypeOf2","_len","args","_key","handleStateChange","selectedStateOption","typeOptions","us_states","sldu","sldl","selectedDrawOption","stateOptions","k","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","accept","handleImportFiles","files","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","readAsText","_deleteTurf","_createTurf","objs","_res","_obj","geometry","addTurfForm","circleToPolygon","urlFromDist","t5","t6","t7","t8","val","replace","initState","thisTurf","drawOptions","ListTurf_ListTurf","onChangeTurf","TurfOptions_TurfOptions","_showSubmitButton","renderLabelContent","percent","midAngle","transform","textAnchor","toFixed","_init","attributeOptions","doQuery","data_breakdown","selectedAttributeOption","include_null","d","pop","handleAttributeChange","animation","checked","es6","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","fill","CardDashboard","sortableElement","faShieldAlt","stat","Cards","sortableContainer","dash","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","admins","noAdmins","vol","faUser","faMap","faChartPie","number_format_default","addresses","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","axis","getUserProp","MapSelect","_React$Component","map1","map2","_handleCheck","_this$props","updateFormats","_setValue","_this$props2","_setMapValue","prop","_this$props3","defineProperty","_renderCheckbox","_renderMapOptions","_ref2$map","_ref2$map2","Fragment","_this$props4","_this$props4$label","_this$props4$options","_this$props4$checkbox","checkbox","_this$props4$dimensio","dimensions","labelWidth","React","specVal","row","spec","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","classes","theme","root","IconButton","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","withStyles","flexShrink","palette","marginLeft","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","rows","emptyRows","min","Paper","tableWrapper","Table","table","TableHead","TableRow","Tooltip","title","tooltip","TableCell","header","TableBody","s","funcItemTooltip","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","completed","Check","LinearProgress","paddingTop","variant","_pipe","g","pipe","fns","reduce","PAPER_TABLE_SPEC","num","formatNumber","fractionDigits","ImportMap","formats","mapped","formatHeaders","field","updateMapped","mapData","getMapped","_assertThisInitialize","generateFormats","getAllIndexes","parseData","isArray","indexes","findIndex","total","_this$updateFormats","_this$props$fields","_this$state$headers","MapSelect_MapSelect","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","PreviewItem_PreviewItem","record","defaultState","sending","submitting","ImportData","preProcess","filename","sendData","seps","sepm","sepr","percentage","RegExp","setTimeout","_resetState","_this$state2","_this$state2$mapped","_this$state2$data","_this$state2$headers","Elements_ProgressBar","faFileCsv","size","ImportMap_ImportMap","Divider","Button_default","ImportPreview_ImportPreview","react_csv_reader_default","onError","preProcessError","onFileLoaded","Elements_PaperTable","tsToStr","ts","toString","jobStatus","job","started","showErrorIfError","taskObjFromQueue","Queue","r","q","Login","token","pathname","decode","dev","main","CssBaseline","paper","LockOutlined_default","Typography","onSubmit","preventDefault","doSave","FormControl","fullWidth","InputLabel","htmlFor","Input","autoComplete","defaultValue","qserver","FormControlLabel","control","submit","role","marginRight","breakpoints","up","LogoutDialog","menuLogout","handleCloseLogout","_logout","loadMarkerData","onMarkerClick","marker","place","showingInfoWindow","selectedPlace","activeMarker","onTurfClick","log","infoLocation","paths","activeTurf","mapProps","longitude","latitude","center","onMapClicked","visits","polygons","isGeolocationAvailable","isGeolocationEnabled","coords","access","geojson2polygons","polygon","google_maps_react_dist","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","Map_ModalMarker","ModalMarker","people","units","Map_ModalPerson","person","ModalPerson","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Header","handleDrawerOpen","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","toolbar","menuButton","menuButtonHidden","Menu_default","noWrap","MenuItems","handleClickLogout","react","ListItemIcon","icons_Dashboard_default","Person_default","People_default","Map_default","Assignment_default","AttachFile_default","Navigation_default","PresentToAll_default","Work_default","BarChart_default","IndeterminateCheckBox_default","AccountBalance_default","Help_default","Sidebar","handleDrawerClose","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Header_MenuItems","NoMatch","Routes","google_maps_key","components_Dashboard","Volunteers_Volunteers","Teams_App","Turf_App","Forms_Forms","Attributes_App","Map","ImportData_ImportData","Queue_Queue","Analytics_App","Settings_App","components_Login","About_App","styles","paddingRight","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","whiteSpace","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","hai","singHello","_loadKeys","aScript","document","head","appendChild","connectForm","removeItem","sm_oauth_url","sm","get","dbx","user","v","queryString","dist_default","components_Header_Header","Header_Sidebar","lib","routes_Routes","components_LogoutDialog","ReactDOM","src_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.8042e9b4.chunk.js","sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport const API_BASE_URI = '/HelloVoterHQ/api/v1';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(server, uri, method, body) {\n  if (!server) return;\n\n  let https = true;\n  if (server.hostname.match(/^localhost/)) https = false;\n\n  if (!method) method = 'GET';\n\n  if (!server.hostname) {\n    notify_error({}, 'API server definition error.');\n    return;\n  }\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server.hostname + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + server.jwt,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(refer) {\n  let imports = [];\n  try {\n    let data = await _fetch(refer.state.server, API_BASE_URI+'/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport async function _loadVolunteer(refer, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(refer, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\nexport async function _loadTurf(refer, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf.data[0];\n}\n\nexport async function _loadTurfs(refer, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(refer, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(refer, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(refer, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(refer, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(refer, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + uri);\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttributes(refer) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\nexport async function _loadAddressData(refer, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(refer.props.server, API_BASE_URI+'/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(refer, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(refer.props.server, API_BASE_URI+'/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  }\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  }\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cb_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let data = {};\n    try {\n      data = await _fetch(this.props.server, API_BASE_URI+'/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      cb_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {this.state.cb_version ? (\n            'HelloVoterAPI version ' + this.state.cb_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {this.state.neo4j_version ? (\n            'Neo4j version ' + this.state.neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          &copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: obj.add[i] }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: obj.rm[i] }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { formId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { formId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(this, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { turfId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { turfId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(this, this.props.id),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'team', this.props.id),\n        _loadTurfs(this.props.refer, this.props.id),\n        _loadTurfs(this.props.refer),\n        _loadForms(this.props.refer, this.props.id),\n        _loadForms(this.props.refer),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport {\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.jsx';\nimport { CardTeam } from './Teams.jsx';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForms,\n  _loadForm,\n  _loadAttributes,\n  _loadVolunteers,\n  _loadTeams,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nconst FTYPE = t.enums(\n  {\n    String: 'Text Input',\n    TEXTBOX: 'Large Text Box',\n    Number: 'Number',\n    Boolean: 'On/Off Switch',\n    SAND: 'Agree/Disagree'\n    //  'List': 'Select from List',\n  },\n  'FTYPE'\n);\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE\n};\n\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      name: t.String\n    });\n\n    this.state = {\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      customForm: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.id2List = {\n        droppable: 'attributes',\n        droppable2: 'attributes_selected',\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n      const { source, destination } = result;\n\n      // dropped outside the list\n      if (!destination) {\n          return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n          const attributes = reorder(\n              this.getList(source.droppableId),\n              source.index,\n              destination.index\n          );\n\n          let state = { attributes };\n\n          if (source.droppableId === 'droppable2') {\n              state = { attributes_selected: attributes };\n          }\n\n          this.setState(state);\n      } else {\n          const result = move(\n              this.getList(source.droppableId),\n              this.getList(destination.droppableId),\n              source,\n              destination\n          );\n\n          this.setState({\n              attributes: result.droppable,\n              attributes_selected: result.droppable2\n          });\n      }\n  };\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n    case 'String':\n      return 'Text Input';\n    case 'TEXTBOX':\n      return 'Text Box';\n    case 'Number':\n      return 'Number';\n    case 'Boolean':\n      return 'On/Off Switch';\n    case 'SAND':\n      return 'Agree/Disagree';\n    case 'List':\n      return 'Select from List';\n    default:\n      return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({ fields, order });\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(this);\n      attributes = await _loadAttributes(this);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n        //if (a.values) fields[a.id].options =\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: Object.keys(this.state.fields),\n      };\n\n      await _fetch(this.props.server, API_BASE_URI+'/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  render() {\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                  <DragDropContext onDragEnd={this.onDragEnd}>\n                      <Droppable droppableId=\"droppable\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                      &nbsp;\n                      Drag to assign\n                      &nbsp;\n                      <Droppable droppableId=\"droppable2\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes_selected.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                                  <Checkbox value=\"ack\" color=\"primary\" /> Readonly\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                  </DragDropContext>\n                </div>\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'form', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'form', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { form } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull form={form} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteers,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  RootLoader,\n  Icon,\n  PlacesAutocomplete,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport default class Volunteers extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else {\n        if (c.ass.ready || c.ass.teams.length) ready.push(c);\n        else unassigned.push(c);\n      }\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n                <CardVolunteer\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisVolunteer.id ? true : false}\n              onClose={() => this.setState({ thisVolunteer: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardVolunteer\n                  key={this.state.thisVolunteer.id}\n                  id={this.state.thisVolunteer.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/promote',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/demote',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { formId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { formId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(this, this.props.id),\n        _loadForms(this.props.refer),\n        _loadTurfs(this.props.refer),\n        _loadTeams(this.props.refer)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(this.props.refer, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(this.props.refer, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n      {\n        value: 'auto',\n        id: 'auto',\n        label: (\n          <CardTurf\n            key=\"auto\"\n            turf={{\n              id: 'auto',\n              name: 'Area surrounnding this volunteer\\'s home address'\n            }}\n            refer={this}\n            icon={faHome}\n          />\n        )\n      }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        this.state.server,\n        API_BASE_URI+'/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisVolunteer: volunteer })}\n      >\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </button>\n    ) : (\n      <button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        this.props.refer.state.server,\n        API_BASE_URI+'/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      <pre>\n      {JSON.stringify(props.refer.state.turf.stats, null, 2)}\n      </pre>\n      <br />\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'turf', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState();\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState() {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(this.props.server, API_BASE_URI+'/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(this);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(this);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = API_BASE_URI+'/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(this.props.server, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  RootLoader\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(this.props.server, API_BASE_URI+'/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {this.props.refer.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport {\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    this.setState({ loading: true });\n\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(this);\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n        data: a,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions});\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption});\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._init()}>\n        <h3>Attributes</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to edit\"\n        />\n      {this.state.selectedAttributeOption?\n      <div>{JSON.stringify(this.state.selectedAttributeOption.data)}</div>\n      :\n      <div></div>\n      }\n      </RootLoader>\n    );\n  }\n}\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n  componentDidMount() {\n    this._loadData();\n  }\n\n  state = {\n    server: this.props.server,\n    imports: [],\n    ...defaultState,\n  };\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(this.props.server, API_BASE_URI+'/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(this.props.server, API_BASE_URI+'/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(this.props.server, API_BASE_URI+'/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst tsToStr = ts => {\n  return new Date(ts).toString();\n};\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      server: this.props.server,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(this.state.server, API_BASE_URI+'/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router';\nimport { HashRouter as Router } from 'react-router-dom';\nimport jwt from 'jsonwebtoken';\nimport {notify_error} from '../common.js';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let token;\n\n    try {\n      token = this.props.location.pathname.split('/').pop();\n      jwt.decode(token);\n      this.props.refer._loadData(token);\n    } catch (e) {\n      notify_error(e, 'Unable to extract jwt from URI');\n      token = 'error';\n    }\n\n    this.state = {\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n    };\n\n  }\n\n  render() {\n    const { classes, token } = this.state;\n\n    if (token && token !== \"error\")\n      return (\n        <Router>\n          <Route render={() => (\n            <Redirect to=\"/\" />\n          )} />\n        </Router>\n      );\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); this.props.refer.doSave(e, this.state.target); }} >\n            {(process.env.NODE_ENV === 'development')?\n              <FormControlLabel\n                control={<Checkbox id=\"dev\" name=\"dev\" value=\"dev\" color=\"primary\" checked={this.state.dev} onChange={(e, c) => this.setState({dev: c})} />}\n                label=\"DEVELOPMENT MODE\"\n              />\n              :''}\n              <div>\n                {this.state.dev?\n                ''\n                :\n                <div>\n                  <FormControl margin=\"normal\" required fullWidth>\n                    <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n                    <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={this.state.qserver} />\n                  </FormControl>\n                  <FormControlLabel\n                    control={<Checkbox value=\"ack\" color=\"primary\" required />}\n                    label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n                  />\n                </div>\n                }\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => this.setState({target: 'google'})}\n                >\n                  Google Sign In\n                </Button>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => this.setState({target: 'facebook'})}\n                  className={classes.submit}\n                >\n                  Facebook Sign In\n                </Button>\n              </div>\n          </form>\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(this, null, true),\n      _loadForms(this),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(this, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(this, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  server,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ @ {server.hostname}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n        onClick={() =>\n          (window.location.href =\n            '/HelloVoterHQ/#/volunteers/view/' + getUserProp('id'))\n        }\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/map/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <NavigationIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Map\" />\n        </ListItem>\n      </Link>\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ server, refer, google_maps_key }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard server={server} refer={refer} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers server={server} />} />\n    <Route path=\"/teams/\" render={() => <Teams server={server} />} />\n    <Route path=\"/turf/\" render={() => <Turf server={server} />} />\n    <Route path=\"/forms/\" render={() => <Forms server={server} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes server={server} />} />\n    <Route\n      path=\"/map/\"\n      render={() => <Map server={server} apiKey={google_maps_key} />}\n    />\n    <Route path=\"/import/\" render={() => <ImportData server={server} />} />\n    <Route path=\"/queue/\" render={() => <Queue server={server} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics server={server} />} />\n    <Route path=\"/settings/\" render={() => <Settings server={server} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} refer={refer} />} />\n    <Route path=\"/about/\" render={() => <About server={server} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  avatar: {\n    margin: 10\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: {},\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async token => {\n    this.setState({loading: true});\n\n    if (token) localStorage.setItem('jwt', token);\n    else token = localStorage.getItem('jwt');\n\n    let hostname = localStorage.getItem('server');\n\n    // assume error unless proven otherwise\n    let hai = {error: true};\n\n    if (hostname && token) {\n      try {\n        hai = await this.singHello(hostname, jwt.decode(token)['id'].split(\":\")[0], token);\n      } catch (e) {\n        console.warn(e)\n      }\n    }\n\n    if (hai.error) {\n      hostname = '';\n      token = '';\n    }\n\n    this.setState({\n      server: {\n        hostname: hostname,\n        jwt: token,\n      },\n      loading: false,\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n\n    let data = await _fetch(this.state.server, API_BASE_URI+'/google_maps_key');\n    if (!data) return;\n\n    // load google places API\n    var aScript = document.createElement('script');\n    aScript.type = 'text/javascript';\n    aScript.src =\n      'https://maps.googleapis.com/maps/api/js?key=' +\n      data.google_maps_key +\n      '&libraries=places';\n    document.head.appendChild(aScript);\n\n    this.setState({ google_maps_key: data.google_maps_key });\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.server.jwt) return null;\n\n    try {\n      item = jwt.decode(this.state.server.jwt)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.removeItem('server');\n    localStorage.removeItem('jwt');\n    this.setState({ menuLogout: false, server: {} });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n\n    if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = 'localhost:8080';\n    }\n    await this.singHello(server, target);\n  };\n\n  singHello = async (server, target, token) => {\n    let res;\n\n\n\n    localStorage.setItem('server', server);\n\n    let https = true;\n    if (server.match(/^localhost/)) https = false;\n\n    try {\n      res = await fetch('http'+(https?'s':'')+'://' + server + API_BASE_URI+'/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (token ? token : (this.state.server.jwt ? this.state.server.jwt : 'of the one ring')),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ server: server, dbx: null, user: this.state.user });\n        return { error: false, flag: true };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { server, loading } = this.state;\n\n    if (loading) return (<div>LOADING...</div>);\n\n    if (!server.hostname) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} refer={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            server={server}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes\n              server={server}\n              refer={this}\n              google_maps_key={this.state.google_maps_key}\n            />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}