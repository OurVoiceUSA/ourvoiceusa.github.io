{"version":3,"sources":["common.js","components/About.jsx","components/Teams.jsx","components/Forms.jsx","components/Volunteers.jsx","components/Turf/CardTurfFull.jsx","components/Turf/CardTurf.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Attributes.jsx","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","app.styles.js","components/Loading.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Map.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["API_BASE_URI","jobRuntime","start","end","prettyMs","notify_success","msg","NotificationManager","success","notify_error","e","error","console","warn","_fetch","server","uri","method","body","a","https","hostname","match","fetch","headers","Authorization","jwt","JSON","stringify","res","status","Error","text","json","Icon","props","style","width","data-tip","icon","iconName","RootLoader","flag","CircularProgress","faSync","color","onClick","func","children","DialogSaving","Modal","aria-labelledby","aria-describedby","open","position","top","left","right","backgroundColor","padding","disableShrink","_searchStringify","obj","o","parse","last_seen","created","id","toLowerCase","_loadImports","refer","imports","state","data","_loadVolunteer","volunteer","_loadVolunteers","byType","volunteers","call","_loadTurf","turf","_loadTurfs","teamId","_loadNearbyTurfs","lng","lat","dist","_loadTeam","team","_loadTeams","teams","_loadForm","form","_loadForms","forms","_loadAttributes","attributes","forEach","label","name","_loadAddressData","formId","_loadPeopleAddressData","aId","_handleSelectChange","oldopt","newopt","add","rm","prior","map","now","ni","n","indexOf","push","pi","p","PlacesAutocomplete","addressSearch","getInputProps","getSuggestionItemProps","suggestions","loading","className","suggestion","description","App","componentDidMount","setState","cb_version","version","neo4j_version","process","this","height","target","rel","href","faTwitter","faFacebook","faGlobe","Component","TimeAgo","locale","en","handleClickDelete","menuDelete","handleCloseDelete","_deleteTeam","saving","window","location","_loadData","_createTeam","addTeamForm","getValue","search","handlePageClick","pageNum","selected","perPage","localStorage","getItem","formServerItems","t","struct","String","formServerOptions","fields","onTypeSearch","bind","handlePageNumChange","setItem","value","event","list","includes","exact","path","render","type","onChange","Form","ref","options","onChangeTeam","key","params","edit","Button","Dialog","onClose","DialogTitle","DialogActions","autoFocus","ListTeams","paginate","idx","Math","floor","display","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","to","CardTeam","handleMembersChange","selectedMembersOption","i","vId","handleFormsChange","selectedFormsOption","teamn","handleTurfChange","selectedTurfOption","turfId","members","turfSelected","turfs","formSelected","Promise","all","memberOptions","formOptions","turfOptions","c","f","flex","overflow","faUsers","CardTeamFull","isMulti","isSearchable","placeholder","FTYPE","enums","TEXTBOX","Number","Boolean","SAND","addItem","reorder","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","grid","margin","background","getListStyle","isDraggingOver","Forms","getList","id2List","onDragEnd","attributes_selected","droppable","droppable2","optional","values","_deleteForm","_createForm","addFormForm","formName","trim","Object","keys","order","mainForm","customForm","customFormItems","forceUpdate","onChangeForm","flexDirection","provided","snapshot","innerRef","item","draggableId","draggableProps","dragHandleProps","required","inputTypeToReadable","Checkbox","ListForms","CardForm","handleTeamsChange","selectedTeamsOption","teamsSelected","teamOptions","membersOption","faClipboard","CardFormFull","NEARBY_DIST","Volunteers","thisVolunteer","ready","unassigned","denied","invited","locked","ass","token","ListVolunteers","List","component","CardVolunteer","handleLeaderChange","selectedLeaderOption","hometurf","nearbyturf","x","y","leaderOptions","faHome","leader","direct","autoturf","_lockVolunteer","term","ReactTooltip","rebuild","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","avatar","ListItemText","primary","secondary","locationstr","extract_addr","button","CardVolunteerFull","format","Date","email","phone","slice","filter","VolunteerAddress","submitAddress","address","geocodeByAddress","getLatLng","pos","onTypeAddress","debounce","onSelect","VolunteerBadges","badges","admin","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","arr","split","shift","join","CardTurfFull","stats","CardTurf","faStreetView","ListTurf","TurfOptions","handleStateChange","selectedStateOption","typeOptions","us_states","sldu","sldl","selectedDrawOption","stateOptions","k","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","accept","handleImportFiles","files","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","readAsText","_deleteTurf","_createTurf","addTurfForm","objs","circleToPolygon","urlFromDist","geometry","val","replace","initState","thisTurf","drawOptions","onChangeTurf","_showSubmitButton","renderLabelContent","percent","midAngle","transform","textAnchor","toFixed","_init","attributeOptions","doQuery","selectedAttributeOption","data_breakdown","include_null","d","pop","handleAttributeChange","animation","checked","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","fill","CardDashboard","sortableElement","faShieldAlt","stat","Cards","sortableContainer","dash","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","admins","noAdmins","vol","faUser","faMap","faChartPie","addresses","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","axis","getUserProp","MapSelect","map1","map2","_handleCheck","updateFormats","_setValue","_setMapValue","prop","_renderCheckbox","_renderMapOptions","Fragment","checkbox","dimensions","labelWidth","React","specVal","row","spec","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","classes","theme","root","IconButton","disabled","aria-label","direction","TablePaginationActionsWrapped","withStyles","flexShrink","palette","marginLeft","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","rows","emptyRows","min","Paper","tableWrapper","Table","table","TableHead","TableRow","Tooltip","title","tooltip","TableCell","header","TableBody","s","funcItemTooltip","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","completed","Check","LinearProgress","paddingTop","variant","_pipe","g","pipe","fns","reduce","PAPER_TABLE_SPEC","num","formatNumber","fractionDigits","ImportMap","formats","mapped","formatHeaders","field","updateMapped","mapData","getMapped","generateFormats","getAllIndexes","parseData","isArray","indexes","findIndex","total","next","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","record","defaultState","sending","submitting","ImportData","preProcess","filename","sendData","sepm","seps","RegExp","sepr","percentage","setTimeout","_resetState","faFileCsv","size","Divider","onError","preProcessError","onFileLoaded","tsToStr","ts","toString","jobStatus","job","started","showErrorIfError","taskObjFromQueue","Queue","r","q","styles","main","marginRight","breakpoints","up","paper","submit","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","Loading","CssBaseline","Typography","role","Login","loginOptions","pathname","dev","selectedLoginOption","onSubmit","preventDefault","doSave","fullWidth","LoginOption","FormControl","InputLabel","htmlFor","Input","autoComplete","defaultValue","orgId","FormControlLabel","control","qserver","LogoutDialog","menuLogout","handleCloseLogout","_logout","loadMarkerData","onMarkerClick","marker","showingInfoWindow","place","selectedPlace","activeMarker","onTurfClick","log","infoLocation","paths","activeTurf","mapProps","longitude","center","latitude","onMapClicked","visits","polygons","isGeolocationAvailable","isGeolocationEnabled","coords","access","geojson2polygons","polygon","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","ModalMarker","people","units","person","ModalPerson","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Header","handleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","noWrap","MenuItems","handleClickLogout","ListItemIcon","Sidebar","handleDrawerClose","Drawer","NoMatch","Routes","google_maps_key","Map","hai","singHello","decode","clear","_loadKeys","aScript","document","createElement","head","appendChild","connectForm","substring","sm_oauth_url","get","sm","dbx","user","v","queryString","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c527e2e.chunk.js","sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport const API_BASE_URI = '/HelloVoterHQ/api/v1';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(server, uri, method, body) {\n  if (!server) return;\n\n  let https = true;\n  if (server.hostname.match(/^localhost/)) https = false;\n\n  if (!method) method = 'GET';\n\n  if (!server.hostname) {\n    notify_error({}, 'API server definition error.');\n    return;\n  }\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server.hostname + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + server.jwt,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(refer) {\n  let imports = [];\n  try {\n    let data = await _fetch(refer.state.server, API_BASE_URI+'/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport async function _loadVolunteer(refer, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(refer, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\nexport async function _loadTurf(refer, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTurfs(refer, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(refer, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(refer, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(refer, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(refer, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(refer, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + uri);\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttributes(refer) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\nexport async function _loadAddressData(refer, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(refer.props.server, API_BASE_URI+'/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(refer, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(refer.props.server, API_BASE_URI+'/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  }\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  }\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cb_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let data = {};\n    try {\n      data = await _fetch(this.props.server, API_BASE_URI+'/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      cb_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {this.state.cb_version ? (\n            'HelloVoterAPI version ' + this.state.cb_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {this.state.neo4j_version ? (\n            'Neo4j version ' + this.state.neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          &copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: obj.add[i] }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: obj.rm[i] }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { formId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { formId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(this, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { turfId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { turfId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(this, this.props.id),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'team', this.props.id),\n        _loadTurfs(this.props.refer, this.props.id),\n        _loadTurfs(this.props.refer),\n        _loadForms(this.props.refer, this.props.id),\n        _loadForms(this.props.refer),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport {\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.jsx';\nimport { CardTeam } from './Teams.jsx';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForms,\n  _loadForm,\n  _loadAttributes,\n  _loadVolunteers,\n  _loadTeams,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nconst FTYPE = t.enums(\n  {\n    String: 'Text Input',\n    TEXTBOX: 'Large Text Box',\n    Number: 'Number',\n    Boolean: 'On/Off Switch',\n    SAND: 'Agree/Disagree'\n    //  'List': 'Select from List',\n  },\n  'FTYPE'\n);\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE\n};\n\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      name: t.String\n    });\n\n    this.state = {\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      customForm: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.id2List = {\n        droppable: 'attributes',\n        droppable2: 'attributes_selected',\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n      const { source, destination } = result;\n\n      // dropped outside the list\n      if (!destination) {\n          return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n          const attributes = reorder(\n              this.getList(source.droppableId),\n              source.index,\n              destination.index\n          );\n\n          let state = { attributes };\n\n          if (source.droppableId === 'droppable2') {\n              state = { attributes_selected: attributes };\n          }\n\n          this.setState(state);\n      } else {\n          const result = move(\n              this.getList(source.droppableId),\n              this.getList(destination.droppableId),\n              source,\n              destination\n          );\n\n          this.setState({\n              attributes: result.droppable,\n              attributes_selected: result.droppable2\n          });\n      }\n  };\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n    case 'String':\n      return 'Text Input';\n    case 'TEXTBOX':\n      return 'Text Box';\n    case 'Number':\n      return 'Number';\n    case 'Boolean':\n      return 'On/Off Switch';\n    case 'SAND':\n      return 'Agree/Disagree';\n    case 'List':\n      return 'Select from List';\n    default:\n      return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({ fields, order });\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(this);\n      attributes = await _loadAttributes(this);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n        //if (a.values) fields[a.id].options =\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: Object.keys(this.state.fields),\n      };\n\n      await _fetch(this.props.server, API_BASE_URI+'/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  render() {\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                  <DragDropContext onDragEnd={this.onDragEnd}>\n                      <Droppable droppableId=\"droppable\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                      &nbsp;\n                      Drag to assign\n                      &nbsp;\n                      <Droppable droppableId=\"droppable2\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes_selected.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                                  <Checkbox value=\"ack\" color=\"primary\" /> Readonly\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                  </DragDropContext>\n                </div>\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'form', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'form', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { form } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull form={form} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteers,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  RootLoader,\n  Icon,\n  PlacesAutocomplete,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport default class Volunteers extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n    let invited = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else if (c.invited) invited.push(c);\n      else if (c.ass.ready || c.ass.teams.length) ready.push(c);\n      else unassigned.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/invited'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Invited ({invited.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/invited\"\n              render={() => (\n                <div>\n                  <ListVolunteers\n                    refer={this}\n                    type=\"Invited\"\n                    volunteers={invited}\n                  />\n                  <Button onClick={async () => {\n                    let obj = await _fetch(\n                      this.props.server,\n                      API_BASE_URI+'/volunteer/invite',\n                      'POST'\n                    );\n                    if (obj.token) {\n                      this.setState({ thisVolunteer: {id: 'invite:'+obj.token} });\n                    } else {\n                      notify_error({}, 'Invite failed.');\n                    }\n                  }} color=\"primary\">\n                    Invite Someone\n                  </Button>\n                </div>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n                <CardVolunteer\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisVolunteer.id ? true : false}\n              onClose={() => this.setState({ thisVolunteer: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardVolunteer\n                  key={this.state.thisVolunteer.id}\n                  id={this.state.thisVolunteer.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/promote',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/demote',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { formId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { formId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(this, this.props.id),\n        _loadForms(this.props.refer),\n        _loadTurfs(this.props.refer),\n        _loadTeams(this.props.refer)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(this.props.refer, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(this.props.refer, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n      {\n        value: 'auto',\n        id: 'auto',\n        label: (\n          <CardTurf\n            key=\"auto\"\n            turf={{\n              id: 'auto',\n              name: 'Area surrounnding this volunteer\\'s home address'\n            }}\n            refer={this}\n            icon={faHome}\n          />\n        )\n      }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        this.state.server,\n        API_BASE_URI+'/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisVolunteer: volunteer })}\n      >\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </button>\n    ) : (\n      <button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        this.props.refer.state.server,\n        API_BASE_URI+'/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      <pre>\n      {JSON.stringify(props.refer.state.turf.stats, null, 2)}\n      </pre>\n      <br />\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'turf', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState();\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState() {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(this.props.server, API_BASE_URI+'/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(this);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(this);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = API_BASE_URI+'/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(this.props.server, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  RootLoader\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(this.props.server, API_BASE_URI+'/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {this.props.refer.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport {\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    this.setState({ loading: true });\n\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(this);\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n        data: a,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions});\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption});\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._init()}>\n        <h3>Attributes</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to edit\"\n        />\n      {this.state.selectedAttributeOption?\n      <div>{JSON.stringify(this.state.selectedAttributeOption.data)}</div>\n      :\n      <div></div>\n      }\n      </RootLoader>\n    );\n  }\n}\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => format.value && i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n  componentDidMount() {\n    this._loadData();\n  }\n\n  state = {\n    server: this.props.server,\n    imports: [],\n    ...defaultState,\n  };\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(this.props.server, API_BASE_URI+'/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(this.props.server, API_BASE_URI+'/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(this.props.server, API_BASE_URI+'/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst tsToStr = ts => {\n  return new Date(ts).toString();\n};\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      server: this.props.server,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(this.state.server, API_BASE_URI+'/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Loading extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            HelloVoterHQ is loading...\n          </Typography>\n          <CircularProgress height={15} />\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loading);\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let loginOptions = [{label: 'Organization ID', value: 'org'}, {label: '3rd Party Server', value: 'server'}];\n    if (process.env.NODE_ENV === 'development') loginOptions.unshift({label: 'LOCAL DEVELOPMENT', value: 'dev'});\n\n    let token;\n\n    try {\n      if (this.props.location.pathname.match(/\\/jwt\\//)) {\n        token = this.props.location.pathname.split('/').pop();\n        localStorage.setItem('jwt', token);\n        props.refer._loadData();\n      }\n    } catch(e) {\n      console.warn(e);\n    }\n\n    this.state = {\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n      selectedLoginOption: loginOptions[0],\n      loginOptions: loginOptions,\n    };\n\n  }\n\n  render() {\n    const { classes, token, loginOptions, selectedLoginOption } = this.state;\n\n    if (token)\n      return (\n        <Router>\n          <Route render={() => (\n            <Redirect to=\"/\" />\n          )} />\n        </Router>\n      );\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); this.props.refer.doSave(e, this.state.target); }} >\n            <Select\n              value={selectedLoginOption}\n              options={loginOptions}\n              onChange={selectedLoginOption => this.setState({selectedLoginOption})}\n            />\n            <LoginOption refer={this} />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({target: 'google'})}\n            >\n              Google Sign In\n            </Button>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => this.setState({target: 'facebook'})}\n              className={classes.submit}\n            >\n              Facebook Sign In\n            </Button>\n          </form>\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nconst LoginOption = props => {\n  switch (props.refer.state.selectedLoginOption.value) {\n    case 'org':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Enter your Organization ID. Example: NCC1701</InputLabel>\n            <Input id=\"orgId\" name=\"orgId\" autoComplete=\"orgId\" autoFocus defaultValue={props.refer.state.orgId} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that you have read and agreed to our terms of use.\"\n          />\n        </div>\n      );\n    case 'server':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.refer.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(this, null, true),\n      _loadForms(this),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(this, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(this, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  server,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ @ {server.hostname}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n        onClick={() =>\n          (window.location.href =\n            '/HelloVoterHQ/#/volunteers/view/' + getUserProp('id'))\n        }\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/map/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <NavigationIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Map\" />\n        </ListItem>\n      </Link>\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ server, refer, google_maps_key }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard server={server} refer={refer} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers server={server} />} />\n    <Route path=\"/teams/\" render={() => <Teams server={server} />} />\n    <Route path=\"/turf/\" render={() => <Turf server={server} />} />\n    <Route path=\"/forms/\" render={() => <Forms server={server} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes server={server} />} />\n    <Route\n      path=\"/map/\"\n      render={() => <Map server={server} apiKey={google_maps_key} />}\n    />\n    <Route path=\"/import/\" render={() => <ImportData server={server} />} />\n    <Route path=\"/queue/\" render={() => <Queue server={server} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics server={server} />} />\n    <Route path=\"/settings/\" render={() => <Settings server={server} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} refer={refer} />} />\n    <Route path=\"/about/\" render={() => <About server={server} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login, Loading } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: {},\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({loading: true});\n\n    let hostname = '';\n    let token = '';\n    let orgId = '';\n\n    try {\n      token = localStorage.getItem('jwt');\n      hostname = localStorage.getItem('server');\n      orgId = localStorage.getItem('orgId');\n\n      // assume error unless proven otherwise\n      let hai = {error: true};\n\n      if (hostname && token) {\n        hai = await this.singHello(hostname, jwt.decode(token)['id'].split(\":\")[0], token, orgId);\n      } else {\n        throw new Error(\"missing hostname or token\");\n      }\n\n      if (hai.error) {\n        throw new Error(\"hai error\")\n      }\n    } catch (e) {\n      // if we had a token, it was bad, clear everything\n      if (token) {\n        hostname = '';\n        token = '';\n        orgId = '';\n        localStorage.clear();\n        console.warn(\"Cleaning localStorage\");\n      }\n      console.warn(e);\n    }\n\n    this.setState({\n      server: {\n        hostname: hostname,\n        jwt: token,\n        orgId: orgId,\n      },\n      loading: false,\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n    if (!this.state.server.hostname) return;\n\n    let data;\n\n    try {\n      data = await _fetch(this.state.server, API_BASE_URI+'/google_maps_key');\n      if (!data) return;\n\n      // load google places API\n      var aScript = document.createElement('script');\n      aScript.type = 'text/javascript';\n      aScript.src =\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        data.google_maps_key +\n        '&libraries=places';\n      document.head.appendChild(aScript);\n\n      this.setState({ google_maps_key: data.google_maps_key });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.server.jwt) return null;\n\n    try {\n      item = jwt.decode(this.state.server.jwt)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.clear();\n    this.setState({ menuLogout: false, server: {} });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n    let orgId;\n\n    if (event.target.orgId) {\n      orgId = event.target.orgId.value;\n      this.setState({orgId});\n      let place = orgId.substring(0,2).toLowerCase();\n      server = 'gotv-'+place+'.ourvoiceusa.org';\n    } else if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = 'localhost:8080';\n    }\n    await this.singHello(server, target, null, orgId);\n  };\n\n  singHello = async (server, target, token, orgId) => {\n    let res;\n\n    localStorage.setItem('server', server);\n    localStorage.setItem('orgId', orgId);\n\n    let https = true;\n    if (server.match(/^localhost/)) https = false;\n\n    try {\n      res = await fetch('http'+(https?'s':'')+'://' + server + API_BASE_URI+'/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (token ? token : (this.state.server.jwt ? this.state.server.jwt : 'of the one ring')),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ server: server, dbx: null, user: this.state.user });\n        return { error: false, flag: true };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { server, loading } = this.state;\n\n    if (loading) return (\n      <Router>\n        <Route path=\"/\" render={props => <Loading {...props}  />} />\n      </Router>\n    );\n\n    if (!server.hostname) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} refer={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            server={server}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes\n              server={server}\n              refer={this}\n              google_maps_key={this.state.google_maps_key}\n            />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}