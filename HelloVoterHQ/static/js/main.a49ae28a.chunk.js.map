{"version":3,"sources":["components/Login.js","common.js","components/Dashboard.js","components/Forms.js","components/Teams.js","components/Turf.js","components/Volunteers.js","components/Map.js","components/ImportData.js","components/Analytics.js","components/Settings.js","components/Jwt.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","main","Object","defineProperty","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","concat","avatar","margin","backgroundColor","palette","secondary","form","submit","props","classes","react_default","a","createElement","className","CssBaseline_default","Paper_default","Avatar_default","LockOutlined_default","Typography_default","component","variant","onSubmit","e","preventDefault","refer","doSave","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoComplete","autoFocus","defaultValue","state","qserver","FormControlLabel_default","control","Checkbox_default","value","color","label","Button_default","type","role","aria-label","notify_success","msg","NotificationManager","success","notify_error","error","console","warn","_fetch","_x","_x2","_x3","_x4","_fetch2","apply","this","arguments","_callee","server","uri","method","body","res","regenerator_default","wrap","_context","prev","next","hostname","abrupt","fetch","headers","Authorization","jwt","Content-Type","JSON","stringify","sent","status","t0","Error","text","t1","stop","Icon","react_fontawesome_index_es","assign","style","data-tip","icon","iconName","RootLoader","flag","CircularProgress_default","common_Icon","faSync","onClick","func","children","DialogSaving","Modal_default","aria-labelledby","aria-describedby","open","position","top","left","right","disableShrink","_searchStringify","obj","o","parse","last_seen","toLowerCase","_loadVolunteer","_x5","_x6","_loadVolunteer2","_callee2","volunteer","_context2","json","_loadVolunteers","_x7","_x8","_x9","_loadVolunteers2","_callee3","byType","volunteers","call","_context3","_loadTurf","_x10","_x11","_loadTurf2","_callee4","turf","_context4","data","_loadTurfs","_x12","_x13","_x14","_loadTurfs2","_callee5","teamId","_context5","_loadTeam","_x15","_x16","_loadTeam2","_callee6","team","_context6","_loadTeams","_x17","_x18","_x19","_loadTeams2","_callee7","teams","_context7","_loadForm","_x20","_x21","_loadForm2","_callee8","_context8","_loadForms","_x22","_x23","_loadForms2","_callee9","forms","_context9","_loadAddresses","_x24","_loadAddresses2","_callee10","addresses","_context10","nodes","_handleSelectChange","oldopt","newopt","add","rm","prior","map","now","ni","n","indexOf","push","pi","p","PlacesAutocomplete","react_places_autocomplete_dist_default","addressSearch","_ref","getInputProps","getSuggestionItemProps","suggestions","loading","suggestion","description","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","_loadData","asyncToGenerator","mark","setState","common_RootLoader","Dashboard_CardDashboard","stat","faUser","faUsers","turfs","faMap","faClipboard","questions","faChartPie","number_format_default","displayType","thousandSeparator","faMapMarkerAlt","filesize","dbsize","round","faDatabase","Component","CardDashboard","height","faShieldAlt","flex","overflow","Modal","setAppElement","document","getElementById","customStyles","content","bottom","transform","FTYPE","t","enums","String","TEXTBOX","Number","Boolean","SAND","addItem","key","options","fields","help","premade","FullName","optional","Phone","Email","RegisteredToVote","PartyAffiliation","handleClickDelete","menuDelete","handleCloseDelete","handlePageClick","pageNum","selected","assertThisInitialized","_deleteForm","_ref2","saving","formId","window","location","href","_createForm","formName","addFormForm","getValue","trim","match","length","questions_order","order","perPage","localStorage","getItem","keys","mainForm","struct","customForm","search","formServerItems","customFormItems","formServerOptions","onChange","bind","openModal","closeModal","doAddCustom","onTypeSearch","handlePageNumChange","setItem","event","target","_this$state","ref","_this$state2","f","splice","forceUpdate","_this2","list","forEach","includes","HashRouter","Route","exact","path","render","Forms_ListForms","main_default","Form","onChangeForm","faPlusCircle","field","inputTypeToReadable","faTimesCircle","react_modal_lib_default","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","Forms_CardForm","params","edit","Dialog_default","onClose","DialogTitle_default","DialogActions_default","common_DialogSaving","ListForms","paginate","idx","Math","floor","react_paginate_dist_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","react_select_esm","Link","to","CardForm","_Component2","_this3","handleTeamsChange","_ref6","selectedTeamsOption","i","_i","done","t2","t3","t4","handleMembersChange","_ref7","selectedMembersOption","_i2","cId","members","teamsSelected","_ref9","_ref10","teamOptions","membersOption","Promise","all","slicedToArray","Teams_CardTeam","c","Volunteers_CardVolunteer","inherits","createClass","Forms_CardFormFull","CardFormFull","isMulti","isSearchable","placeholder","TimeAgo","locale","en","_deleteTeam","_createTeam","addTeamForm","Teams_ListTeams","onChangeTeam","ListTeams","CardTeam","_ref5","handleFormsChange","selectedFormsOption","teamn","handleTurfChange","selectedTurfOption","_i3","turfId","turfSelected","formSelected","memberOptions","formOptions","turfOptions","Turf_CardTurf","Teams_CardTeamFull","CardTeamFull","submitAddress","address","pos","geocodeByAddress","getLatLng","addressCoords","handleDrawChange","selectedDrawOption","selectedStateOption","selectedTypeOption","selectedDistrictOption","importFileData","handleStateChange","handleTypeChange","handleDistrictChange","handleImportFiles","files","reader","FileReader","onload","result","readAsText","_deleteTurf","_createTurf","objs","_res","_obj","geometry","addTurfForm","circleToPolygon","lng","lat","districtOptions","urlFromDist","t5","t6","t7","t8","selectedTypeFetch","dist","val","replace","initState","onTypeAddress","thisTurf","_showDistrictOption","drawOptions","Turf_ListTurf","onChangeTurf","Turf_TurfOptions","_showSubmitButton","ListTurf","TurfOptions","stateOptions","us_states","k","onMenuClose","accept","common_PlacesAutocomplete","debounce","onSelect","rel","CardTurf","_ref8","_ref11","faStreetView","Turf_CardTurfFull","CardTurfFull","thisVolunteer","ready","unassigned","denied","locked","ass","Volunteers_ListVolunteers","ListVolunteers","List_default","CardVolunteer","handleLeaderChange","_ref3","selectedLeaderOption","_ref4","leaderOptions","faHome","teamperms","leader","autoturf","_lockVolunteer","term","ReactTooltip","rebuild","_this4","ListItem_default","ListItemAvatar_default","alt","src","ListItemText_default","primary","homeaddress","extract_addr","Volunteers_VolunteerBadges","Volunteers_CardVolunteerFull","button","CardVolunteerFull","format","Date","email","phone","Volunteers_VolunteerAddress","direct","VolunteerAddress","_Component3","_this5","_this6","VolunteerBadges","badges","admin","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","arr","split","shift","join","_Component","d","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","polygons","isGeolocationAvailable","isGeolocationEnabled","coords","access","longitude","latitude","geojson2polygons","google_maps_react_dist","google","zoom","center","title","latlng","paths","strokeColor","strokeWeight","fillColor","fillOpacity","visible","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","HEADER","address1","address2","city","zip","preProcess","pop","onHeadersSubmit","evt","setTimeout","FormOptions","h","maybe","FormSchema","react_csv_reader_default","onError","preProcessError","onFileLoaded","data01","v","data02","renderLabelContent","percent","x","y","midAngle","textAnchor","toFixed","animation","PieChart","Legend","Pie","dataKey","cx","cy","startAngle","endAngle","outerRadius","entry","index","Cell","fill","Label","LabelList","innerRadius","paddingAngle","isAnimationActive","pathname","jwt_decode","es_Route","Redirect","componentDidMount","cb_version","version","process","faTwitter","faFacebook","faGlobe","_loadKeys","aScript","google_maps_key","head","appendChild","handleClickLogout","menuLogout","handleCloseLogout","singHello","sm_oauth_url","get","dbx","user","handleDrawerOpen","handleDrawerClose","queryString","log","connectForm","prop","item","removeItem","root","dist_default","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","menuButton","menuButtonHidden","Menu_default","noWrap","getUserProp","Drawer_default","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","ListItemIcon_default","Dashboard_default","Person_default","People_default","Map_default","Assignment_default","Navigation_default","PresentToAll_default","BarChart_default","Settings_default","IndeterminateCheckBox_default","AccountBalance_default","Help_default","appBarSpacer","lib","Switch","Dashboard_App","Volunteers_App","Teams_App","Turf_App","Forms_App","Map","ImportData_App","Analytics_App","Settings_App","Jwt_App","About_App","NoMatch","_logout","Login","paddingRight","objectSpread","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","flexGrow","whiteSpace","overflowX","chartContainer","tableContainer","h5","marginBottom","ReactDOM","src_App","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.a49ae28a.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nfunction LogIn(props) {\n  const { classes } = props;\n\n  return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in to HelloVoterHQ\n        </Typography>\n        <form className={classes.form} onSubmit={(e) => { e.preventDefault(); props.refer.doSave(e); }} >\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.refer.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign in\n          </Button>\n        </form>\n      </Paper>\n      <br />\n      <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n    </main>\n  );\n}\n\nexport default withStyles(styles)(LogIn);\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport {NotificationManager} from 'react-notifications';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(server, uri, method, body) {\n  if (!method) method = 'GET';\n\n  if (!server.hostname) {\n    notify_error({}, \"API server definition error.\");\n    return;\n  }\n\n  let res = await fetch('https://'+server.hostname+uri, {\n    method: method,\n    headers: {\n      'Authorization': 'Bearer '+server.jwt,\n      'Content-Type': 'application/json',\n    },\n    body: (body?JSON.stringify(body):null),\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res;\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled) return {access: false};\n  if (props.coords) return {access: true, lng: props.coords.longitude, lat: props.coords.latitude};\n  return {access: true};\n}\n\nexport const Icon = (props) => (\n  <FontAwesomeIcon style={{width: 25}} data-tip={(props['data-tip']?props['data-tip']:props.icon.iconName)} {...props} />\n)\n\nexport const RootLoader = (props) => {\n  if (props.flag) return (<CircularProgress />);\n  else return (\n    <div>\n      <Icon icon={faSync} color=\"green\" onClick={props.func} data-tip=\"Reload Data\" />\n      <div>{props.children}</div>\n    </div>\n  );\n}\n\nexport const DialogSaving = (props) => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div style={{\n          position: 'absolute',\n          top: 100, left: '40%', right: '40%',\n          backgroundColor: 'white',\n          padding: 40,\n        }}>\n        <center>\n          Saving changes...<br /><br />\n          <CircularProgress disableShrink />\n        </center>\n        </div>\n      </Modal>\n    );\n  return (<div />);\n}\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadVolunteer(refer, id) {\n  let volunteer = {};\n  try {\n    let res = await _fetch(refer.state.server, '/volunteer/v1/volunteer/get?id='+id);\n    volunteer = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load volunteer info.\");\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(refer, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId='+id;\n    else if (byType === 'turf') call = 'turf/assigned/volunteer/list?turfId='+id;\n    else if (byType === 'form') call = 'form/assigned/volunteer/list?formId='+id;\n\n    let res = await _fetch(refer.props.server, '/volunteer/v1/'+call);\n    volunteers = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load volunteer data.\");\n  }\n\n  return volunteers;\n}\n\nexport async function _loadTurf(refer, id) {\n  let turf = {};\n\n  try {\n    let res = await _fetch(refer.state.server, '/volunteer/v1/turf/get?turfId='+id);\n    turf = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load turf data.\");\n  }\n\n  return turf.data[0];\n}\n\nexport async function _loadTurfs(refer, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list'+(flag?'?geometry=true':'');\n    if (teamId) call = 'team/turf/list?teamId='+teamId+(flag?'&geometry=true':'');\n    let res = await _fetch(refer.props.server, '/volunteer/v1/'+call);\n    let data = await res.json();\n    turf = (data.data?data.data:[]);\n  } catch (e) {\n    notify_error(e, \"Unable to load turf data.\");\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(refer, id) {\n  let team = {};\n\n  try {\n    let res = await _fetch(refer.state.server, '/volunteer/v1/team/get?teamId='+id);\n    team = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load team data.\");\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(refer, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId='+id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId='+id\n\n    let res = await _fetch(refer.props.server, '/volunteer/v1/'+call);\n    let data = await res.json();\n    teams = (data.data?data.data:[]);\n  } catch (e) {\n    notify_error(e, \"Unable to load teams data.\");\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(refer, id) {\n  let form = {};\n\n  try {\n    let res = await _fetch(refer.state.server, '/volunteer/v1/form/get?formId='+id);\n    form = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load form data.\");\n  }\n\n  return form;\n}\n\nexport async function _loadForms(refer, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId='+teamId;\n    else uri = 'form/list';\n\n    let res = await _fetch(refer.props.server, '/volunteer/v1/'+uri);\n    let data = await res.json();\n    forms = (data.data?data.data:[]);\n  } catch (e) {\n    notify_error(e, \"Unable to load form data.\");\n  }\n\n  return forms;\n}\n\nexport async function _loadAddresses(refer) {\n  let addresses = {};\n  try {\n    let res = await _fetch(refer.props.server, '/volunteer/v1/sync', 'POST', {nodes: {}});\n    addresses = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load address information.\");\n  }\n  return addresses;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  let prior = oldopt.map((e) => {\n    return e.id;\n  });\n\n  let now = newopt.map((e) => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  };\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  };\n\n  return {add: add, rm: rm};\n}\n\nexport const PlacesAutocomplete = (props) => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n)\n\nconst addressSearch = ({ getInputProps, getSuggestionItemProps, suggestions, loading }) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport { faShieldAlt, faUser, faUsers, faMap, faClipboard, faChartPie, faMapMarkerAlt, faDatabase } from '@fortawesome/free-solid-svg-icons';\n\nimport { _fetch, notify_error, RootLoader, Icon } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      data: {},\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let data = {};\n\n    this.setState({loading: true})\n\n    try {\n      let res = await _fetch(this.props.server, '/volunteer/v1/dashboard');\n\n      data = await res.json();\n    } catch (e) {\n      notify_error(e, \"Unable to load dashboard info.\");\n    }\n\n    this.setState({data: data, loading: false});\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <CardDashboard name=\"Volunteers\" stat={this.state.data.volunteers} icon={faUser} />\n        <CardDashboard name=\"Teams\" stat={this.state.data.teams} icon={faUsers} />\n        <CardDashboard name=\"Turf\" stat={this.state.data.turfs} icon={faMap} />\n        <CardDashboard name=\"Forms\" stat={this.state.data.forms} icon={faClipboard} />\n        <CardDashboard name=\"Questions\" stat={this.state.data.questions} icon={faChartPie} />\n        <CardDashboard name=\"Addresses\" stat={(<NumberFormat value={this.state.data.addresses} displayType={'text'} thousandSeparator={true} />)} icon={faMapMarkerAlt} />\n        <CardDashboard name=\"Database size\" stat={filesize((this.state.data.dbsize?this.state.data.dbsize:0), {round: 1})} icon={faDatabase} />\n      </RootLoader>\n    );\n  }\n}\n\nconst CardDashboard = (props) => (\n  <div style={{display: 'flex', padding: '10px'}}>\n    <div style={{padding: '5px 10px'}}>\n      <Icon style={{width: 50, height: 50, color: \"gray\"}} icon={(props.icon?props.icon:faShieldAlt)} />\n    </div>\n    <div style={{flex: 1, overflow: 'auto'}}>\n      <h3>{props.name}: {props.stat}</h3>\n    </div>\n  </div>\n)\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport Modal from 'react-modal';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { faTimesCircle, faPlusCircle, faClipboard } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.js';\nimport { CardTeam } from './Teams.js';\n\nimport {\n  _fetch, notify_error, notify_success, _handleSelectChange, _searchStringify,\n  _loadForms, _loadForm, _loadVolunteers, _loadTeams,\n  RootLoader, Icon, DialogSaving,\n} from '../common.js';\n\nModal.setAppElement(document.getElementById('root'));\n\nconst customStyles = {\n  content : {\n    top                   : '15%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nconst FTYPE = t.enums({\n  'String': 'Text Input',\n  'TEXTBOX': 'Large Text Box',\n  'Number': 'Number',\n  'Boolean': 'On/Off Switch',\n  'SAND': 'Agree/Disagree',\n//  'List': 'Select from List',\n}, 'FTYPE');\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE,\n};\n\nvar options = {\n  fields: {\n    key: {\n      label: 'Input Key',\n      help: 'The spreadsheet column name.',\n    },\n    label: {\n      label: 'Input Label',\n      help: 'Label the user sees on the form.',\n    },\n    type: {\n      help: 'The type of input the user can enter.',\n    },\n  },\n};\n\nvar premade = {\n  'FullName': { label: 'Full Name', type: 'String', optional: true },\n  'Phone': { label: 'Phone Number', type: 'Number', optional: true },\n  'Email': { label: 'Email Address', type: 'String', optional: true },\n  'RegisteredToVote': { label: 'Are you registered to vote?', type: 'Boolean', optional: true },\n  'PartyAffiliation': { label: 'Party Affiliation', type: 'List', optional: true,\n    options: [\n      'No Party Preference',\n      'Democratic',\n      'Republican',\n      'Green',\n      'Libertarian',\n      'Other',\n    ]},\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = JSON.parse(JSON.stringify(premade)); // deep copy\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      'name': t.String,\n    });\n\n    this.state = {\n      loading: true,\n      forms: [],\n      fields: fields,\n      order: order,\n      customForm: null,\n      search: \"\",\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.',\n        },\n      },\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.doAddCustom = this.doAddCustom.bind(this);\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({pageNum: 1, perPage: obj.value});\n  }\n\n  handlePageClick = (data) => {\n    this.setState({pageNum: data.selected+1});\n  }\n\n  onTypeSearch (event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    })\n  }\n\n  openModal() {\n    this.setState({customForm: t.struct(addItem)})\n  }\n\n  closeModal() {\n    this.setState({customForm: null});\n  }\n\n  doAddCustom() {\n    let { fields, order } = this.state;\n\n    let ref = this.customForm.getValue();\n    if (ref === null) return;\n    let json = JSON.parse(JSON.stringify(ref)); // deep copy\n\n    let key = json.key;\n    delete json.key;\n    json.optional = true; // backwards compatability\n\n    // check for duplicate keys\n    if (fields[key]) {\n      //return Alert.alert('Error', 'Duplicate Input Key. Change your Input Key to add this item.', [{text: 'OK'}], { cancelable: false });    }\n      notify_error({}, \"Duplicate entry.\");\n      return;\n    }\n\n    fields[key] = json;\n    order[order.length] = key;\n\n    this.setState({customForm: null, fields: fields, order: order});\n\n  }\n\n  doShowCustom() {\n    this.setState({customForm: t.struct(addItem)});\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n      case 'String': return 'Text Input';\n      case 'TEXTBOX': return 'Text Box';\n      case 'Number': return 'Number';\n      case 'Boolean': return 'On/Off Switch';\n      case 'SAND': return 'Agree/Disagree';\n      case 'List': return 'Select from List';\n      default: return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({fields, order});\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({addFormForm})\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({loading: true});\n    let forms = [];\n\n    try {\n      forms = await _loadForms(this);\n    } catch (e) {\n      notify_error(e, \"Unable to load forms.\");\n    }\n    this.setState({forms, loading: false});\n  }\n\n  _deleteForm = async (id) => {\n    this.setState({saving: true, menuDelete: false});\n    try {\n      await _fetch(this.props.server, '/volunteer/v1/form/delete', 'POST', {formId: id});\n      notify_success(\"Form has been deleted.\");\n    } catch (e) {\n      notify_error(e, \"Unable to delete form.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/forms/\";\n    this._loadData();\n  }\n\n  _createForm = async () => {\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error({}, \"From name can only contain alphanumeric characters, and spaces and dashes.\");\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, \"Form name cannot be longer than 255 characters.\");\n      return;\n    }\n\n    this.setState({saving: true});\n\n    // make sure this name doesn't exist\n    try {\n\n      let obj;\n\n      obj = {\n        name: formName,\n        questions: this.state.fields,\n        questions_order: this.state.order,\n      };\n\n      await _fetch(this.props.server, '/volunteer/v1/form/create', 'POST', obj);\n      notify_success(\"Form has been created.\")\n    } catch (e) {\n      notify_error(e, \"Unable to create form.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/forms/\";\n    this._loadData();\n  }\n\n  render() {\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search)) return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/forms/\" render={() => (\n            <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n              Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n              <br />\n              <ListForms forms={list} refer={this} />\n            </RootLoader>\n          )} />\n          <Route path=\"/forms/add\" render={(props) => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addFormForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeForm(e)}\n                value={this.state.addFormForm}\n              />\n\n              <div style={{margin: 25}}>Items in your Volunteering form: <button onClick={this.openModal}><Icon icon={faPlusCircle} /> Add Item</button></div>\n\n              {Object.keys(this.state.fields).map((f) => {\n                let field = this.state.fields[f];\n                return (\n                  <li key={f} style={{marginLeft: 25}}>{field.label+(field.required?' *':'')} : {this.inputTypeToReadable(field.type)} <Icon icon={faTimesCircle} color=\"red\" /></li>\n                );\n              })}\n\n              <button style={{margin: 25}} onClick={() => this._createForm()}>\n                Create Form\n              </button>\n\n              <Modal\n                isOpen={(this.state.customForm !== null)}\n                onAfterOpen={this.afterOpenModal}\n                onRequestClose={this.closeModal}\n                style={customStyles}\n                contentLabel=\"Add item to form\"\n              >\n              <t.form.Form\n                ref={(ref) => this.customForm = ref}\n                type={this.customFormItems}\n                options={options}\n                onChange={this.onChange}\n                value={this.state.customForm}\n              />\n                <button onClick={this.doAddCustom}>Add this item</button>\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                <button onClick={() => this.setState({customForm: null})}>Dismiss</button>\n              </Modal>\n            </div>\n          )} />\n          <Route path=\"/forms/view/:id\" render={(props) => (\n            <div>\n              <CardForm key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n              <br />\n              <br />\n              <br />\n              <Button onClick={this.handleClickDelete} color=\"primary\">\n                Delete Form\n              </Button>\n              <Dialog\n                open={this.state.menuDelete}\n                onClose={this.handleCloseDelete}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">Are you sure you wish to delete this form?</DialogTitle>\n                <DialogActions>\n                  <Button onClick={this.handleCloseDelete} color=\"primary\" autoFocus>\n                    No\n                  </Button>\n                  <Button onClick={() => this._deleteForm(props.match.params.id)} color=\"primary\">\n                    Yes\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </div>\n          )} />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = (props) => {\n  const perPage = props.refer.state.perPage;\n  let paginate = (<div></div>);\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx/perPage)+1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{display: 'flex'}}>\n      <ReactPaginate previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.forms.length/perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{width: 75}}>\n      # Per Page <Select\n        value={{value: perPage, label: perPage}}\n        onChange={props.refer.handlePageNumChange}\n        options={[\n          {value: 5, label: 5},\n          {value: 10, label: 10},\n          {value: 25, label: 25},\n          {value: 50, label: 50},\n          {value: 100, label: 100}\n        ]}\n      />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>{props.type}Forms ({props.forms.length})</h3>\n      <Link to={'/forms/add'}><button>Add Form</button></Link>\n      {paginate}\n      {list}\n      {paginate}\n     </div>\n   );\n};\n\nexport class CardForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async (selectedTeamsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedTeamsOption, selectedTeamsOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/team/add', 'POST', {teamId: obj.add[i], formId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/team/remove', 'POST', {teamId: obj.rm[i], formId: this.props.id});\n      }\n\n      notify_success(\"Team assignments saved.\");\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleMembersChange = async (selectedMembersOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedMembersOption, selectedMembersOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/volunteer/add', 'POST', {cId: obj.add[i], formId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/volunteer/remove', 'POST', {cId: obj.rm[i], formId: this.props.id});\n      }\n\n      notify_success(\"Volunteer assignments saved.\");\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  _loadData = async () => {\n    let form = {}, volunteers = [], members = [], teams = [], teamsSelected = [];\n\n    this.setState({loading: true})\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'form', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'form', this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, \"Unable to load form info.\");\n      return this.setState({loading: false});\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach((t) => {\n      teamOptions.push({value: _searchStringify(t), id: t.id, label: (\n        <CardTeam key={t.id} team={t} refer={this} />\n      )});\n    });\n\n    teamsSelected.forEach((t) => {\n      selectedTeamsOption.push({value: _searchStringify(t), id: t.id, label: (<CardTeam key={t.id} team={t} refer={this} />)});\n    })\n\n    volunteers.forEach((c) => {\n      membersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    members.forEach((c) => {\n      selectedMembersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    this.setState({form, volunteers, teamOptions, membersOption, selectedTeamsOption, selectedMembersOption, loading: false});\n  }\n\n  render() {\n    const { form } = this.state;\n\n    if (!form || this.state.loading) {\n      return (<CircularProgress />);\n    }\n\n    return (\n      <div>\n        <div style={{display: 'flex', padding: '10px'}}>\n          <div style={{padding: '5px 10px'}}>\n            <Icon icon={faClipboard} style={{width: 50, height: 50, color: \"gray\"}} /> {form.name} {(this.props.edit?'':(<Link to={'/forms/view/'+form.id}>view</Link>))}\n          </div>\n        </div>\n        {this.props.edit?<CardFormFull form={form} refer={this} />:''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = (props) => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  notify_error, notify_success, _fetch,  _handleSelectChange, _searchStringify,\n  _loadVolunteers, _loadTeams, _loadTeam, _loadForms, _loadTurfs,\n  RootLoader, Icon, DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf.js';\nimport { CardForm } from './Forms.js';\nimport { CardVolunteer } from './Volunteers.js';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      teams: [],\n      search: \"\",\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({addTeamForm})\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({pageNum: 1, perPage: obj.value});\n  }\n\n  onTypeSearch (event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    })\n  }\n\n  _deleteTeam = async (id) => {\n    this.setState({saving: true, menuDelete: false});\n    try {\n      await _fetch(this.props.server, '/volunteer/v1/team/delete', 'POST', {teamId: id});\n      notify_success(\"Team has been deleted.\");\n    } catch (e) {\n      notify_error(e, \"Unable to delete teams.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/teams/\";\n    this._loadData();\n  }\n\n  _createTeam = async () => {\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({saving: true});\n\n    try {\n      await _fetch(this.props.server, '/volunteer/v1/team/create', 'POST', {name: json.name});\n      notify_success(\"Team has been created.\");\n    } catch (e) {\n      notify_error(e, \"Unable to create team.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/teams/\";\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({loading: true, search: \"\"});\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(this);\n    } catch (e) {\n      notify_error(e, \"Unable to load volunteers.\");\n    }\n\n    this.setState({loading: false, teams});\n  }\n\n  handlePageClick = (data) => {\n    this.setState({pageNum: data.selected+1});\n  }\n\n  render() {\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search)) return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/teams/\" render={() => (\n            <RootLoader flag={this.state.loading} func={this._loadData}>\n              Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n              <ListTeams refer={this} teams={list} />\n            </RootLoader>\n          )} />\n          <Route exact={true} path=\"/teams/add\" render={() => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addTeamForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTeam(e)}\n                value={this.state.addTeamForm}\n              />\n              <button onClick={() => this._createTeam()}>\n                Submit\n              </button>\n            </div>\n          )} />\n          <Route path=\"/teams/view/:id\" render={(props) => (\n            <div>\n              <CardTeam key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n              <br />\n              <br />\n              <br />\n              <Button onClick={this.handleClickDelete} color=\"primary\">\n                Delete Team\n              </Button>\n              <Dialog\n                open={this.state.menuDelete}\n                onClose={this.handleCloseDelete}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">Are you sure you wish to delete this team?</DialogTitle>\n                <DialogActions>\n                  <Button onClick={this.handleCloseDelete} color=\"primary\" autoFocus>\n                    No\n                  </Button>\n                  <Button onClick={() => this._deleteTeam(props.match.params.id)} color=\"primary\">\n                    Yes\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </div>\n          )} />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = (props) => {\n  const perPage = props.refer.state.perPage;\n  let paginate = (<div></div>);\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx/perPage)+1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{display: 'flex'}}>\n      <ReactPaginate previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.teams.length/perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{width: 75}}>\n      # Per Page <Select\n        value={{value: perPage, label: perPage}}\n        onChange={props.refer.handlePageNumChange}\n        options={[\n          {value: 5, label: 5},\n          {value: 10, label: 10},\n          {value: 25, label: 25},\n          {value: 50, label: 50},\n          {value: 100, label: 100}\n        ]}\n      />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>{props.type}Teams ({props.teams.length})</h3>\n      <Link to={'/teams/add'}><button>Add Team</button></Link>\n      {paginate}\n      {list}\n      {paginate}\n     </div>\n   );\n};\n\nexport class CardTeam extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async (selectedMembersOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedMembersOption, selectedMembersOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/add', 'POST', {teamId: this.props.id, cId: obj.add[i]});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/remove', 'POST', {teamId: this.props.id, cId: obj.rm[i]});\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success(\"Team assignments saved.\");\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove team members.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleFormsChange = async (selectedFormsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedFormsOption, selectedFormsOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/team/add', 'POST', {formId: obj.add[i], teamId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/team/remove', 'POST', {formId: obj.rm[i], teamId: this.props.id});\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(this, this.props.id);\n      notify_success(\"Form selection saved.\");\n      this.setState({teamn, selectedFormsOption});\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove form.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleTurfChange = async (selectedTurfOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedTurfOption, selectedTurfOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/team/add', 'POST', {turfId: obj.add[i], teamId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/team/remove', 'POST', {turfId: obj.rm[i], teamId: this.props.id});\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success(\"Turf selection saved.\");\n      this.setState({team, selectedTurfOption});\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove turf.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  _loadData = async () => {\n    let team = {}, volunteers = [], members = [], turfSelected = [], turfs = [], formSelected = [], forms = [];\n    this.setState({loading: true})\n\n    try {\n      [team, volunteers, members, turfSelected, turfs, formSelected, forms] = await Promise.all([\n        _loadTeam(this, this.props.id),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'team', this.props.id),\n        _loadTurfs(this.props.refer, this.props.id),\n        _loadTurfs(this.props.refer),\n        _loadForms(this.props.refer, this.props.id),\n        _loadForms(this.props.refer),\n      ]);\n    } catch (e) {\n      notify_error(e, \"Unable to load team info.\");\n      return this.setState({loading: false});\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach((c) => {\n      memberOptions.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    members.forEach((c) => {\n      selectedMembersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    turfs.forEach((t) => {\n      turfOptions.push({value: _searchStringify(t), id: t.id, label: (<CardTurf key={t.id} turf={t} refer={this} />)});\n    })\n\n    turfSelected.forEach((t) => {\n      selectedTurfOption.push({value: _searchStringify(t), id: t.id, label: (<CardTurf key={t.id} turf={t} refer={this} />)});\n    })\n\n    forms.forEach((f) => {\n      formOptions.push({value: _searchStringify(f), id: f.id, label: (<CardForm key={f.id} form={f} refer={this} />)});\n    })\n\n    formSelected.forEach((f) => {\n      selectedFormsOption.push({value: _searchStringify(f), id: f.id, label: (<CardForm key={f.id} form={f} refer={this} />)});\n    })\n\n    this.setState({team, memberOptions, turfOptions, formOptions, selectedMembersOption, selectedTurfOption, selectedFormsOption, loading: false});\n  }\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return (<CircularProgress />);\n    }\n\n    return (\n      <div>\n        <div style={{display: 'flex', padding: '10px'}}>\n          <div style={{flex: 1, overflow: 'auto', padding: '5px 10px'}}>\n            <Icon icon={faUsers} style={{width: 50, height: 50, color: \"gray\"}} /> {team.name} {(this.props.edit?'':(<Link to={'/teams/view/'+team.id}>view</Link>))}\n          </div>\n        </div>\n        {this.props.edit?<CardTeamFull team={team} refer={this} />:''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = (props) => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport {geocodeByAddress, getLatLng} from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport { CardVolunteer } from './Volunteers.js';\nimport { CardTeam } from './Teams.js';\n\nimport {\n  _fetch, notify_error, notify_success, _handleSelectChange, _searchStringify,\n  _loadTurfs, _loadTurf, _loadTeams, _loadVolunteers,\n  PlacesAutocomplete, RootLoader, Icon, DialogSaving,\n} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState();\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = (address) => this.setState({ address })\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState() {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: \"\",\n      addressCoords: null,\n      search: \"\",\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({pageNum: 1, perPage: obj.value});\n  }\n\n  handlePageClick = (data) => {\n    this.setState({pageNum: data.selected+1});\n  }\n\n  onTypeSearch (event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    })\n  }\n\n  submitAddress = async (address) => {\n    this.setState({address, saving: true})\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({addressCoords: pos});\n    } catch (e) {\n      notify_error(e, \"Unable to search or geocode address.\");\n    }\n    this.setState({saving: false});\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({addTurfForm})\n  }\n\n  handleDrawChange = (selectedDrawOption) => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: \"\",\n     });\n  }\n\n  handleStateChange = (selectedStateOption) => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = (selectedTypeOption) => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = (selectedDistrictOption) => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = (files: FileList) => {\n    this.setState({saving: true});\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      this.setState({importFileData: event.target.result, saving: false});\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n      case 'sldu':\n      case 'sldl':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (this.state.selectedTypeOption && this.state.selectedTypeOption.value === \"state\") return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption) return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async (id) => {\n    this.setState({saving: true, menuDelete: false});\n    try {\n      await _fetch(this.props.server, '/volunteer/v1/turf/delete', 'POST', {turfId: id});\n      notify_success(\"Turf has been deleted.\");\n    } catch (e) {\n      notify_error(e, \"Unable to delete turf.\");\n    }\n    this.setState({saving: false});\n\n    this._loadData();\n    window.location.href = \"/HelloVoterHQ/#/turf/\";\n  }\n\n  _createTurf = async () => {\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({saving: true});\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, \"Unable to parse import data file.\");\n        return this.setState({saving: false});\n      }\n    } else if (this.state.selectedDrawOption.value === \"radius\") {\n      objs.push(circleToPolygon([this.state.addressCoords.lng,this.state.addressCoords.lat],1000));\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (this.state.selectedDistrictOption && this.state.selectedDistrictOption.value === 'all') {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(this.urlFromDist(state, this.state.selectedTypeOption.value, this.state.districtOptions[i].value));\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(this.urlFromDist(state, this.state.selectedTypeOption.value, (this.state.selectedDistrictOption?this.state.selectedDistrictOption.value:null)));\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, \"Unable to fetch district info data.\");\n        return this.setState({saving: false});\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (this.state.selectedDistrictOption && this.state.selectedDistrictOption.value === 'all')\n          name = json.name+' '+obj.name;\n        else\n          name = json.name;\n\n        await _fetch(this.props.server, '/volunteer/v1/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success(\"Turf has been created.\");\n    } catch (e) {\n      notify_error(e, \"Unable to create turf.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/turf/\";\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n      case 'state':\n        uri = 'states/'+state+'/shape.geojson';\n        break;\n      case 'cd':\n        // TODO: handle the fact there are new years with less in them\n        uri = 'cds/2016/'+value+'/shape.geojson';\n        break;\n      case 'sldu':\n        uri = 'states/'+state+'/sldu/'+value+'.geojson';\n        break;\n      case 'sldl':\n        uri = 'states/'+state+'/sldl/'+value+'.geojson';\n        break;\n      default:\n        throw new Error(\"unknown selectedTypeOption\");\n    }\n\n    return 'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/'+uri;\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({districtOptions: []})\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n        // TODO: handle the fact there are new years with less in them\n        uri = 'cds/2016/';\n        break;\n      case 'sldu':\n        uri = 'states/'+state+'/sldu/';\n        break;\n      case 'sldl':\n        uri = 'states/'+state+'/sldl/';\n        break;\n      default:\n        return;\n    }\n\n    let res = await fetch('https://api.github.com/repos/OurVoiceUSA/districts/contents/'+uri);\n\n    let dist = [{value: 'all', label: 'Create all of them!'}];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n        objs.forEach((o) => {\n          if (o.name.includes(this.state.selectedStateOption.value)) dist.push({value: o.name, label: o.name});\n          return;\n        });\n        break;\n      default:\n        objs.forEach((o) => {\n          let val = o.name.replace('.geojson', '');\n          dist.push({value: val, label: val});\n        });\n    }\n\n    this.setState({districtOptions: dist});\n\n  }\n\n  _loadData = async () => {\n    this.setState({loading: true, search: \"\"});\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(this);\n    } catch (e) {\n      notify_error(e, \"Unable to load turf.\");\n    }\n    this.setState(this.initState());\n    this.setState({loading: false, turf})\n  }\n\n  render() {\n\n    let drawOptions = [\n      {value: 'select', label: 'Select from legislative boundary'},\n      {value: 'import', label: 'Import GeoJSON shape file'},\n      {value: 'radius', label: 'Area surrounding an address'},\n      {value: 'draw', label: 'Manually draw with your mouse'},\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search)) return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/turf/\" render={() => (\n            <RootLoader flag={this.state.loading} func={this._loadData}>\n              Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n              <br />\n              <ListTurf turf={list} refer={this} />\n            </RootLoader>\n          )} />\n          <Route exact={true} path=\"/turf/add\" render={() => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addTurfForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTurf(e)}\n                value={this.state.addTurfForm}\n              />\n\n              <br />\n              Method of generating turf:\n              <Select\n                value={this.state.selectedDrawOption}\n                onChange={this.handleDrawChange}\n                options={drawOptions}\n                isSearchable={false}\n                placeholder=\"Select method\"\n              />\n\n              <TurfOptions refer={this} />\n\n              {this._showSubmitButton()?\n              <div><br />\n                <button onClick={() => this._createTurf()}>\n                  Submit\n                </button>\n              </div>\n              :''}\n            </div>\n          )} />\n          <Route path=\"/turf/view/:id\" render={(props) => (\n            <div>\n              <CardTurf key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n              <br />\n              <br />\n              <br />\n              <Button onClick={this.handleClickDelete} color=\"primary\">\n                Delete Turf\n              </Button>\n              <Dialog\n                open={this.state.menuDelete}\n                onClose={this.handleCloseDelete}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">Are you sure you wish to delete this turf?</DialogTitle>\n                <DialogActions>\n                  <Button onClick={this.handleCloseDelete} color=\"primary\" autoFocus>\n                    No\n                  </Button>\n                  <Button onClick={() => this._deleteTurf(props.match.params.id)} color=\"primary\">\n                    Yes\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </div>\n          )} />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTurf = (props) => {\n  const perPage = props.refer.state.perPage;\n  let paginate = (<div></div>);\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx/perPage)+1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{display: 'flex'}}>\n      <ReactPaginate previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.turf.length/perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{width: 75}}>\n      # Per Page <Select\n        value={{value: perPage, label: perPage}}\n        onChange={props.refer.handlePageNumChange}\n        options={[\n          {value: 5, label: 5},\n          {value: 10, label: 10},\n          {value: 25, label: 25},\n          {value: 50, label: 50},\n          {value: 100, label: 100}\n        ]}\n      />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>{props.type}Turf ({props.turf.length})</h3>\n      <Link to={'/turf/add'}><button>Add Turf</button></Link>\n      {paginate}\n      {list}\n      {paginate}\n     </div>\n   );\n};\n\nconst TurfOptions = (props) => {\n  if (!props.refer.state.selectedDrawOption) return (<br />);\n\n  let stateOptions = [];\n  Object.keys(us_states).map((k) => stateOptions.push({value: k, label: us_states[k]}));\n\n  let typeOptions = [\n    {value: 'state', label: 'State'},\n    {value: 'cd', label: 'Congressional'},\n    {value: 'sldu', label: 'State Senate'},\n    {value: 'sldl', label: 'State House'},\n  ];\n\n  switch (props.refer.state.selectedDrawOption.value) {\n    case \"select\":\n      return (\n        <div>\n          <div><br />\n            State or region:\n            <Select\n              value={props.refer.state.selectedStateOption}\n              onChange={props.refer.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {props.refer.state.selectedStateOption?\n          <div><br />\n            District Type:\n            <Select\n              value={props.refer.state.selectedTypeOption}\n              onChange={props.refer.handleTypeChange}\n              onMenuClose={props.refer.selectedTypeFetch}\n              options={typeOptions}\n              isSearchable={false}\n              placeholder=\"Select district for this turf\"\n            />\n          </div>\n          :''}\n\n          {props.refer._showDistrictOption()?\n          <div><br />\n            District Number:\n            {props.refer.state.districtOptions.length?\n            <Select\n              value={props.refer.state.selectedDistrictOption}\n              onChange={props.refer.handleDistrictChange}\n              options={props.refer.state.districtOptions}\n              isSearchable={true}\n              placeholder=\"Select district for this turf\"\n            />\n            :<CircularProgress />}\n          </div>\n          :''}\n        </div>\n      );\n    case \"import\":\n      return (\n        <div><br />\n          <input type=\"file\" accept=\".geojson,.json\" onChange={ (e) => props.refer.handleImportFiles(e.target.files) } />\n        </div>\n      );\n    case \"radius\":\n      return (\n        <div><br />\n          Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={props.refer.state.address}\n            onChange={props.refer.onTypeAddress}\n            onSelect={props.refer.submitAddress}\n          />\n        </div>\n      );\n    case \"draw\":\n      return (\n        <div><br />\n          Use a <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\">GeoJSON Draw Tool</a>,\n          save the file, and then select the \"Import GeoJSON shape file\" option.\n        </div>\n      );\n    default:\n      return (<div>Unknown generation method.</div>);\n  }\n}\n\nexport class CardTurf extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async (selectedTeamsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedTeamsOption, selectedTeamsOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/team/add', 'POST', {teamId: obj.add[i], turfId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/team/remove', 'POST', {teamId: obj.rm[i], turfId: this.props.id});\n      }\n\n      notify_success(\"Team assignments saved.\");\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleMembersChange = async (selectedMembersOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedMembersOption, selectedMembersOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/volunteer/add', 'POST', {cId: obj.add[i], turfId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/volunteer/remove', 'POST', {cId: obj.rm[i], turfId: this.props.id});\n      }\n\n      notify_success(\"Volunteer assignments saved.\");\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  _loadData = async () => {\n    let turf = {}, volunteers = [], members = [], teams = [], teamsSelected = [];\n\n    this.setState({loading: true})\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'turf', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'turf', this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, \"Unable to load turf info.\");\n      return this.setState({loading: false});\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach((t) => {\n      teamOptions.push({value: _searchStringify(t), id: t.id, label: (\n        <CardTeam key={t.id} team={t} refer={this} />\n      )});\n    });\n\n    teamsSelected.forEach((t) => {\n      selectedTeamsOption.push({value: _searchStringify(t), id: t.id, label: (<CardTeam key={t.id} team={t} refer={this} />)});\n    })\n\n    volunteers.forEach((c) => {\n      membersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    members.forEach((c) => {\n      selectedMembersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    this.setState({turf, volunteers, teamOptions, membersOption, selectedTeamsOption, selectedMembersOption, loading: false});\n  }\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return (<CircularProgress />);\n    }\n\n    return (\n      <div>\n        <div style={{display: 'flex', padding: '10px'}}>\n          <div style={{padding: '5px 10px'}}>\n            <Icon icon={faStreetView} style={{width: 50, height: 50, color: \"gray\"}} /> {turf.name} {(this.props.edit?'':(<Link to={'/turf/view/'+turf.id}>view</Link>))}\n          </div>\n        </div>\n        {this.props.edit?<CardTurfFull turf={turf} refer={this} />:''}\n      </div>\n    );\n  }\n}\n\nexport const CardTurfFull = (props) => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport {geocodeByAddress, getLatLng} from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  notify_error, notify_success, _fetch, _searchStringify, _handleSelectChange,\n  _loadVolunteers, _loadVolunteer, _loadTeams, _loadForms, _loadTurfs,\n  RootLoader, Icon, PlacesAutocomplete, DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf.js';\nimport { CardForm } from './Forms.js';\nimport { CardTeam } from './Teams.js';\n\nimport {\n  faCrown, faExclamationTriangle, faCheckCircle, faBan, faHome, faFlag,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: \"\",\n      perPage: perPage,\n      pageNum: 1,\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({pageNum: 1, perPage: obj.value});\n  }\n\n  onTypeSearch (event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    })\n  }\n\n  _loadData = async () => {\n    let volunteers = [];\n    this.setState({loading: true, search: \"\"});\n    try {\n      volunteers = await _loadVolunteers(this);\n    } catch (e) {\n      notify_error(e, \"Unable to load volunteers.\");\n    }\n    this.setState({loading: false, volunteers});\n  }\n\n  handlePageClick = (data) => {\n    this.setState({pageNum: data.selected+1});\n  }\n\n  render() {\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search)) return;\n      if (c.locked) {\n        denied.push(c);\n      } else {\n        if (c.ass.ready || c.ass.teams.length)\n          ready.push(c);\n        else\n          unassigned.push(c);\n      }\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n            <br />\n            <Link to={'/volunteers/'} onClick={() => this.setState({pageNum: 1})}>Volunteers ({ready.length})</Link>&nbsp;-&nbsp;\n            <Link to={'/volunteers/unassigned'} onClick={() => this.setState({pageNum: 1})}>Unassigned ({unassigned.length})</Link>&nbsp;-&nbsp;\n            <Link to={'/volunteers/denied'} onClick={() => this.setState({pageNum: 1})}>Denied ({denied.length})</Link>\n            <Route exact={true} path=\"/volunteers/\" render={() => (<ListVolunteers refer={this} volunteers={ready} />)} />\n            <Route exact={true} path=\"/volunteers/unassigned\" render={() => (<ListVolunteers refer={this} type=\"Unassigned\" volunteers={unassigned} />)} />\n            <Route exact={true} path=\"/volunteers/denied\" render={() => (<ListVolunteers refer={this} type=\"Denied\" volunteers={denied} />)} />\n            <Route path=\"/volunteers/view/:id\" render={(props) => (\n              <CardVolunteer key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n            )} />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={(this.state.thisVolunteer.id?true:false)}\n              onClose={() => this.setState({thisVolunteer: {}})}\n            >\n              <div style={{\n                position: 'absolute',\n                top: 100, left: 200, right: 200,\n                backgroundColor: 'white',\n                padding: 40,\n              }}>\n                <CardVolunteer key={this.state.thisVolunteer.id} id={this.state.thisVolunteer.id} edit={true} refer={this} />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = (props) => {\n  const perPage = props.refer.state.perPage;\n  let paginate = (<div></div>);\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx/perPage)+1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(\n      <CardVolunteer key={c.id} volunteer={c} refer={props.refer} />\n    );\n  });\n\n  paginate = (\n    <div style={{display: 'flex'}}>\n      <ReactPaginate previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.volunteers.length/perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{width: 75}}>\n      # Per Page <Select\n        value={{value: perPage, label: perPage}}\n        onChange={props.refer.handlePageNumChange}\n        options={[\n          {value: 5, label: 5},\n          {value: 10, label: 10},\n          {value: 25, label: 25},\n          {value: 50, label: 50},\n          {value: 100, label: 100}\n        ]}\n      />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>{props.type}Volunteers ({props.volunteers.length})</h3>\n      {paginate}\n      <List component=\"nav\">\n        {list}\n      </List>\n      {paginate}\n     </div>\n   );\n};\n\nexport class CardVolunteer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: {},\n      selectedTurfOption: {},\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async (selectedTeamsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedTeamsOption, selectedTeamsOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/add', 'POST', {teamId: obj.add[i], cId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/remove', 'POST', {teamId: obj.rm[i], cId: this.props.id});\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success(\"Team assignments saved.\");\n      this.setState({ selectedTeamsOption, selectedFormsOption: {}, selectedTurfOption: {}, volunteer });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleLeaderChange = async (selectedLeaderOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedLeaderOption, selectedLeaderOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/promote', 'POST', {teamId: obj.add[i], cId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/demote', 'POST', {teamId: obj.rm[i], cId: this.props.id});\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success(\"Team leaders saved.\");\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, \"Unable to edit team leadership.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleFormsChange = async (selectedFormsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      if (this.state.selectedFormsOption.value) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/volunteer/remove', 'POST', {\n          formId: this.state.selectedFormsOption.id,\n          cId: this.props.id,\n        });\n      }\n      if (selectedFormsOption.value) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/volunteer/add', 'POST', {\n          formId: selectedFormsOption.id,\n          cId: this.props.id,\n        });\n      }\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success(\"Form selection saved.\");\n      this.setState({volunteer, selectedFormsOption});\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove form.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleTurfChange = async (selectedTurfOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      if (this.state.selectedTurfOption.value) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/volunteer/remove', 'POST', {\n          turfId: this.state.selectedTurfOption.id,\n          cId: this.props.id,\n        });\n      }\n      if (selectedTurfOption.value) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/volunteer/add', 'POST', {\n          turfId: selectedTurfOption.id,\n          cId: this.props.id,\n        });\n      }\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success(\"Turf selection saved.\");\n      this.setState({volunteer, selectedTurfOption});\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove turf.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  _loadData = async () => {\n    let volunteer = {}, forms = [], turf = [], teams = [];\n\n    this.setState({loading: true})\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(this, this.props.id),\n        _loadForms(this.props.refer),\n        _loadTurfs(this.props.refer),\n        _loadTeams(this.props.refer)\n      ]);\n    } catch (e) {\n      notify_error(e, \"Unable to load canavasser info.\");\n      return this.setState({loading: false});\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = {};\n    let selectedTurfOption = {};\n\n    let formOptions = [\n      {value: '', label: \"None\"},\n    ];\n\n    let turfOptions = [\n      {value: '', label: \"None\"},\n      {value: 'auto', id: 'auto', label: (<CardTurf key=\"auto\" turf={{id: \"auto\", name: \"Area surrounnding this volunteer's home address\"}} refer={this} icon={faHome} />)},\n    ];\n\n    teams.forEach((t) => {\n      teamOptions.push({value: _searchStringify(t), id: t.id, label: (\n        <CardTeam key={t.id} team={t} refer={this} />\n      )});\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({value: _searchStringify(t), id: t.id, label: (\n            <CardTeam key={t.id} team={t} refer={this} />\n          )});\n          leaderOptions.push({value: _searchStringify(t), id: t.id, label: (\n            <CardTeam key={t.id} team={t} refer={this} />\n          )});\n          if (volunteer.ass.teamperms[idx].leader) {\n            selectedLeaderOption.push({value: _searchStringify(t), id: t.id, label: (\n              <CardTeam key={t.id} team={t} refer={this} />\n            )});\n          }\n        }\n      });\n    });\n\n    forms.forEach((f) => {\n      formOptions.push({value: _searchStringify(f), id: f.id, label: (<CardForm key={f.id} form={f} refer={this} />)});\n    });\n\n    if (volunteer.ass.forms.length) {\n      let f = volunteer.ass.forms[0];\n      selectedFormsOption = {value: _searchStringify(f), id: f.id, label: (<CardForm key={f.id} form={f} refer={this} />)};\n    }\n\n    turf.forEach((t) => {\n      turfOptions.push({value: _searchStringify(t), id: t.id, label: (<CardTurf key={t.id} turf={t} refer={this} />)})\n    });\n\n    if (volunteer.ass.turf.length) {\n      let t = volunteer.ass.turf[0];\n      selectedTurfOption = {value: _searchStringify(t), id: t.id, label: (<CardTurf key={t.id} turf={t} refer={this} icon={(volunteer.autoturf?faHome:null)} />)};\n    }\n\n    this.setState({\n      loading: false, volunteer, teamOptions, leaderOptions, formOptions, turfOptions,\n      selectedTeamsOption, selectedLeaderOption, selectedFormsOption, selectedTurfOption\n    });\n  }\n\n  _lockVolunteer = async (volunteer, flag) => {\n    let term = (flag?'lock':'unlock');\n    this.props.refer.setState({saving: true});\n    try {\n      await _fetch(this.state.server, '/volunteer/v1/volunteer/'+term, 'POST', {id: volunteer.id});\n      notify_success(\"Volunteer hass been \"+term+\"ed.\");\n    } catch (e) {\n      notify_error(e, \"Unable to \"+term+\" volunteer.\");\n    }\n    this.props.refer.setState({saving: false});\n\n    this._loadData();\n  }\n\n  render() {\n    const { volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return (<CircularProgress />);\n    }\n\n    if (this.props.edit) return (\n      <div>\n        <ListItem alignItems=\"flex-start\" style={{width: 350}}>\n          <ListItemAvatar>\n            <Avatar alt={volunteer.name} src={volunteer.avatar} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={volunteer.name}\n            secondary={(volunteer.homeaddress?extract_addr(volunteer.homeaddress):'N/A')}\n          />\n          <VolunteerBadges volunteer={volunteer} />\n        </ListItem>\n        <CardVolunteerFull volunteer={volunteer} refer={this} />\n      </div>\n    );\n\n    return (\n      <ListItem button style={{width: 350}} alignItems=\"flex-start\" onClick={() => this.props.refer.setState({thisVolunteer: volunteer})}>\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={(volunteer.homeaddress?extract_addr(volunteer.homeaddress):'N/A')}\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = (props) => (\n  <div>\n    <br />\n    {props.volunteer.locked?\n      (<button onClick={() => props.refer._lockVolunteer(props.volunteer, false)}>Restore Access</button>)\n    :\n      (<button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>Deny Access</button>)\n    }\n    <br />\n    Last Seen: {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen-30000))}\n    <br />\n    Email: {(props.volunteer.email?props.volunteer.email:'N/A')}\n    <br />\n    Phone: {(props.volunteer.phone?props.volunteer.phone:'N/A')}\n    <br />\n    Address: <VolunteerAddress refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    # of doors knocked: 0\n    <br />\n    <br />\n    {props.volunteer.ass.direct?\n    <div>\n      This volunteer is not assigned to any teams. To do so, you must remove the direct form and turf assignments below.\n    </div>\n    :\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    }\n    <br />\n    {props.refer.state.selectedTeamsOption.length?\n    <div>\n      Forms / Turf this users sees based on the above team(s):\n      <br />\n      {props.volunteer.ass.forms.map((f) => (<CardForm key={f.id} form={f} refer={props.refer} />))}\n      {props.volunteer.ass.turf.map((t) => (<CardTurf key={t.id} turf={t} refer={props.refer} />))}\n    </div>\n    :\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    }\n\n  </div>\n)\n\nexport class VolunteerAddress extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n      address: (this.props.volunteer.homeaddress?this.props.volunteer.homeaddress:\"\"),\n    };\n    this.onTypeAddress = (address) => this.setState({ address });\n  }\n\n  submitAddress = async (address) => {\n    this.setState({address})\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(this.props.refer.state.server, '/volunteer/v1/volunteer/update', 'POST', {\n        id: this.props.volunteer.id,\n        address: address,\n        lat: pos.lat,\n        lng: pos.lng,\n      });\n      this.props.refer._loadData();\n      notify_success(\"Address hass been saved.\");\n    } catch (e) {\n      notify_error(e, \"Unable to update address info.\");\n    }\n  }\n\n  render() {\n    if (this.state.edit) return (\n      <PlacesAutocomplete\n        debounce={500}\n        value={this.state.address}\n        onChange={this.onTypeAddress}\n        onSelect={this.submitAddress}\n      />\n    );\n\n    return (\n      <div>\n        {this.state.address} <button onClick={() => this.setState({edit: true})}>click to edit</button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = (props) => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin) badges.push(<Icon icon={faCrown} color=\"gold\" key={id+\"admin\"} data-tip=\"Administrator\" />);\n  if (props.volunteer.ass.leader) badges.push(<Icon icon={faFlag} color=\"green\" key={id+\"leader\"} data-tip=\"Team Leader\" />);\n  if (props.volunteer.locked) badges.push(<Icon icon={faBan} color=\"red\" key={id+\"locked\"} data-tip=\"Denied access\" />);\n  else {\n    if (props.volunteer.ass.ready) badges.push(<Icon icon={faCheckCircle} color=\"green\" key={id+\"ready\"} data-tip=\"Ready to Canvass\" />);\n    else badges.push(<Icon icon={faExclamationTriangle} color=\"red\" key={id+\"notready\"} data-tip=\"Not ready to volunteer, check assignments\" />);\n    if (!props.volunteer.homeaddress) badges.push(<Icon icon={faHome} color=\"red\" key={id+\"addr\"} data-tip=\"Home Address is not set\" />);\n  }\n\n  return badges;\n}\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport { _browserLocation, _loadTurf, _loadAddresses } from '../common.js';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let addresses = [];\n\n    let turfs = await _loadTurf(this, null, true);\n    let data = (await _loadAddresses(this)).nodes;\n\n    if (!data) data = {};\n\n    // only care about address objects\n    Object.keys(data).forEach((d) => {\n      if (data[d] && data[d].type === \"address\") {\n        addresses.push(data[d]);\n      }\n    })\n\n    this.setState({turfs, addresses});\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  };\n\n  render() {\n    let polygons = [];\n    const { addresses } = this.state;\n\n    let location = _browserLocation(this.props);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push(p));\n    });\n\n    return (\n      <Map google={this.props.google} zoom={14} center={location} onClick={this.onMapClicked}>\n        {addresses.map((a, idx) => (\n          <Marker\n            key={idx}\n            onClick={this.onMarkerClick}\n            title={a.address.join(\" \")}\n            position={{lat: a.latlng.latitude, lng: a.latlng.longitude}} />\n        ))}\n        {polygons.map((p, idx) => (\n          <Polygon\n            key={idx}\n            paths={p}\n            strokeColor=\"#0000FF\"\n            strokeWeight={5}\n            fillColor=\"#000000\"\n            fillOpacity={0} />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}>\n          <div>\n            <h1>{this.state.selectedPlace.title}</h1>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport CSVReader from 'react-csv-reader';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { notify_error, notify_success } from '../common.js';\n\nconst HEADER = t.enums({\n  'address1': 'Address 1',\n  'address2': 'Address 2',\n  'city': 'City',\n  'state': 'State',\n  'zip': 'Zip Code',\n}, 'HEADER');\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      data: null,\n      headers: [],\n    };\n  }\n\n  preProcessError(e) {\n    notify_error(e, \"Failed to preprocess the import file.\");\n  }\n\n  preProcess = async (data) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({data, headers});\n  }\n\n  onHeadersSubmit = (evt) => {\n    evt.preventDefault();\n\n  /*\n    const value = this.refs.form.getValue();\n\n    if (value) {\n      // required import fields\n      let address1 = null;\n      let address2 = null;\n      let city = null;\n      let state = null;\n      let zip = null;\n\n      for (let val in value) {\n        let v = value[val];\n        if (v === 'address1') address1 = val;\n        if (v === 'address2') address2 = val;\n        if (v === 'city') city = val;\n        if (v === 'state') state = val;\n        if (v === 'zip') zip = val;\n      }\n\n      if (address1 == null || address2 == null || city == null || state == null || zip == null) {\n        this.setState({formError: 'All address elements must be assigned'});\n        return;\n      }\n\n      this.processData(address1, address2, city, state, zip);\n    }\n  */\n\n    this.setState({loading: true});\n    // fake data loaded after 3 seconds\n    setTimeout(() => {\n      notify_success(\"Data has been imported.\")\n      this.setState({loading: false, headers: []})\n    }, 3000);\n\n  }\n\n  render() {\n\n    if (this.state.loading) return (<CircularProgress />);\n\n    if (this.state.headers.length) {\n      let obj = {};\n\n      let FormOptions = {fields: {}};\n\n      for (let h in this.state.headers) {\n        obj[h] = t.maybe(HEADER);\n        FormOptions.fields[h] = {label: this.state.headers[h]};\n      }\n\n      let FormSchema = t.struct(obj);\n\n      return (\n        <div>\n          Assign each header to its data type <br />\n\n          <form onSubmit={this.onHeadersSubmit}>\n            <t.form.Form ref=\"form\" type={FormSchema} options={FormOptions} />\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            </div>\n          </form>\n\n          <hr />\n            NOTE: This import tool does not work on all spreadsheet files, as there is no standard format.\n            We do our best to accommodate the most common patterns. Contact someone you know who's\n            good with Microsoft&copy; Excel or LibreOffice&copy; and they can reformat your spreadsheet\n            file so it works with this import tool.\n        </div>\n        );\n    }\n\n    return (\n      <CSVReader\n        label=\"Data Importa\"\n        onError={this.preProcessError}\n        onFileLoaded={this.preProcess}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport {PieChart, Pie, Cell, Legend, Label, LabelList} from 'recharts';\n\nconst data01 = [\n  { name: 'Republican', value: 400, v: 89, color: 'red' },\n  { name: 'Democratic', value: 300, v: 100 },\n  { name: 'UUP', value: 200, v: 200 },\n  { name: 'Unaffiliated', value: 200, v: 20 },\n];\n\nconst data02 = [\n  { name: 'Republican', value: 2400 },\n  { name: 'Democratic', value: 4567 },\n  { name: 'UUP', value: 1398 },\n  { name: 'Unaffiliated', value: 9800 },\n];\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animation: true,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Analytics</h3>\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={data01}\n            dataKey=\"value\"\n            cx={200}\n            cy={200}\n            startAngle={180}\n            endAngle={0}\n            outerRadius={80}\n            label\n          >\n            {\n              data01.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={[\"red\",\"blue\",\"yellow\",\"grey\"][index]} />\n              ))\n            }\n            <Label value=\"Volunteering\" position=\"outside\" />\n            <LabelList position=\"outside\" />\n          </Pie>\n          <Pie\n            data={data02}\n            dataKey=\"value\"\n            cx={600}\n            cy={200}\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              data02.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={[\"red\",\"blue\",\"yellow\",\"grey\"][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              Agreed with you\n            </Label>\n          </Pie>\n        </PieChart>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router'\nimport jwt_decode from 'jwt-decode';\nimport {notify_error} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let jwt;\n\n    try {\n      jwt = this.props.location.pathname.split('/').pop();\n      jwt_decode(jwt);\n      this.props.refer._loadData(jwt);\n    } catch (e) {\n      notify_error(e, \"Unable to extract jwt from URI\");\n      jwt = 'error';\n    }\n\n    this.state = {jwt: jwt};\n  }\n\n  render() {\n    if (this.state.jwt === 'error') return (<div>There was an error parsing the jwt</div>);\n\n    return (\n      <Route render={() => (\n        <Redirect to=\"/\" />\n      )} />\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { _fetch, notify_error, Icon } from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cb_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let data = {};\n    try {\n      let res = await _fetch(this.props.server, '/volunteer/v1/dashboard');\n\n      data = await res.json();\n    } catch (e) {\n      notify_error(e, \"Unable to load dashboard info.\");\n    }\n\n    this.setState({cb_version: (data.version?data.version:'unknown')});\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}</div>\n        <div>{(this.state.cb_version?'volunteer-broker version '+this.state.cb_version:<CircularProgress height={15} />)}</div>\n        <div>&copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not for any candidate or political party.</div>\n        <div>This program is free software; refer to our <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\">License</a> for more details.</div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/OurVoiceUSA\"><Icon icon={faTwitter} /> @OurVoiceUSA</a></div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/OurVoiceUsa\"><Icon icon={faFacebook} /> @OurVoiceUSA</a></div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ourvoiceusa.org/\"><Icon icon={faGlobe} /> ourvoiceusa.org</a></div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt_decode from 'jwt-decode';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport Volunteers from './components/Volunteers';\nimport Teams from './components/Teams';\nimport Turf from './components/Turf';\nimport Forms from './components/Forms';\nimport Map from './components/Map';\nimport ImportData from './components/ImportData';\nimport Analytics from './components/Analytics';\nimport Settings from './components/Settings';\nimport Jwt from './components/Jwt';\nimport About from './components/About';\n\nimport 'typeface-roboto';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport { _fetch, notify_error } from './common.js';\n\nconst drawerWidth = 175;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  avatar: {\n    margin: 10,\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    height: 320,\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n\n    this.state = {\n      open: true,\n      menuLogout: false,\n      server: {},\n      qserver: v.server,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.doSave = this.doSave.bind(this);\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\"%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!\", \"background: red; color: yellow; font-size: 45px\");\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async (jwt) => {\n    if (jwt)\n      localStorage.setItem('jwt', jwt);\n\n    this.setState({\n      server: {\n        hostname: localStorage.getItem('server'),\n        jwt: (jwt?jwt:localStorage.getItem('jwt')),\n      },\n    });\n\n    // don't load if no jwt\n    if (jwt) this._loadKeys();\n  }\n\n  _loadKeys = async () => {\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n\n    let res = await _fetch(this.state.server, '/volunteer/v1/google_maps_key');\n    let data = await res.json();\n\n    // load google places API\n    var aScript = document.createElement('script');\n    aScript.type = 'text/javascript';\n    aScript.src = \"https://maps.googleapis.com/maps/api/js?key=\"+data.google_maps_key+\"&libraries=places\";\n    document.head.appendChild(aScript);\n\n    this.setState({google_maps_key: data.google_maps_key});\n  }\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange(connectForm) {\n    this.setState({connectForm})\n  }\n\n  getUserProp(prop) {\n    let item;\n\n    if (!this.state.server.jwt) return null;\n\n    try {\n      item = jwt_decode(this.state.server.jwt)[prop];\n    } catch (e) {\n      notify_error(e, \"Holy crap this error should never happen!! Better dust off that résumé...\");\n      console.warn(e);\n    }\n    return item;\n  }\n\n  _logout() {\n    localStorage.removeItem('server');\n    localStorage.removeItem('jwt');\n    this.setState({server: {}});\n  }\n\n  doSave = async (event) => {\n    await this.singHello(event.target.server.value);\n  }\n\n  singHello = async (server) => {\n    let res;\n\n    localStorage.setItem('server', server);\n\n    try {\n      res = await fetch('https://'+server+'/volunteer/v1/hello', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.state.server.jwt?this.state.server.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({longitude: -118, latitude: 40}),\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url) return {error: true, msg: \"Missing required header.\"}\n\n      switch (res.status) {\n        case 200:\n          break; // valid - break to proceed\n        case 400:\n          return {error: true, msg: \"The server didn't understand the request sent from this device.\"};\n        case 401:\n          window.location.href = sm_oauth_url+\"/gm?app=HelloVoterHQ\";\n          return {error: false, flag: true};\n        case 403:\n          return {error: true, msg: \"We're sorry, but your request to volunteer with this server has been rejected.\"};\n        default:\n          return {error: true, msg: \"Unknown error connecting to server.\"};\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true) return {error: false, msg: \"The server said: \"+body.msg};\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({server: server, dbx: null, user: this.state.user});\n        return {error: false, flag: true};\n      }\n    } catch (e) {\n      console.warn(\"singHello: \"+e);\n      return {error: true, msg: \"Unable to make a connection to target server\"};\n    }\n\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { server } = this.state;\n\n    if (!server.hostname)\n      return (<Login refer={this} />);\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <AppBar\n            position=\"absolute\"\n            className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n          >\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(\n                  classes.menuButton,\n                  this.state.open && classes.menuButtonHidden,\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                <div style={{margin: 10}}>HelloVoterHQ @ {server.hostname}</div>\n              </Typography>\n              <Avatar alt=\"Remy Sharp\" src={this.getUserProp('avatar')} className={classes.avatar} />\n              {this.getUserProp('name')}\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n                <Link to={'/'}>\n                  <ListItem button>\n                      <ListItemIcon><DashboardIcon /></ListItemIcon>\n                      <ListItemText primary=\"Dashboard\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/volunteers/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <PersonIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Volunteers\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/teams/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <PeopleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Teams\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/turf/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <MapIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Turf\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/forms/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <AssignmentIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Forms\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/map/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <NavigationIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Map\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/import/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <PresentToAllIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Import Data\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/analytics/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <BarChartIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Analytics\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/settings/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <SettingsIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                  </ListItem>\n                </Link>\n              </List>\n              <Divider />\n              <List>\n                <ListItem button onClick={this.handleClickLogout}>\n                  <ListItemIcon>\n                    <IndeterminateCheckBoxIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Logout\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n              <Link to={'/about/'}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <AccountBalanceIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"About\" />\n                </ListItem>\n              </Link>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/tree/mast\n  er/docs/\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <HelpIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Help\" />\n                </ListItem>\n              </a>\n            </List>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer/>\n            <Switch>\n              <Route exact={true} path=\"/\" render={() => <Dashboard server={server} />} />\n              <Route path=\"/volunteers/\" render={() => <Volunteers server={server} />} />\n              <Route path=\"/teams/\" render={() => <Teams server={server} />} />\n              <Route path=\"/turf/\" render={() => <Turf server={server} />} />\n              <Route path=\"/forms/\" render={() => <Forms server={server} />} />\n              <Route path=\"/map/\" render={() => <Map server={server} apiKey={this.state.google_maps_key} />} />\n              <Route path=\"/import/\" render={() => <ImportData server={server} />} />\n              <Route path=\"/analytics/\" render={() => <Analytics server={server} />} />\n              <Route path=\"/settings/\" render={() => <Settings server={server} />} />\n              <Route path=\"/jwt/\" render={(props) => <Jwt {...props} refer={this} />} />\n              <Route path=\"/about/\" render={() => <About server={server} />} />\n              <Route component={NoMatch} />\n            </Switch>\n            <Dialog\n              open={this.state.menuLogout}\n              onClose={this.handleCloseLogout}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">Are you sure you wish to logout?</DialogTitle>\n              <DialogActions>\n                <Button onClick={this.handleCloseLogout} color=\"primary\" autoFocus>\n                  No\n                </Button>\n                <Button onClick={() => this._logout()} color=\"primary\">\n                  Yes\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br /><br />\n      <code>{location.pathname}</code>\n      <br /><br />\n      If you feel this page is in error, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\">\n      report an issue</a> and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}