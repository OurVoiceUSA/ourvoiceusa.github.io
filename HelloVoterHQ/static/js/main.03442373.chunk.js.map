{"version":3,"sources":["components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/Elements/index.js","components/About.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Attributes.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","app.styles.js","components/Loading.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","App.jsx","serviceWorker.js","index.js","components/Volunteers/CardVolunteer.jsx","components/Turf/CardTurf.jsx","components/Turf/CardTurfFull.jsx","common.js","components/Volunteers/Volunteers.jsx","components/QRCodes.jsx","components/Map.jsx","components/Volunteers/CardVolunteerFull.jsx","components/Teams.jsx","components/Forms/Forms.jsx","components/Forms/FormEditor.jsx","components/Forms/CardForm.jsx","components/Forms/CardFormFull.jsx","components/Forms/index.js","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Turf/index.js","components/Volunteers/index.js"],"names":["MapSelect","state","checked","props","isMulti","value","map1","label","map2","_handleCheck","updateFormats","setState","_setValue","_setMapValue","prop","_renderCheckbox","Checkbox","className","onChange","onClick","color","_renderMapOptions","Fragment","style","width","e","options","placeholder","this","checkbox","dimensions","labelWidth","React","Component","specVal","row","spec","func","params","TablePaginationActions","handleFirstPageButtonClick","event","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","classes","theme","root","IconButton","disabled","aria-label","direction","TablePaginationActionsWrapped","withStyles","flexShrink","palette","text","secondary","marginLeft","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","target","rows","emptyRows","min","length","Paper","tableWrapper","Table","table","TableHead","TableRow","map","Tooltip","title","tooltip","TableCell","header","TableBody","slice","key","id","s","funcItemTooltip","error","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","completed","Check","LinearProgress","paddingTop","variant","App","componentDidMount","a","async","global","data","_fetch","notify_error","api_version","version","neo4j_version","process","CircularProgress","rel","href","icon","faTwitter","faFacebook","faGlobe","renderLabelContent","percent","x","y","midAngle","transform","textAnchor","toFixed","_init","loading","turfOptions","_loadTurfs","turfs","attributeOptions","_loadAttributes","attributes","forEach","t","push","_searchStringify","turf","refer","name","doQuery","selectedAttributeOption","data_breakdown","uri","selectedTurfOption","include_null","d","pop","handleTurfChange","handleAttributeChange","animation","flag","isSearchable","c","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","index","fill","position","CardDashboard","sortableElement","display","padding","faShieldAlt","flex","overflow","stat","Cards","sortableContainer","dash","item","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","localStorage","setItem","n","_loadData","admins","noAdmins","vol","volunteers","faUser","team","teams","faUsers","faMap","form","forms","faClipboard","faChartPie","addr","addresses","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","getItem","split","axis","Modal","aria-labelledby","aria-describedby","open","onClose","top","left","right","backgroundColor","getUserProp","value2select","val","ucFirst","typeOptions","handleClickDelete","menuDelete","handleCloseDelete","_deleteAttribute","saving","notify_success","window","location","_createAttribute","json","addAttributeForm","getValue","search","handlePageClick","pageNum","selected","perPage","formServerItems","struct","String","formServerOptions","fields","server","onTypeSearch","bind","handlePageNumChange","obj","toLowerCase","list","includes","exact","path","render","type","data-tip","Form","ref","addattributeForm","onChangeAttribute","match","edit","Button","Dialog","DialogTitle","DialogActions","autoFocus","ListAttributes","paginate","idx","floor","attribute","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","to","CardAttribute","handleMembersChange","selectedMembersOption","Promise","all","_loadAttribute","onSave","onSaveName","onSaveType","CardAttributeFull","JSON","stringify","_pipe","f","g","pipe","fns","reduce","PAPER_TABLE_SPEC","jobRuntime","jobNumber","ImportMap","headers","formats","mapped","formatHeaders","i","field","updateMapped","mapData","getMapped","generateFormats","getAllIndexes","parseData","format","arr","Array","isArray","indexes","findIndex","total","next","trim","console","warn","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","record","defaultState","sending","submitting","jobStatus","job","success","started","showErrorIfError","taskObjFromQueue","filename","Queue","r","q","tsToStr","styles","main","marginRight","breakpoints","up","paper","flexDirection","alignItems","avatar","margin","submit","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","Loading","CssBaseline","Typography","component","role","Login","token","loginOptions","REACT_APP_NO_AUTH","pathname","dev","selectedLoginOption","setTimeout","reload","Avatar","onSubmit","preventDefault","doSave","fullWidth","LoginOption","FormControl","required","InputLabel","htmlFor","Input","autoComplete","defaultValue","orgId","FormControlLabel","control","qserver","LogoutDialog","menuLogout","handleCloseLogout","_logout","Header","handleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","noWrap","alt","src","MenuItems","assignments","handleClickLogout","List","ListItem","button","ListItemIcon","ListItemText","primary","admin","Divider","Sidebar","handleDrawerClose","Drawer","NoMatch","Routes","Volunteers","Teams","Turf","Forms","QRCodes","hai","singHello","jwt","decode","Error","clear","_loadKeys","google_maps_key","aScript","document","createElement","head","appendChild","connectForm","place","substring","host","replace","https","fetch","method","Authorization","res","sm_oauth_url","get","msg","status","sm","body","ready","user","v","queryString","parse","log","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister","TimeAgo","locale","en","NEARBY_DIST","extract_addr","shift","join","CardVolunteer","handleTeamsChange","selectedTeamsOption","_handleSelectChange","adrm","add","teamId","vId","rm","_loadVolunteer","volunteer","handleLeaderChange","selectedLeaderOption","handleFormsChange","selectedFormsOption","formId","turfId","hometurf","nearbyturf","_loadForms","_loadTeams","_loadNearbyTurfs","teamOptions","leaderOptions","formOptions","ass","leader","direct","autoturf","faHome","_lockVolunteer","term","ReactTooltip","rebuild","locationstr","VolunteerBadges","thisVolunteer","badges","faCrown","faFlag","locked","faBan","faCheckCircle","faExclamationTriangle","CardTurf","members","teamsSelected","_loadTurf","_loadVolunteers","membersOption","faStreetView","CardTurfFull","stats","Object","keys","k","start","end","prettyMs","num","formatNumber","fractionDigits","ts","Date","toString","NotificationManager","_browserLocation","isGeolocationAvailable","isGeolocationEnabled","coords","access","lng","longitude","lat","latitude","Icon","iconName","RootLoader","faSync","children","DialogSaving","disableShrink","o","last_seen","created","_loadImports","imports","_inviteLink","inviteCode","_loadQRCode","qrcode","QRCode","toDataURL","img","_loadQRCodes","qrcodes","byType","call","dist","_loadTeam","_loadForm","_loadAddressData","_loadPeopleAddressData","aId","oldopt","newopt","prior","now","indexOf","p","PlacesAutocomplete","addressSearch","getInputProps","getSuggestionItemProps","suggestions","suggestion","description","InviteSomeone","ModalInvite","unassigned","denied","invited","ListVolunteers","thisQRCode","ListQRCodes","CardQRCode","qId","_disableQRCode","CardQRCodeFull","link","faQrcode","size","last_used","num_volunteers","filter","loadMarkerData","onMarkerClick","marker","showingInfoWindow","address","selectedPlace","activeMarker","onTurfClick","infoLocation","paths","activeTurf","mapProps","center","onMapClicked","visits","polygons","geometry","geojson2polygons","polygon","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","ModalMarker","people","units","ModalPerson","person","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","CardVolunteerFull","email","phone","VolunteerAddress","submitAddress","geocodeByAddress","getLatLng","pos","onTypeAddress","debounce","onSelect","_deleteTeam","_createTeam","addTeamForm","ListTeams","onChangeTeam","CardTeam","teamn","turfSelected","formSelected","memberOptions","CardTeamFull","attributes_selected","optional","values","_deleteForm","_createForm","addFormForm","formName","atupdate","order","onChangeForm","ListForms","reorder","startIndex","endIndex","result","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","droppableId","FormEditor","getList","id2List","onDragEnd","droppable","droppable2","AttributeDroppable","provided","snapshot","innerRef","isDraggingOver","background","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","inputTypeToReadable","CardForm","blah","CardFormFull","ListTurf","TurfOptions","handleStateChange","selectedStateOption","us_states","sldu","sldl","selectedDrawOption","stateOptions","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","accept","handleImportFiles","files","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","readAsText","_deleteTurf","_createTurf","addTurfForm","objs","circleToPolygon","urlFromDist","initState","thisTurf","drawOptions","onChangeTurf","_showSubmitButton"],"mappings":"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","file":"static/js/main.03442373.chunk.js","sourcesContent":["import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","import { MapSelect } from './MapSelect';\nimport PaperTable from './PaperTable';\nimport ProgressBar from './ProgressBar';\n\nexport { MapSelect, PaperTable, ProgressBar };\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      api_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    try {\n      data = await _fetch(global, '/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      api_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    const { api_version, neo4j_version } = this.state;\n\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {api_version ? (\n            'HelloVoterAPI version ' + api_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {neo4j_version ? (\n            'Neo4j version ' + neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        {(api_version && api_version !== \"unknown\" && api_version !== process.env.REACT_APP_VERSION)&&\n        <h3 style={{color: \"red\"}}>WARNING: API version doesn't match HQ version.</h3>\n        }\n        <div>\n          &copy; 2019, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoter/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md\">Privacy Policy</a>\n          ||\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md\">Terms of Service</a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(global);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    const { global } = this.state;\n\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = '/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(global, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);\n","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            key={card.name}\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  _fetch,\n  notify_error,\n  RootLoader,\n  InviteSomeone,\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(global, '/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    const { global, data, loading, noAdmins } = this.state;\n\n    return (\n      <RootLoader flag={loading} func={this._loadData}>\n        {(data.version && data.version !== process.env.REACT_APP_VERSION)&&\n        <h3 style={{color: \"red\"}}>WARNING: API version doesn't match HQ version.</h3>\n        }\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <InviteSomeone refer={this} />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {global.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport EdiText from 'react-editext';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\nimport {ucFirst} from 'ourvoiceusa-sdk-js';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\n\nimport {\n  _loadAttribute,\n  _loadAttributes,\n  _searchStringify,\n  _fetch,\n  notify_error,\n  notify_success,\n  RootLoader,\n  DialogSaving,\n} from '../common.js';\n\nfunction value2select(val) {\n  return {value: val, label: ucFirst(val)};\n}\n\nconst typeOptions = [\n  value2select(\"string\"),\n  value2select(\"boolean\"),\n  value2select(\"number\"),\n  value2select(\"textbox\"),\n];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('attributesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      attributes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Attribute Name',\n          error: 'You must enter an Attribute name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeAttribute(addAttributeForm) {\n    this.setState({ addAttributeForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('attributesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteAttribute = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/attribute/delete', 'POST', {\n        id: id,\n      });\n      notify_success('Attribute has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete Attributes.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _createAttribute = async () => {\n    const { global } = this.state;\n\n    let json = this.addAttributeForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/attribute/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Attribute has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create Attribute.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let attributes = [];\n\n    try {\n      attributes = await _loadAttributes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, attributes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.attributes.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/attributes/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListAttributes global={global} refer={this} attributes={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/attributes/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addattributeForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeAttribute(e)}\n                  value={this.state.addattributeForm}\n                />\n                <button onClick={() => this._createAttribute()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/attributes/view/:id\"\n            render={props => (\n              <div>\n                <CardAttribute\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete attribute\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this attribute?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteAttribute(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListAttributes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.attributes.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardAttribute global={props.global} key={t.id} attribute={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.attributes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Attributes ({props.attributes.length})\n      </h3>\n      <Link to={'/attributes/add'}>\n        <button>Add attribute</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardAttribute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      attribute: this.props.attribute,\n      selectedMembersOption: [],\n    };\n\n    this.onSaveName = this.onSaveName.bind(this);\n    this.onSaveType = this.onSaveType.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.attribute) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let attribute = {};\n    this.setState({ loading: true });\n\n    try {\n      [\n        attribute,\n      ] = await Promise.all([\n        _loadAttribute(global, this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load attribute info.');\n      return this.setState({ loading: false });\n    }\n\n    this.setState({\n      attribute,\n      loading: false,\n    });\n  };\n\n  onSave = async (type, val) => {\n    const { global, attribute } = this.state;\n\n    this.setState({ saving: true });\n\n    let obj = {id: attribute.id};\n    obj[type] = val;\n\n    try {\n      await _fetch(\n        global,\n        '/attribute/update',\n        'POST',\n        obj\n      );\n      notify_success('Attribute has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update Attribute.');\n    }\n\n    this._loadData();\n  }\n\n  onSaveName(val) {\n    this.onSave('name', val);\n  }\n\n  onSaveType(val) {\n    this.onSave('type', val);\n  }\n\n  render() {\n    const { attribute } = this.state;\n\n    if (!attribute || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <PaperclipIcon />{' '}\n            {attribute.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/attributes/view/' + attribute.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardAttributeFull attribute={attribute} onSaveName={this.onSaveName} onSaveType={this.onSaveType} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardAttributeFull = ({attribute, onSaveName, onSaveType}) => (\n  <div>\n    <h1><EdiText type=\"text\" value={attribute.name} onSave={onSaveName} onSaveType={onSaveType} /></h1>\n    <Select\n      value={value2select(attribute.type)}\n      onChange={onSaveType}\n      options={typeOptions}\n      isMulti={false}\n      isSearchable={true}\n      placeholder=\"Select an attribute type\"\n    />\n    {JSON.stringify(attribute)}\n  </div>\n);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => format.value && i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      imports: [],\n      ...defaultState,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { global, mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(global, '/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(global, '/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(global, '/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  _fetch,\n  tsToStr,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      global: props.global,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(global, '/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Loading extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            HelloVoterHQ is loading...\n          </Typography>\n          <CircularProgress height={15} />\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loading);\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\n\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let loginOptions = [];\n    if (!process.env.REACT_APP_NO_AUTH) loginOptions = [{label: 'Organization ID', value: 'org'}, {label: '3rd Party Server', value: 'server'}];\n    if (process.env.NODE_ENV === 'development') loginOptions.unshift({label: 'LOCAL DEVELOPMENT', value: 'dev'});\n\n    let token;\n\n    try {\n      if (this.props.location.pathname.match(/\\/jwt\\//)) {\n        token = this.props.location.pathname.split('/').pop();\n      }\n    } catch(e) {\n      console.warn(e);\n    }\n\n    this.state = {\n      global: props.global,\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n      selectedLoginOption: loginOptions[0],\n      loginOptions: loginOptions,\n    };\n\n  }\n\n  componentDidMount() {\n    const { token } = this.state;\n\n    if (token) {\n      localStorage.setItem('jwt', token);\n      setTimeout(() => {window.location.href = '/HelloVoterHQ/#/'}, 500);\n      setTimeout(() => {window.location.reload()}, 1500);\n    }\n  }\n\n  render() {\n    const { global, classes, token, loginOptions, selectedLoginOption } = this.state;\n\n    if (token) return (<Loading classes={classes} />);\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); global.doSave(e, this.state.target); }} >\n            <Select\n              value={selectedLoginOption}\n              options={loginOptions}\n              onChange={selectedLoginOption => this.setState({selectedLoginOption})}\n            />\n            <center>\n              <br />\n              &nbsp; || &nbsp;\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md\">Privacy Policy</a>\n              &nbsp; || &nbsp;\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md\">Terms of Service</a>\n              &nbsp; || &nbsp;\n            </center>\n            <LoginOption global={global} refer={this} />\n            {(process.env.REACT_APP_NO_AUTH)&&\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({target: 'none'})}\n            >\n              Sign In\n            </Button>\n            ||\n            <div>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={() => this.setState({target: 'google'})}\n              >\n                Google Sign In\n              </Button>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => this.setState({target: 'facebook'})}\n                className={classes.submit}\n              >\n                Facebook Sign In\n              </Button>\n            </div>\n            }\n          </form>\n        </Paper>\n        <br />\n        <center>\n          Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA\n          <p />\n          Not for any candidate or political party.\n          <p />\n          Copyright (c) 2019, Our Voice USA. All rights reserved.\n          <p />\n          This program is free software; you can redistribute it and/or\n          modify it under the terms of the GNU Affero General Public License\n          as published by the Free Software Foundation; either version 3\n          of the License, or (at your option) any later version.\n        </center>\n      </main>\n    );\n  }\n}\n\nconst LoginOption = props => {\n  switch (props.refer.state.selectedLoginOption.value) {\n    case 'org':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Enter your Organization ID. Example: NCC1701</InputLabel>\n            <Input id=\"orgId\" name=\"orgId\" autoComplete=\"orgId\" autoFocus defaultValue={props.global.state.orgId} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that you have read and agreed to our Terms of Service.\"\n          />\n        </div>\n      );\n    case 'server':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.global.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's Terms of Service.\"\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  global,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ {(global.state.orgId?'Organization ID: '+global.state.orgId:'@ '+global.state.server)}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ assignments, handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      {assignments.admin&&\n      <div>\n      <Link to={'/qrcode/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AspectRatioIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"QR Codes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </div>\n    }\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  assignments,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems assignments={assignments} handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  QRCodes,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ global }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard global={global} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} global={global} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers global={global} />} />\n    <Route path=\"/teams/\" render={() => <Teams global={global} />} />\n    <Route path=\"/turf/\" render={() => <Turf global={global} />} />\n    <Route path=\"/forms/\" render={() => <Forms global={global} />} />\n    <Route path=\"/qrcode/\" render={() => <QRCodes global={global} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes global={global} />} />\n    <Route path=\"/queue/\" render={() => <Queue global={global} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics global={global} />} />\n    <Route path=\"/settings/\" render={() => <Settings global={global} />} />\n    <Route path=\"/about/\" render={() => <About global={global} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login, Loading } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      global: props.global,\n      assignments: {},\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: localStorage.getItem('server'),\n      token: localStorage.getItem('jwt'),\n      orgId: localStorage.getItem('orgId'),\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let { server, token, orgId } = this.state;\n\n    this.setState({loading: true});\n\n    // assume error unless proven otherwise\n    let hai = {error: true};\n\n    try {\n      if (server && token) {\n        hai = await this.singHello(server, jwt.decode(token)['id'].split(\":\")[0], token, orgId);\n      } else {\n        throw new Error(\"missing server or token\");\n      }\n\n      if (hai.error) {\n        throw new Error(\"hai error\")\n      }\n    } catch (e) {\n      // if we had a token, it was bad, clear everything\n      if (token && server) {\n        this.setState({server: null, token: null, orgId: null});\n        localStorage.clear();\n        console.warn(\"Cleaning localStorage\");\n      }\n      console.warn(e);\n    }\n\n    this.setState({\n      loading: false,\n      assignments: (hai.data?hai.data:{}),\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    const { global } = this.state;\n\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n    if (!this.state.server) return;\n\n    let data;\n\n    try {\n      data = await _fetch(global, '/google_maps_key');\n      if (!data) return;\n\n      // load google places API\n      var aScript = document.createElement('script');\n      aScript.type = 'text/javascript';\n      aScript.src =\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        data.google_maps_key +\n        '&libraries=places';\n      document.head.appendChild(aScript);\n\n      this.setState({ google_maps_key: data.google_maps_key });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.token) return null;\n\n    try {\n      item = jwt.decode(this.state.token)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.clear();\n    this.setState({ menuLogout: false, server: null, token: null, orgId: null });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n    let orgId;\n\n    if (event.target.orgId) {\n      orgId = event.target.orgId.value;\n      let place = orgId.substring(0,2).toLowerCase();\n      server = 'gotv-'+place+'.ourvoiceusa.org';\n    } else if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = window.location.host.replace(':3000',':8080');\n    }\n    if (process.env.REACT_APP_NO_AUTH) {\n      // TODO: ask developer for username and generate a token with it\n      let token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Im5vYXV0aDpsb2NhbHVzZXIiLCJuYW1lIjoiTG9jYWwgVXNlciIsImVtYWlsIjoibG9jYWxAbG9jYWxob3N0IiwiaXNzIjoib3Vydm9pY2V1c2Eub3JnIiwiaWF0IjoxLCJleHAiOjIsImRpc2NsYWltZXIiOiJCbGFoIGJsYWggZGlzY2xhaW1lciJ9.qa5K2pgi1uLYkV7jP3aNvazcchvgBD8RwhdG6Q86GxlvusQx7nNCTr3LrAnn6pxDJxNidJoqjD3Ie77jj5hWK_-lbgtHMLhNXGExDxI8pQ0I5ZnAV_5pDu7vARinoy3mctQWFO2pIQSu8KzQc7eQ90IQZBseE7nQV-ugZRfK8Teo_48COcJxGxqwCNCO80G_JzBoif2xaWRb2i2n0qeSUKfXN4Fwy46JOiHFnL9yOS5s54tB6doe1wFJNYps8eVQbVkTBL1I9PQP4Gs-BmzND0vcQaczTdu_J50uvLL5do1FHb48lRhrA44ZrYv3EVwNsJXZtH3MbasxgPrZhl69VQ';\n      localStorage.setItem('jwt', token);\n      this.setState({token}, () => this.singHello(server, target, null, orgId));\n    }\n    else await this.singHello(server, target, null, orgId);\n  };\n\n  singHello = async (server, target, token, orgId) => {\n    let res;\n\n    localStorage.setItem('server', server);\n    if (orgId) localStorage.setItem('orgId', orgId);\n    this.setState({server, orgId});\n\n    let https = true;\n    if (server.match(/:8080$/)) https = false;\n\n    try {\n      res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ/'+(orgId?orgId+'/':'')+'api/v1/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (token ? token : (this.state.token ? this.state.token : 'of the one ring')),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        setTimeout(() => {\n          window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        }, 500);\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg, data: body.data };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ user: this.state.user });\n        return { error: false, flag: true, data: body.data };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { assignments, server, token, loading } = this.state;\n\n    if (loading) return (\n      <Router>\n        <Route path=\"/\" render={props => <Loading {...props}  />} />\n      </Router>\n    );\n\n    if (!server || !token) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} global={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            global={this}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            assignments={assignments}\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes global={this} />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  Icon,\n} from '../../common.js';\n\nimport { CardTurf } from '../Turf';\nimport { CardForm } from '../Forms';\nimport { CardTeam } from '../Teams';\nimport { CardVolunteerFull } from './CardVolunteerFull';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: add, vId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    const { global } = this.state;\n\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/promote',\n          'POST',\n          { teamId: add, vId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/demote',\n          'POST',\n          { teamId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { formId: add, vId: this.props.id }\n        ));\n      })\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { formId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: add, vId: this.props.id }\n        ));\n      })\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: rm, vId: this.props.id }\n        ));\n      })\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    const { global } = this.state;\n\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { global, volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull global={global} volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => {\n          this.props.refer.setState({ thisVolunteer: volunteer });\n          window.location.href = \"/HelloVoterHQ/#/volunteers/view/\"+volunteer.id;\n        }}>\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nconst VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvas\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { teamId: add, turfId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { teamId: rm, turfId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { vId: add, turfId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: rm, turfId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'turf', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull global={global} turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { PaperTable } from '../Elements';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      <h3>Turf Stats</h3>\n      <pre>{JSON.stringify(props.refer.state.turf.stats)}</pre>\n      <PaperTable\n        spec={[\n          {\n            header: 'Query Name',\n            tooltip: 'Constraints which define this attribute query.',\n            params: ['Name'],\n          },\n          {\n            header: 'Total Addresses',\n            tooltip: 'Total number of houses/buildings in this area.',\n            params: ['Total Addresses'],\n          },\n          {\n            header: 'Total People',\n            tooltip: 'Total number of people in this area.',\n            params: ['Total People'],\n          },\n          {\n            header: 'Total People Visited',\n            tooltip: 'Total number of people in this area who have been visited.',\n            params: ['Total People Visited'],\n          },\n          {\n            header: 'People Visited in past month',\n            tooltip: 'Total number of peple in this area who have been visited.',\n            params: ['People Visited in past month'],\n          },\n        ]}\n        rows={\n          Object.keys(props.refer.state.turf.stats[\"Stats by Attribute\"]).map(k => {\n            props.refer.state.turf.stats[\"Stats by Attribute\"][k]['Name'] = k;\n            return props.refer.state.turf.stats[\"Stats by Attribute\"][k];\n          })\n        }\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\nimport QRCode from 'qrcode';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function tsToStr(ts) {\n  return new Date(ts).toString();\n};\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(global, uri, method, body) {\n  if (!global || !global.state) return;\n\n  const { server, token } = global.state;\n\n  let https = true;\n  if (server.match(/:8080$/)) https = false;\n\n  if (!method) method = 'GET';\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ' + (global.state.orgId?'/'+global.state.orgId:'') + '/api/v1' + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(global) {\n  let imports = [];\n  try {\n    let data = await _fetch(global, '/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport function _inviteLink(inviteCode, server, orgId) {\n  return 'http'+(server.match(/:8080$/)?'':'s')+'://'+server+'/HelloVoterHQ/'+(orgId?orgId+'/':'')+'mobile/invite?inviteCode='+inviteCode+'&'+(orgId?'orgId='+orgId:'server='+server);\n}\n\nexport async function _loadQRCode(global, id) {\n  let qrcode = {};\n  try {\n    qrcode = await _fetch(\n      global,\n      '/qrcode/get?id=' + id\n    );\n    qrcode.img = await QRCode.toDataURL(_inviteLink(id, global.state.server, global.state.orgId));\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode info.');\n  }\n  return qrcode;\n}\n\nexport async function _loadQRCodes(global, id) {\n  let qrcodes = [];\n\n  try {\n    qrcodes = await _fetch(global, '/qrcode/list');\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode data.');\n  }\n\n  return qrcodes;\n}\n\nexport async function _loadVolunteer(global, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      global,\n      '/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  if (!volunteer.ass) volunteer.ass = {forms:[],teams:[],turfs:[]};\n  return volunteer;\n}\n\nexport async function _loadVolunteers(global, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(global, '/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\n\nexport async function _loadTurf(global, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      global,\n      '/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTurfs(global, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(global, '/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(global, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(global, '/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(global, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      global,\n      '/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(global, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(global, '/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(global, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      global,\n      '/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(global, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    forms = await _fetch(global, '/' + uri);\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttribute(global, id) {\n  let attribute = {};\n\n  try {\n    let data = await _fetch(global, '/attribute/get?id='+id);\n    if (data.data) attribute = data.data[0];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  return attribute;\n}\n\nexport async function _loadAttributes(global) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(global, '/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\n\nexport async function _loadAddressData(global, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(global, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  now.forEach(n => {\n    if (prior.indexOf(n) === -1) add.push(n);\n  });\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  prior.forEach(p => {\n    if (now.indexOf(p) === -1) rm.push(p);\n  });\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport const InviteSomeone = props => (\n  <div>\n    <Button onClick={() => props.refer.setState({ModalInvite: true})} color=\"primary\">\n      Invite Someone\n    </Button>\n    <Modal\n    aria-labelledby=\"simple-modal-title\"\n    aria-describedby=\"simple-modal-description\"\n    open={props.refer.state.ModalInvite ? true : false}\n    onClose={() => props.refer.setState({ ModalInvite: false })}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: 100,\n          left: 200,\n          right: 200,\n          backgroundColor: 'white',\n          padding: 40\n        }}>\n        To invite someone, have them use the HelloVoter mobile app to scan a QR Code\n        (created in the \"QR Codes\" menu) and they will recieve the same assignments\n        that QR Code has.\n      </div>\n    </Modal>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  _fetch,\n  _searchStringify,\n  _loadVolunteers,\n  RootLoader,\n  DialogSaving,\n  InviteSomeone,\n} from '../../common.js';\n\nimport { CardVolunteer } from './CardVolunteer'\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n    let invited = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else if (c.invited) invited.push(c);\n      else if (c.ass.ready || c.ass.teams.length) ready.push(c);\n      else unassigned.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n          <InviteSomeone refer={this} />\n\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers global={global} refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/invited\"\n              render={() => (\n                <div>\n                  <ListVolunteers\n                    global={global}\n                    refer={this}\n                    type=\"Invited\"\n                    volunteers={invited}\n                  />\n                  <Button onClick={async () => {\n                    let obj = await _fetch(\n                      global,\n                      '/volunteer/invite',\n                      'POST'\n                    );\n                    if (obj.token) {\n                      this.setState({ thisVolunteer: {id: 'invite:'+obj.token} });\n                    } else {\n                      notify_error({}, 'Invite failed.');\n                    }\n                  }} color=\"primary\">\n                    Invite Someone\n                  </Button>\n                </div>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n              <CardVolunteer\n                global={global}\n                key={props.match.params.id}\n                id={props.match.params.id}\n                edit={true}\n                refer={this}\n              />\n              </div>)}\n            />\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer global={global} key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type} Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\nimport EdiText from 'react-editext';\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadQRCode,\n  _loadQRCodes,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _inviteLink,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class QRCodes extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('qrcodesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisQRCode: {},\n      qrcodes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('qrcodesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcodes = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      qrcodes = await _loadQRCodes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load qrcodes.');\n    }\n    this.setState({ loading: false, qrcodes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let qrcodes = [];\n\n    this.state.qrcodes.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      qrcodes.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Route\n              exact={true}\n              path=\"/qrcode/\"\n              render={() => <ListQRCodes global={global} refer={this} qrcodes={qrcodes} />}\n            />\n            <Route\n              path=\"/qrcode/view/:id\"\n              render={props => (\n                <CardQRCode\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n              )}\n            />\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListQRCodes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.qrcodes.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardQRCode global={props.global} key={c.id} qrcode={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.qrcodes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}QRCodes ({props.qrcodes.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n      <Button onClick={async () => {\n        let obj = await _fetch(\n          props.global,\n          '/qrcode/create',\n          'POST'\n        );\n        if (obj && obj.id) {\n          props.refer.setState({ thisQRCode: obj});\n          props.refer._loadData();\n        } else {\n          notify_error({}, 'QRCode creation failed.');\n        }\n      }} color=\"primary\">\n        Generate QR CODE\n      </Button>\n    </div>\n  );\n};\n\nexport class CardQRCode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      qrcode: this.props.qrcode,\n      selectedTeamsOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.qrcode) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/team/add',\n          'POST',\n          { teamId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/team/remove',\n          'POST',\n          { teamId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        qrcode\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/form/add',\n          'POST',\n          { formId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/form/remove',\n          'POST',\n          { formId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/turf/add',\n          'POST',\n          { turfId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/turf/remove',\n          'POST',\n          { turfId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcode = {},\n      forms = [],\n      turf = [],\n      teams = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [qrcode, forms, turf, teams] = await Promise.all([\n        _loadQRCode(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      qrcode.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    qrcode.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    qrcode.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      qrcode,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedFormsOption,\n      selectedTurfOption,\n    });\n  };\n\n  _disableQRCode = async (qrcode, flag) => {\n    const { global } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/disable',\n        'POST',\n        { id: qrcode.id }\n      );\n      notify_success('QRCode has been disabled.');\n    } catch (e) {\n      notify_error(e, 'Unable to disable QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  };\n\n  onSave = async (val) => {\n    const { global, qrcode } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/update',\n        'POST',\n        { id: qrcode.id, name: val }\n      );\n      notify_success('QRCode has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  }\n\n  render() {\n    const { global, qrcode } = this.state;\n\n    if (!qrcode || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <img alt=\"QR Code\" src={qrcode.img} />\n            </ListItemAvatar>\n          </ListItem>\n          <CardQRCodeFull global={global} qrcode={qrcode} refer={this} link={_inviteLink(qrcode.id, global.state.server, global.state.orgId)} onSave={this.onSave} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => {\n          this.props.refer.setState({ thisQRCode: qrcode });\n          window.location.href = \"/HelloVoterHQ/#/qrcode/view/\"+qrcode.id;\n        }}>\n        <ListItemAvatar>\n          <Icon icon={faQrcode} size={\"large\"} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={qrcode.name}\n          secondary={\"\"}\n        />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardQRCodeFull = props => (\n  <div>\n    <h1><EdiText type=\"text\" value={props.qrcode.name} onSave={props.onSave} /></h1>\n    <br />\n    <br />\n    Link to use on a mobile device: <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>{props.link}</a>\n    <br />\n    <br />\n    Last Used:{' '}\n    {(props.qrcode.last_used?new TimeAgo('en-US').format(new Date(props.qrcode.last_used-30000)):'Never')}\n    <br />\n    Number of people who've used it: {props.qrcode.num_volunteers}\n    <br />\n    <br />\n    <div>\n      Teams this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.qrcode.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.qrcode.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    {props.qrcode.disabled&&\n    <div>This QR Code is disabled</div>\n    }\n    {!props.qrcode.disabled&&\n    <Button onClick={() => props.refer._disableQRCode(props.qrcode, false)}>\n      Disable QRCode\n    </Button>\n    }\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(global, null, true),\n      _loadForms(global),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(global, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    const { global } = this.state;\n\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(global, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport Select from 'react-select';\n\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  PlacesAutocomplete,\n} from '../../common.js';\n\nimport { CardTurf } from '../Turf';\nimport { CardForm } from '../Forms';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <Button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </Button>\n    ) : (\n      <Button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </Button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress global={global} refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      global: props.global,\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    const { global } = this.state;\n\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        global,\n        '/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <Button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    const { global } = this.state;\n\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams global={global} refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam global={props.global} key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: add }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: rm }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { formId: add, teamId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { formId: rm, teamId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let teamn = await _loadTeam(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { turfId: add, teamId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { turfId: rm, teamId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(global, this.props.id),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'team', this.props.id),\n        _loadTurfs(global, this.props.id),\n        _loadTurfs(global),\n        _loadForms(global, this.props.id),\n        _loadForms(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull global={global} team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardForm, FormEditor } from '.';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadForms,\n  _loadAttributes,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(global);\n      attributes = await _loadAttributes(global);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    const { global, attributes_selected } = this.state;\n\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: attributes_selected.map(a => a.id),\n      };\n\n      await _fetch(global, '/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  atupdate = props => {\n    const { attributes_selected } = props;\n    this.setState({attributes_selected});\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms global={global} forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <FormEditor onChange={this.atupdate} attributes={this.state.attributes} selected={this.state.attributes_selected} />\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm global={props.global} key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nfunction inputTypeToReadable(type) {\n  switch (type) {\n  case 'String':\n    return 'Text Input';\n  case 'TEXTBOX':\n    return 'Text Box';\n  case 'Number':\n    return 'Number';\n  case 'Boolean':\n    return 'On/Off Switch';\n  case 'SAND':\n    return 'Agree/Disagree';\n  case 'List':\n    return 'Select from List';\n  default:\n    return type;\n  }\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nexport default class FormEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n\n    this.state = {\n      onChange: props.onChange,\n      attributes: [],\n      attributes_selected: props.selected,\n    };\n\n    // any attributes not selected go in attributes\n    props.attributes.forEach(attribute => {\n      if (this.state.attributes_selected.map(a => a.id).indexOf(attribute.id) === -1) this.state.attributes.push(attribute);\n    });\n\n    this.id2List = {\n      droppable: 'attributes',\n      droppable2: 'attributes_selected',\n    };\n\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n    const { onChange } = this.state;\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const attributes = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      let state = { attributes };\n\n      if (source.droppableId === 'droppable2') {\n        state = { attributes_selected: attributes };\n      }\n\n      this.setState(state, () => onChange(this.state));\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      this.setState({\n        attributes: result.droppable,\n        attributes_selected: result.droppable2\n      }, () => onChange(this.state));\n    }\n  };\n\n  render() {\n    const { refer, attributes, attributes_selected } = this.state;\n\n    return (\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <AttributeDroppable label=\"Available Attributes\" droppableId=\"droppable\" attributes={attributes} />\n          &nbsp;\n          Drag to assign\n          &nbsp;\n          <AttributeDroppable label=\"Attributes on this Form\" droppableId=\"droppable2\" attributes={attributes_selected} />\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst AttributeDroppable = props => (\n  <Droppable droppableId={props.droppableId}>\n      {(provided, snapshot) => (\n          <div\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}>\n              {props.label}\n              {props.attributes.map((item, index) => (\n                  <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}>\n                      {(provided, snapshot) => (\n                          <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={getItemStyle(\n                                  snapshot.isDragging,\n                                  provided.draggableProps.style\n                              )}>\n                              {item.label + (item.required ? ' *' : '')} :{' '}\n                              {inputTypeToReadable(item.type)}{' '}\n                          </div>\n                      )}\n                  </Draggable>\n              ))}\n              {provided.placeholder}\n          </div>\n      )}\n  </Droppable>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardFormFull } from '.';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForm,\n  _loadVolunteers,\n  _loadTeams,\n  _loadAttributes,\n  Icon,\n} from '../../common.js';\n\nexport default class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: [],\n      attributes: [],\n      attributes_selected: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { teamId: add, formId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { teamId: rm, formId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleAttributeChange = async ({attributes_selected}) => {\n    const { global } = this.state;\n\n    try {\n      let blah = await _fetch(\n        global,\n        '/form/update',\n        'POST',\n        { formId: this.props.id, attributes: attributes_selected.map(a => a.id) }\n      );\n      console.warn({blah})\n      notify_success('Attributes assignments saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove attribute.');\n    }\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { vId: add, formId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { vId: rm, formId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [],\n      attributes = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected, attributes] = await Promise.all([\n        _loadForm(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'form', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'form', this.props.id),\n        _loadAttributes(global)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      attributes,\n      attributes_selected: form.attributes.map(a => {\n        if (!a.label) a.label = a.name;\n        return a;\n      }),\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false,\n    });\n\n  };\n\n  render() {\n    const { global, form, attributes, attributes_selected } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull global={global} form={form} refer={this} attributes={attributes} selected={attributes_selected} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { FormEditor } from '.';\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <FormEditor\n      onChange={props.refer.handleAttributeChange}\n      attributes={props.attributes} selected={props.selected}\n    />\n  </div>\n);\n","import Forms from './Forms';\nimport FormEditor from './FormEditor';\nimport CardForm from './CardForm';\nimport { CardFormFull } from './CardFormFull';\n\nexport {\n  Forms,\n  FormEditor,\n  CardForm,\n  CardFormFull,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf global={props.global} key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState(props);\n    this.state.global = props.global;\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState(props) {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    const { global } = this.state;\n\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(global, '/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf global={global} turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import { CardTurf } from './CardTurf';\nimport { CardTurfFull } from './CardTurfFull';\nimport { ListTurf } from './ListTurf';\nimport { TurfOptions } from './TurfOptions';\nimport Turf from './Turf';\n\nexport {\n  CardTurf,\n  CardTurfFull,\n  ListTurf,\n  TurfOptions,\n  Turf\n};","import { CardVolunteer } from './CardVolunteer';\nimport Volunteers from './Volunteers';\n\nexport {\n  CardVolunteer,\n  Volunteers\n};\n"],"sourceRoot":""}