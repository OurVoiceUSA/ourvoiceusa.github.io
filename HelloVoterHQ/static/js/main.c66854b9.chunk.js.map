{"version":3,"sources":["components/About.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Attributes.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","app.styles.js","components/Loading.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","App.jsx","serviceWorker.js","index.js","components/Volunteers/CardVolunteer.jsx","components/Turf/CardTurf.jsx","components/Turf/CardTurfFull.jsx","common.js","components/Volunteers/Volunteers.jsx","components/QRCodes.jsx","components/Map.jsx","components/Volunteers/CardVolunteerFull.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Turf/index.js","components/Teams.jsx","components/Forms.jsx","components/Volunteers/index.js","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/Elements/index.js"],"names":["App","props","componentDidMount","a","async","global","state","data","_fetch","notify_error","setState","api_version","version","neo4j_version","this","process","CircularProgress","height","style","color","target","rel","href","icon","faTwitter","faFacebook","faGlobe","Component","renderLabelContent","value","percent","x","y","midAngle","transform","textAnchor","toFixed","_init","loading","turfOptions","_loadTurfs","turfs","attributeOptions","_loadAttributes","attributes","forEach","t","push","_searchStringify","id","label","key","turf","refer","name","doQuery","selectedAttributeOption","data_breakdown","uri","selectedTurfOption","include_null","map","d","length","pop","handleTurfChange","handleAttributeChange","animation","flag","func","onChange","options","isMulti","isSearchable","placeholder","Checkbox","checked","e","c","width","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","index","fill","position","CardDashboard","sortableElement","display","padding","className","faShieldAlt","flex","overflow","stat","Cards","sortableContainer","dash","item","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","localStorage","setItem","n","_loadData","admins","noAdmins","vol","volunteers","faUser","team","teams","faUsers","faMap","form","forms","faClipboard","faChartPie","addr","addresses","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","getItem","split","axis","Modal","aria-labelledby","aria-describedby","open","onClose","top","left","right","backgroundColor","getUserProp","value2select","val","ucFirst","typeOptions","handleClickDelete","menuDelete","handleCloseDelete","_deleteAttribute","saving","notify_success","window","location","_createAttribute","json","addAttributeForm","getValue","search","handlePageClick","pageNum","selected","perPage","formServerItems","struct","String","formServerOptions","fields","server","error","onTypeSearch","bind","handlePageNumChange","obj","event","toLowerCase","list","includes","exact","path","render","type","data-tip","Form","ref","addattributeForm","onChangeAttribute","onClick","match","params","edit","Button","Dialog","DialogTitle","DialogActions","autoFocus","ListAttributes","paginate","idx","Math","floor","attribute","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","to","CardAttribute","handleMembersChange","selectedMembersOption","Promise","all","_loadAttribute","onSave","onSaveName","onSaveType","CardAttributeFull","JSON","stringify","_pipe","f","g","pipe","fns","reduce","PAPER_TABLE_SPEC","header","tooltip","jobRuntime","jobNumber","ImportMap","headers","formats","mapped","formatHeaders","i","updateFormats","field","updateMapped","mapData","getMapped","generateFormats","getAllIndexes","parseData","format","arr","Array","isArray","indexes","findIndex","total","next","trim","map1","map2","console","warn","Fragment","checkbox","React","PreviewItem","title","random","createRandomKey","parseInt","ImportPreview","titles","records","record","defaultState","sending","submitting","completed","jobStatus","job","success","started","showErrorIfError","taskObjFromQueue","filename","Queue","rows","r","q","spec","tsToStr","funcItemTooltip","styles","theme","main","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","avatar","margin","palette","secondary","submit","root","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","Loading","classes","CssBaseline","Paper","Typography","component","variant","role","aria-label","withStyles","Login","token","loginOptions","REACT_APP_NO_AUTH","pathname","dev","selectedLoginOption","setTimeout","reload","Avatar","onSubmit","preventDefault","doSave","fullWidth","LoginOption","FormControl","required","InputLabel","htmlFor","Input","autoComplete","defaultValue","orgId","FormControlLabel","control","qserver","LogoutDialog","menuLogout","handleCloseLogout","_logout","Header","handleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","IconButton","noWrap","alt","src","MenuItems","assignments","handleClickLogout","List","ListItem","button","ListItemIcon","ListItemText","primary","admin","Divider","Sidebar","handleDrawerClose","Drawer","NoMatch","Routes","Volunteers","Teams","Turf","Forms","QRCodes","hai","singHello","jwt","decode","Error","clear","_loadKeys","google_maps_key","aScript","document","createElement","head","appendChild","connectForm","prop","place","substring","host","replace","https","fetch","method","Authorization","res","sm_oauth_url","get","msg","status","sm","body","ready","user","v","queryString","parse","log","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister","TimeAgo","locale","en","NEARBY_DIST","extract_addr","shift","join","CardVolunteer","handleTeamsChange","selectedTeamsOption","_handleSelectChange","adrm","add","teamId","vId","rm","_loadVolunteer","volunteer","handleLeaderChange","selectedLeaderOption","handleFormsChange","selectedFormsOption","formId","turfId","hometurf","nearbyturf","_loadForms","_loadTeams","_loadNearbyTurfs","teamOptions","leaderOptions","formOptions","faHome","ass","leader","direct","autoturf","_lockVolunteer","term","ReactTooltip","rebuild","locationstr","VolunteerBadges","thisVolunteer","badges","faCrown","faFlag","locked","faBan","faCheckCircle","faExclamationTriangle","CardTurf","members","teamsSelected","_loadTurf","_loadVolunteers","membersOption","faStreetView","CardTurfFull","stats","Object","keys","k","start","end","prettyMs","num","formatNumber","fractionDigits","ts","Date","toString","NotificationManager","text","_browserLocation","isGeolocationAvailable","isGeolocationEnabled","coords","access","lng","longitude","lat","latitude","Icon","iconName","RootLoader","faSync","children","DialogSaving","disableShrink","o","last_seen","created","_loadImports","imports","_inviteLink","inviteCode","_loadQRCode","qrcode","QRCode","toDataURL","img","_loadQRCodes","qrcodes","byType","call","dist","_loadTeam","_loadForm","_loadAddressData","_loadPeopleAddressData","aId","oldopt","newopt","prior","now","indexOf","p","PlacesAutocomplete","addressSearch","getInputProps","getSuggestionItemProps","suggestions","suggestion","description","unassigned","denied","invited","ListVolunteers","thisQRCode","ListQRCodes","CardQRCode","qId","_disableQRCode","CardQRCodeFull","link","faQrcode","size","last_used","num_volunteers","filter","disabled","loadMarkerData","onMarkerClick","marker","showingInfoWindow","address","selectedPlace","activeMarker","onTurfClick","infoLocation","paths","activeTurf","mapProps","center","onMapClicked","visits","polygons","geometry","geojson2polygons","polygon","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","ModalMarker","people","units","ModalPerson","person","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","CardVolunteerFull","email","phone","VolunteerAddress","slice","submitAddress","geocodeByAddress","getLatLng","pos","onTypeAddress","debounce","onSelect","ListTurf","TurfOptions","handleStateChange","selectedStateOption","us_states","sldu","sldl","selectedDrawOption","stateOptions","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","accept","handleImportFiles","files","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","result","readAsText","_deleteTurf","_createTurf","addTurfForm","objs","circleToPolygon","urlFromDist","initState","thisTurf","drawOptions","onChangeTurf","_showSubmitButton","_deleteTeam","_createTeam","addTeamForm","ListTeams","onChangeTeam","CardTeam","teamn","turfSelected","formSelected","memberOptions","CardTeamFull","reorder","startIndex","endIndex","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","grid","background","getListStyle","isDraggingOver","getList","id2List","onDragEnd","attributes_selected","droppable","droppable2","optional","values","_deleteForm","_createForm","addFormForm","formName","order","ListForms","onChangeForm","provided","snapshot","innerRef","draggableId","draggableProps","dragHandleProps","inputTypeToReadable","CardForm","CardFormFull","MapSelect","_handleCheck","_setValue","_setMapValue","_renderCheckbox","_renderMapOptions","dimensions","labelWidth","specVal","row","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","direction","TablePaginationActionsWrapped","flexShrink","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","emptyRows","min","tableWrapper","Table","table","TableHead","TableRow","Tooltip","TableCell","TableBody","s","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","minWidth","Check","LinearProgress","paddingTop"],"mappings":"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","file":"static/js/main.c66854b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      api_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    try {\n      data = await _fetch(global, '/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      api_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    const { api_version, neo4j_version } = this.state;\n\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {api_version ? (\n            'HelloVoterAPI version ' + api_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {neo4j_version ? (\n            'Neo4j version ' + neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        {(api_version && api_version !== \"unknown\" && api_version !== process.env.REACT_APP_VERSION)&&\n        <h3 style={{color: \"red\"}}>WARNING: API version doesn't match HQ version.</h3>\n        }\n        <div>\n          &copy; 2019, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoter/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md\">Privacy Policy</a>\n          ||\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md\">Terms of Service</a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(global);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    const { global } = this.state;\n\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = '/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(global, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);\n","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            key={card.name}\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  _fetch,\n  notify_error,\n  RootLoader\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(global, '/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    const { global, data, loading, noAdmins } = this.state;\n\n    return (\n      <RootLoader flag={loading} func={this._loadData}>\n        {(data.version && data.version !== process.env.REACT_APP_VERSION)&&\n        <h3 style={{color: \"red\"}}>WARNING: API version doesn't match HQ version.</h3>\n        }\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {global.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport EdiText from 'react-editext';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\nimport {ucFirst} from 'ourvoiceusa-sdk-js';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\n\nimport {\n  _loadAttribute,\n  _loadAttributes,\n  _searchStringify,\n  _fetch,\n  notify_error,\n  notify_success,\n  RootLoader,\n  DialogSaving,\n} from '../common.js';\n\nfunction value2select(val) {\n  return {value: val, label: ucFirst(val)};\n}\n\nconst typeOptions = [\n  value2select(\"string\"),\n  value2select(\"boolean\"),\n  value2select(\"number\"),\n  value2select(\"textbox\"),\n];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('attributesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      attributes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Attribute Name',\n          error: 'You must enter an Attribute name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeAttribute(addAttributeForm) {\n    this.setState({ addAttributeForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('attributesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteAttribute = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/attribute/delete', 'POST', {\n        id: id,\n      });\n      notify_success('Attribute has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete Attributes.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _createAttribute = async () => {\n    const { global } = this.state;\n\n    let json = this.addAttributeForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/attribute/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Attribute has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create Attribute.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let attributes = [];\n\n    try {\n      attributes = await _loadAttributes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, attributes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.attributes.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/attributes/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListAttributes global={global} refer={this} attributes={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/attributes/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addattributeForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeAttribute(e)}\n                  value={this.state.addattributeForm}\n                />\n                <button onClick={() => this._createAttribute()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/attributes/view/:id\"\n            render={props => (\n              <div>\n                <CardAttribute\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete attribute\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this attribute?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteAttribute(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListAttributes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.attributes.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardAttribute global={props.global} key={t.id} attribute={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.attributes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Attributes ({props.attributes.length})\n      </h3>\n      <Link to={'/attributes/add'}>\n        <button>Add attribute</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardAttribute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      attribute: this.props.attribute,\n      selectedMembersOption: [],\n    };\n\n    this.onSaveName = this.onSaveName.bind(this);\n    this.onSaveType = this.onSaveType.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.attribute) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let attribute = {};\n    this.setState({ loading: true });\n\n    try {\n      [\n        attribute,\n      ] = await Promise.all([\n        _loadAttribute(global, this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load attribute info.');\n      return this.setState({ loading: false });\n    }\n\n    this.setState({\n      attribute,\n      loading: false,\n    });\n  };\n\n  onSave = async (type, val) => {\n    const { global, attribute } = this.state;\n\n    this.setState({ saving: true });\n\n    let obj = {id: attribute.id};\n    obj[type] = val;\n\n    try {\n      await _fetch(\n        global,\n        '/attribute/update',\n        'POST',\n        obj\n      );\n      notify_success('Attribute has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update Attribute.');\n    }\n\n    this._loadData();\n  }\n\n  onSaveName(val) {\n    this.onSave('name', val);\n  }\n\n  onSaveType(val) {\n    this.onSave('type', val);\n  }\n\n  render() {\n    const { attribute } = this.state;\n\n    if (!attribute || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <PaperclipIcon />{' '}\n            {attribute.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/attributes/view/' + attribute.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardAttributeFull attribute={attribute} onSaveName={this.onSaveName} onSaveType={this.onSaveType} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardAttributeFull = ({attribute, onSaveName, onSaveType}) => (\n  <div>\n    <h1><EdiText type=\"text\" value={attribute.name} onSave={onSaveName} onSaveType={onSaveType} /></h1>\n    <Select\n      value={value2select(attribute.type)}\n      onChange={onSaveType}\n      options={typeOptions}\n      isMulti={false}\n      isSearchable={true}\n      placeholder=\"Select an attribute type\"\n    />\n    {JSON.stringify(attribute)}\n  </div>\n);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => format.value && i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      imports: [],\n      ...defaultState,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { global, mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(global, '/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(global, '/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(global, '/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  _fetch,\n  tsToStr,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      global: props.global,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(global, '/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Loading extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            HelloVoterHQ is loading...\n          </Typography>\n          <CircularProgress height={15} />\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loading);\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\n\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let loginOptions = [];\n    if (!process.env.REACT_APP_NO_AUTH) loginOptions = [{label: 'Organization ID', value: 'org'}, {label: '3rd Party Server', value: 'server'}];\n    if (process.env.NODE_ENV === 'development') loginOptions.unshift({label: 'LOCAL DEVELOPMENT', value: 'dev'});\n\n    let token;\n\n    try {\n      if (this.props.location.pathname.match(/\\/jwt\\//)) {\n        token = this.props.location.pathname.split('/').pop();\n      }\n    } catch(e) {\n      console.warn(e);\n    }\n\n    this.state = {\n      global: props.global,\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n      selectedLoginOption: loginOptions[0],\n      loginOptions: loginOptions,\n    };\n\n  }\n\n  componentDidMount() {\n    const { token } = this.state;\n\n    if (token) {\n      localStorage.setItem('jwt', token);\n      setTimeout(() => {window.location.href = '/HelloVoterHQ/#/'}, 500);\n      setTimeout(() => {window.location.reload()}, 1500);\n    }\n  }\n\n  render() {\n    const { global, classes, token, loginOptions, selectedLoginOption } = this.state;\n\n    if (token) return (<Loading classes={classes} />);\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); global.doSave(e, this.state.target); }} >\n            <Select\n              value={selectedLoginOption}\n              options={loginOptions}\n              onChange={selectedLoginOption => this.setState({selectedLoginOption})}\n            />\n            <div>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md\">Privacy Policy</a>\n              ||\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md\">Terms of Service</a>\n            </div>\n            <LoginOption global={global} refer={this} />\n            {(process.env.REACT_APP_NO_AUTH)&&\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({target: 'none'})}\n            >\n              Sign In\n            </Button>\n            ||\n            <div>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={() => this.setState({target: 'google'})}\n              >\n                Google Sign In\n              </Button>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => this.setState({target: 'facebook'})}\n                className={classes.submit}\n              >\n                Facebook Sign In\n              </Button>\n            </div>\n            }\n          </form>\n        </Paper>\n        <br />\n        <center>\n          Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA\n          <p />\n          Not for any candidate or political party.\n          <p />\n          Copyright (c) 2019, Our Voice USA. All rights reserved.\n          <p />\n          This program is free software; you can redistribute it and/or\n          modify it under the terms of the GNU Affero General Public License\n          as published by the Free Software Foundation; either version 3\n          of the License, or (at your option) any later version.\n        </center>\n      </main>\n    );\n  }\n}\n\nconst LoginOption = props => {\n  switch (props.refer.state.selectedLoginOption.value) {\n    case 'org':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Enter your Organization ID. Example: NCC1701</InputLabel>\n            <Input id=\"orgId\" name=\"orgId\" autoComplete=\"orgId\" autoFocus defaultValue={props.global.state.orgId} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that you have read and agreed to our terms of use.\"\n          />\n        </div>\n      );\n    case 'server':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.global.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  global,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ {(global.state.orgId?'Organization ID: '+global.state.orgId:'@ '+global.state.server)}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ assignments, handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      {assignments.admin&&\n      <div>\n      <Link to={'/qrcode/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AspectRatioIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"QR Codes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </div>\n    }\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  assignments,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems assignments={assignments} handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  QRCodes,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ global }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard global={global} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} global={global} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers global={global} />} />\n    <Route path=\"/teams/\" render={() => <Teams global={global} />} />\n    <Route path=\"/turf/\" render={() => <Turf global={global} />} />\n    <Route path=\"/forms/\" render={() => <Forms global={global} />} />\n    <Route path=\"/qrcode/\" render={() => <QRCodes global={global} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes global={global} />} />\n    <Route path=\"/queue/\" render={() => <Queue global={global} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics global={global} />} />\n    <Route path=\"/settings/\" render={() => <Settings global={global} />} />\n    <Route path=\"/about/\" render={() => <About global={global} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login, Loading } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      global: props.global,\n      assignments: {},\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: localStorage.getItem('server'),\n      token: localStorage.getItem('jwt'),\n      orgId: localStorage.getItem('orgId'),\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let { server, token, orgId } = this.state;\n\n    this.setState({loading: true});\n\n    // assume error unless proven otherwise\n    let hai = {error: true};\n\n    try {\n      if (server && token) {\n        hai = await this.singHello(server, jwt.decode(token)['id'].split(\":\")[0], token, orgId);\n      } else {\n        throw new Error(\"missing server or token\");\n      }\n\n      if (hai.error) {\n        throw new Error(\"hai error\")\n      }\n    } catch (e) {\n      // if we had a token, it was bad, clear everything\n      if (token && server) {\n        this.setState({server: null, token: null, orgId: null});\n        localStorage.clear();\n        console.warn(\"Cleaning localStorage\");\n      }\n      console.warn(e);\n    }\n\n    this.setState({\n      loading: false,\n      assignments: (hai.data?hai.data:{}),\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    const { global } = this.state;\n\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n    if (!this.state.server) return;\n\n    let data;\n\n    try {\n      data = await _fetch(global, '/google_maps_key');\n      if (!data) return;\n\n      // load google places API\n      var aScript = document.createElement('script');\n      aScript.type = 'text/javascript';\n      aScript.src =\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        data.google_maps_key +\n        '&libraries=places';\n      document.head.appendChild(aScript);\n\n      this.setState({ google_maps_key: data.google_maps_key });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.token) return null;\n\n    try {\n      item = jwt.decode(this.state.token)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.clear();\n    this.setState({ menuLogout: false, server: null, token: null, orgId: null });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n    let orgId;\n\n    if (event.target.orgId) {\n      orgId = event.target.orgId.value;\n      let place = orgId.substring(0,2).toLowerCase();\n      server = 'gotv-'+place+'.ourvoiceusa.org';\n    } else if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = window.location.host.replace(':3000',':8080');\n    }\n    if (process.env.REACT_APP_NO_AUTH) {\n      // TODO: ask developer for username and generate a token with it\n      let token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Im5vYXV0aDpsb2NhbHVzZXIiLCJuYW1lIjoiTG9jYWwgVXNlciIsImVtYWlsIjoibG9jYWxAbG9jYWxob3N0IiwiaXNzIjoib3Vydm9pY2V1c2Eub3JnIiwiaWF0IjoxLCJleHAiOjIsImRpc2NsYWltZXIiOiJCbGFoIGJsYWggZGlzY2xhaW1lciJ9.qa5K2pgi1uLYkV7jP3aNvazcchvgBD8RwhdG6Q86GxlvusQx7nNCTr3LrAnn6pxDJxNidJoqjD3Ie77jj5hWK_-lbgtHMLhNXGExDxI8pQ0I5ZnAV_5pDu7vARinoy3mctQWFO2pIQSu8KzQc7eQ90IQZBseE7nQV-ugZRfK8Teo_48COcJxGxqwCNCO80G_JzBoif2xaWRb2i2n0qeSUKfXN4Fwy46JOiHFnL9yOS5s54tB6doe1wFJNYps8eVQbVkTBL1I9PQP4Gs-BmzND0vcQaczTdu_J50uvLL5do1FHb48lRhrA44ZrYv3EVwNsJXZtH3MbasxgPrZhl69VQ';\n      localStorage.setItem('jwt', token);\n      this.setState({token}, () => this.singHello(server, target, null, orgId));\n    }\n    else await this.singHello(server, target, null, orgId);\n  };\n\n  singHello = async (server, target, token, orgId) => {\n    let res;\n\n    localStorage.setItem('server', server);\n    if (orgId) localStorage.setItem('orgId', orgId);\n    this.setState({server, orgId});\n\n    let https = true;\n    if (server.match(/:8080$/)) https = false;\n\n    try {\n      res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ/'+(orgId?orgId+'/':'')+'api/v1/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (token ? token : (this.state.token ? this.state.token : 'of the one ring')),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        setTimeout(() => {\n          window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        }, 500);\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg, data: body.data };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ user: this.state.user });\n        return { error: false, flag: true, data: body.data };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { assignments, server, token, loading } = this.state;\n\n    if (loading) return (\n      <Router>\n        <Route path=\"/\" render={props => <Loading {...props}  />} />\n      </Router>\n    );\n\n    if (!server || !token) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} global={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            global={this}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            assignments={assignments}\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes global={this} />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  Icon,\n} from '../../common.js';\n\nimport { CardTurf } from '../Turf';\nimport { CardForm } from '../Forms';\nimport { CardTeam } from '../Teams';\nimport { CardVolunteerFull } from './CardVolunteerFull';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: add, vId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    const { global } = this.state;\n\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/promote',\n          'POST',\n          { teamId: add, vId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/demote',\n          'POST',\n          { teamId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { formId: add, vId: this.props.id }\n        ));\n      })\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { formId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: add, vId: this.props.id }\n        ));\n      })\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: rm, vId: this.props.id }\n        ));\n      })\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n      {\n        value: 'auto',\n        id: 'auto',\n        label: (\n          <CardTurf\n            global={global}\n            key=\"auto\"\n            turf={{\n              id: 'auto',\n              name: 'Area surrounnding this volunteer\\'s home address'\n            }}\n            refer={this}\n            icon={faHome}\n          />\n        )\n      }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    const { global } = this.state;\n\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { global, volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull global={global} volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisVolunteer: volunteer })}\n      >\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nconst VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { teamId: add, turfId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { teamId: rm, turfId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { vId: add, turfId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: rm, turfId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'turf', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull global={global} turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { PaperTable } from '../Elements';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      <h3>Turf Stats</h3>\n      <pre>{JSON.stringify(props.refer.state.turf.stats)}</pre>\n      <PaperTable\n        spec={[\n          {\n            header: 'Query Name',\n            tooltip: 'Constraints which define this attribute query.',\n            params: ['Name'],\n          },\n          {\n            header: 'Total Addresses',\n            tooltip: 'Total number of houses/buildings in this area.',\n            params: ['Total Addresses'],\n          },\n          {\n            header: 'Total People',\n            tooltip: 'Total number of people in this area.',\n            params: ['Total People'],\n          },\n          {\n            header: 'Total People Visited',\n            tooltip: 'Total number of people in this area who have been visited.',\n            params: ['Total People Visited'],\n          },\n          {\n            header: 'People Visited in past month',\n            tooltip: 'Total number of peple in this area who have been visited.',\n            params: ['People Visited in past month'],\n          },\n        ]}\n        rows={\n          Object.keys(props.refer.state.turf.stats[\"Stats by Attribute\"]).map(k => {\n            props.refer.state.turf.stats[\"Stats by Attribute\"][k]['Name'] = k;\n            return props.refer.state.turf.stats[\"Stats by Attribute\"][k];\n          })\n        }\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\nimport QRCode from 'qrcode';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function tsToStr(ts) {\n  return new Date(ts).toString();\n};\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(global, uri, method, body) {\n  if (!global || !global.state) return;\n\n  const { server, token } = global.state;\n\n  let https = true;\n  if (server.match(/:8080$/)) https = false;\n\n  if (!method) method = 'GET';\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ' + (global.state.orgId?'/'+global.state.orgId:'') + '/api/v1' + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(global) {\n  let imports = [];\n  try {\n    let data = await _fetch(global, '/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport function _inviteLink(inviteCode, server, orgId) {\n  return 'http'+(server.match(/:8080$/)?'':'s')+'://'+server+'/HelloVoterHQ/'+(orgId?orgId+'/':'')+'mobile/invite?inviteCode='+inviteCode+'&'+(orgId?'orgId='+orgId:'server='+server);\n}\n\nexport async function _loadQRCode(global, id) {\n  let qrcode = {};\n  try {\n    qrcode = await _fetch(\n      global,\n      '/qrcode/get?id=' + id\n    );\n    qrcode.img = await QRCode.toDataURL(_inviteLink(id, global.state.server, global.state.orgId));\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode info.');\n  }\n  return qrcode;\n}\n\nexport async function _loadQRCodes(global, id) {\n  let qrcodes = [];\n\n  try {\n    qrcodes = await _fetch(global, '/qrcode/list');\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode data.');\n  }\n\n  return qrcodes;\n}\n\nexport async function _loadVolunteer(global, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      global,\n      '/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(global, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(global, '/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\n\nexport async function _loadTurf(global, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      global,\n      '/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTurfs(global, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(global, '/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(global, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(global, '/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(global, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      global,\n      '/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(global, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(global, '/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(global, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      global,\n      '/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(global, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    forms = await _fetch(global, '/' + uri);\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttribute(global, id) {\n  let attribute = {};\n\n  try {\n    let data = await _fetch(global, '/attribute/get?id='+id);\n    if (data.data) attribute = data.data[0];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  return attribute;\n}\n\nexport async function _loadAttributes(global) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(global, '/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\n\nexport async function _loadAddressData(global, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(global, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  now.forEach(n => {\n    if (prior.indexOf(n) === -1) add.push(n);\n  });\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  prior.forEach(p => {\n    if (now.indexOf(p) === -1) rm.push(p);\n  });\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  _fetch,\n  _searchStringify,\n  _loadVolunteers,\n  RootLoader,\n  DialogSaving\n} from '../../common.js';\n\nimport { CardVolunteer } from './CardVolunteer'\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n    let invited = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else if (c.invited) invited.push(c);\n      else if (c.ass.ready || c.ass.teams.length) ready.push(c);\n      else unassigned.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers global={global} refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/invited\"\n              render={() => (\n                <div>\n                  <ListVolunteers\n                    global={global}\n                    refer={this}\n                    type=\"Invited\"\n                    volunteers={invited}\n                  />\n                  <Button onClick={async () => {\n                    let obj = await _fetch(\n                      global,\n                      '/volunteer/invite',\n                      'POST'\n                    );\n                    if (obj.token) {\n                      this.setState({ thisVolunteer: {id: 'invite:'+obj.token} });\n                    } else {\n                      notify_error({}, 'Invite failed.');\n                    }\n                  }} color=\"primary\">\n                    Invite Someone\n                  </Button>\n                </div>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisVolunteer.id ? true : false}\n              onClose={() => this.setState({ thisVolunteer: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardVolunteer\n                  global={global}\n                  key={this.state.thisVolunteer.id}\n                  id={this.state.thisVolunteer.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer global={global} key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\nimport EdiText from 'react-editext';\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadQRCode,\n  _loadQRCodes,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _inviteLink,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class QRCodes extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('qrcodesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisQRCode: {},\n      qrcodes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('qrcodesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcodes = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      qrcodes = await _loadQRCodes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load qrcodes.');\n    }\n    this.setState({ loading: false, qrcodes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let qrcodes = [];\n\n    this.state.qrcodes.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      qrcodes.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Route\n              exact={true}\n              path=\"/qrcode/\"\n              render={() => <ListQRCodes global={global} refer={this} qrcodes={qrcodes} />}\n            />\n            <Route\n              path=\"/qrcode/view/:id\"\n              render={props => (\n                <CardQRCode\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisQRCode.id ? true : false}\n              onClose={() => this.setState({ thisQRCode: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardQRCode\n                  global={global}\n                  key={this.state.thisQRCode.id}\n                  id={this.state.thisQRCode.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListQRCodes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.qrcodes.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardQRCode global={props.global} key={c.id} qrcode={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.qrcodes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}QRCodes ({props.qrcodes.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n      <Button onClick={async () => {\n        let obj = await _fetch(\n          props.global,\n          '/qrcode/create',\n          'POST'\n        );\n        if (obj && obj.id) {\n          props.refer.setState({ thisQRCode: obj});\n          props.refer._loadData();\n        } else {\n          notify_error({}, 'QRCode creation failed.');\n        }\n      }} color=\"primary\">\n        Generate QR CODE\n      </Button>\n    </div>\n  );\n};\n\nexport class CardQRCode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      qrcode: this.props.qrcode,\n      selectedTeamsOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.qrcode) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/team/add',\n          'POST',\n          { teamId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/team/remove',\n          'POST',\n          { teamId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        qrcode\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/form/add',\n          'POST',\n          { formId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/form/remove',\n          'POST',\n          { formId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/turf/add',\n          'POST',\n          { turfId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/turf/remove',\n          'POST',\n          { turfId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcode = {},\n      forms = [],\n      turf = [],\n      teams = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [qrcode, forms, turf, teams] = await Promise.all([\n        _loadQRCode(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      qrcode.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    qrcode.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    qrcode.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      qrcode,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedFormsOption,\n      selectedTurfOption,\n    });\n  };\n\n  _disableQRCode = async (qrcode, flag) => {\n    const { global } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/disable',\n        'POST',\n        { id: qrcode.id }\n      );\n      notify_success('QRCode has been disabled.');\n    } catch (e) {\n      notify_error(e, 'Unable to disable QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  };\n\n  onSave = async (val) => {\n    const { global, qrcode } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/update',\n        'POST',\n        { id: qrcode.id, name: val }\n      );\n      notify_success('QRCode has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  }\n\n  render() {\n    const { global, qrcode } = this.state;\n\n    if (!qrcode || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <img alt=\"QR Code\" src={qrcode.img} />\n            </ListItemAvatar>\n          </ListItem>\n          <CardQRCodeFull global={global} qrcode={qrcode} refer={this} link={_inviteLink(qrcode.id, global.state.server, global.state.orgId)} onSave={this.onSave} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisQRCode: qrcode })}\n      >\n        <ListItemAvatar>\n          <Icon icon={faQrcode} size={\"large\"} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={qrcode.name}\n          secondary={\"\"}\n        />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardQRCodeFull = props => (\n  <div>\n    <h1><EdiText type=\"text\" value={props.qrcode.name} onSave={props.onSave} /></h1>\n    <br />\n    <br />\n    Link to use on a mobile device: <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>{props.link}</a>\n    <br />\n    <br />\n    Last Used:{' '}\n    {(props.qrcode.last_used?new TimeAgo('en-US').format(new Date(props.qrcode.last_used-30000)):'Never')}\n    <br />\n    Number of people who've used it: {props.qrcode.num_volunteers}\n    <br />\n    <br />\n    <div>\n      Teams this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.qrcode.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.qrcode.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    {props.qrcode.disabled&&\n    <div>This QR Code is disabled</div>\n    }\n    {!props.qrcode.disabled&&\n    <Button onClick={() => props.refer._disableQRCode(props.qrcode, false)}>\n      Disable QRCode\n    </Button>\n    }\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(global, null, true),\n      _loadForms(global),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(global, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    const { global } = this.state;\n\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(global, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport Select from 'react-select';\n\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  PlacesAutocomplete,\n} from '../../common.js';\n\nimport { CardTurf } from '../Turf';\nimport { CardForm } from '../Forms';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <Button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </Button>\n    ) : (\n      <Button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </Button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress global={global} refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      global: props.global,\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    const { global } = this.state;\n\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        global,\n        '/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <Button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </Button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf global={props.global} key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState(props);\n    this.state.global = props.global;\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState(props) {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    const { global } = this.state;\n\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(global, '/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf global={global} turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import { CardTurf } from './CardTurf';\nimport { CardTurfFull } from './CardTurfFull';\nimport { ListTurf } from './ListTurf';\nimport { TurfOptions } from './TurfOptions';\nimport Turf from './Turf';\n\nexport {\n  CardTurf,\n  CardTurfFull,\n  ListTurf,\n  TurfOptions,\n  Turf\n};","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    const { global } = this.state;\n\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams global={global} refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam global={props.global} key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: add }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: rm }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { formId: add, teamId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { formId: rm, teamId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let teamn = await _loadTeam(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { turfId: add, teamId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { turfId: rm, teamId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(global, this.props.id),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'team', this.props.id),\n        _loadTurfs(global, this.props.id),\n        _loadTurfs(global),\n        _loadForms(global, this.props.id),\n        _loadForms(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull global={global} team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport {\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers';\nimport { CardTeam } from './Teams';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForms,\n  _loadForm,\n  _loadAttributes,\n  _loadVolunteers,\n  _loadTeams,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.id2List = {\n        droppable: 'attributes',\n        droppable2: 'attributes_selected',\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n      const { source, destination } = result;\n\n      // dropped outside the list\n      if (!destination) {\n          return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n          const attributes = reorder(\n              this.getList(source.droppableId),\n              source.index,\n              destination.index\n          );\n\n          let state = { attributes };\n\n          if (source.droppableId === 'droppable2') {\n              state = { attributes_selected: attributes };\n          }\n\n          this.setState(state);\n      } else {\n          const result = move(\n              this.getList(source.droppableId),\n              this.getList(destination.droppableId),\n              source,\n              destination\n          );\n\n          this.setState({\n              attributes: result.droppable,\n              attributes_selected: result.droppable2\n          });\n      }\n  };\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n    case 'String':\n      return 'Text Input';\n    case 'TEXTBOX':\n      return 'Text Box';\n    case 'Number':\n      return 'Number';\n    case 'Boolean':\n      return 'On/Off Switch';\n    case 'SAND':\n      return 'Agree/Disagree';\n    case 'List':\n      return 'Select from List';\n    default:\n      return type;\n    }\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(global);\n      attributes = await _loadAttributes(global);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    const { global } = this.state;\n\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: Object.keys(this.state.fields),\n      };\n\n      await _fetch(global, '/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms global={global} forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                  <DragDropContext onDragEnd={this.onDragEnd}>\n                      <Droppable droppableId=\"droppable\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                      &nbsp;\n                      Drag to assign\n                      &nbsp;\n                      <Droppable droppableId=\"droppable2\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes_selected.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                                  <Checkbox value=\"ack\" color=\"primary\" /> Readonly\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                  </DragDropContext>\n                </div>\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm global={props.global} key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { teamId: add, formId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { teamId: rm, formId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { vId: add, formId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { vId: rm, formId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'form', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'form', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { global, form } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull global={global} form={form} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import { CardVolunteer } from './CardVolunteer';\nimport Volunteers from './Volunteers';\n\nexport {\n  CardVolunteer,\n  Volunteers\n};\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","import { MapSelect } from './MapSelect';\nimport PaperTable from './PaperTable';\nimport ProgressBar from './ProgressBar';\n\nexport { MapSelect, PaperTable, ProgressBar };\n"],"sourceRoot":""}