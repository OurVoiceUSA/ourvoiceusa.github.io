{"version":3,"sources":["components/About.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Attribute/AddAttribute.js","components/Attributes.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","app.styles.js","components/Loading.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","App.jsx","serviceWorker.js","index.js","components/Volunteers/CardVolunteer.jsx","components/Turf/CardTurf.jsx","components/Turf/CardTurfFull.jsx","common.js","components/Teams.jsx","components/Volunteers/Volunteers.jsx","components/QRCodes.jsx","components/Map.jsx","components/Volunteers/CardVolunteerFull.jsx","components/Forms/Forms.jsx","components/Forms/FormEditor.jsx","components/Forms/CardForm.jsx","components/Forms/CardFormFull.jsx","components/Forms/index.js","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Turf/index.js","components/Volunteers/index.js","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/Elements/index.js"],"names":["App","props","componentDidMount","a","global","state","data","_fetch","notify_error","setState","api_version","version","neo4j_version","this","process","CircularProgress","height","style","color","target","rel","href","icon","faTwitter","faFacebook","faGlobe","Component","renderLabelContent","value","percent","x","y","midAngle","transform","textAnchor","toFixed","_init","loading","turfOptions","_loadTurfs","turfs","attributeOptions","_loadAttributes","attributes","forEach","t","push","_searchStringify","id","label","key","turf","refer","name","doQuery","selectedAttributeOption","data_breakdown","uri","selectedTurfOption","include_null","map","d","length","pop","handleTurfChange","handleAttributeChange","animation","flag","func","onChange","options","isMulti","isSearchable","placeholder","Checkbox","checked","e","c","width","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","index","fill","position","CardDashboard","sortableElement","display","padding","className","faShieldAlt","flex","overflow","stat","Cards","sortableContainer","dash","item","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","localStorage","setItem","n","_loadData","admins","noAdmins","vol","volunteers","faUser","team","teams","faUsers","faMap","form","forms","faClipboard","faChartPie","addr","addresses","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","getItem","split","axis","Modal","aria-labelledby","aria-describedby","open","onClose","top","left","right","backgroundColor","getUserProp","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","AddAttribute","useState","setName","type","setType","showAddOps","setShowAddOps","additionalOptions","setAdditionalOptions","multi","setMulti","addOpsCheck","FormControlLabel","control","event","additionalOps","addAnotherBtn","Fragment","FormControl","TextField","tempArray","handleOptionChange","IconButton","aria-label","onClick","filter","ind","deleteOption","Button","variant","concat","required","InputLabel","Select","labelId","MenuItem","create","value2select","val","ucFirst","typeOptions","handleClickDelete","menuDelete","handleCloseDelete","_deleteAttribute","saving","notify_success","window","location","_createAttribute","attr","json","search","handlePageClick","pageNum","selected","perPage","formServerItems","struct","String","formServerOptions","fields","server","error","onTypeSearch","bind","handlePageNumChange","console","log","addattributeForm","addAttributeForm","obj","toLowerCase","list","includes","exact","path","render","data-tip","match","params","edit","Dialog","DialogTitle","DialogActions","autoFocus","ListAttributes","paginate","idx","Math","floor","attribute","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","to","CardAttribute","handleMembersChange","selectedMembersOption","Promise","all","_loadAttribute","onSave","onSaveName","onSaveType","CardAttributeFull","JSON","stringify","_pipe","f","g","pipe","fns","reduce","PAPER_TABLE_SPEC","header","tooltip","jobRuntime","jobNumber","ImportMap","headers","formats","mapped","formatHeaders","i","updateFormats","field","updateMapped","mapData","getMapped","generateFormats","getAllIndexes","parseData","format","arr","Array","isArray","indexes","findIndex","total","next","trim","map1","map2","warn","checkbox","React","PreviewItem","title","random","createRandomKey","parseInt","ImportPreview","titles","records","record","defaultState","sending","submitting","completed","jobStatus","job","success","started","showErrorIfError","taskObjFromQueue","filename","Queue","rows","r","q","spec","tsToStr","funcItemTooltip","styles","main","marginLeft","unit","marginRight","breakpoints","up","paper","flexDirection","alignItems","avatar","palette","secondary","submit","root","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","Loading","classes","CssBaseline","Paper","Typography","component","role","withStyles","Login","token","loginOptions","REACT_APP_NO_AUTH","pathname","dev","selectedLoginOption","setTimeout","reload","Avatar","onSubmit","preventDefault","doSave","fullWidth","LoginOption","htmlFor","Input","autoComplete","defaultValue","orgId","qserver","LogoutDialog","menuLogout","handleCloseLogout","_logout","Header","handleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","noWrap","alt","src","MenuItems","assignments","handleClickLogout","List","ListItem","button","ListItemIcon","ListItemText","primary","admin","Divider","Sidebar","handleDrawerClose","Drawer","NoMatch","Routes","Volunteers","Teams","Turf","Forms","QRCodes","hai","singHello","jwt","decode","Error","clear","_loadKeys","google_maps_key","aScript","document","createElement","head","appendChild","connectForm","prop","place","substring","host","replace","https","retry","fetch","method","Authorization","res","status","sleep","sm_oauth_url","get","msg","sm","body","ready","user","v","queryString","parse","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister","TimeAgo","locale","en","extract_addr","shift","join","CardVolunteer","handleTeamsChange","selectedTeamsOption","_handleSelectChange","adrm","add","teamId","vId","rm","_loadVolunteer","volunteer","handleLeaderChange","selectedLeaderOption","handleFormsChange","selectedFormsOption","formId","turfId","hometurf","nearbyturf","_loadForms","_loadTeams","_loadNearbyTurfs","teamOptions","leaderOptions","formOptions","ass","leader","direct","autoturf","faHome","_lockVolunteer","term","ReactTooltip","rebuild","locationstr","VolunteerBadges","thisVolunteer","badges","faCrown","faFlag","locked","faBan","faCheckCircle","faExclamationTriangle","CardTurf","members","teamsSelected","_loadTurf","_loadVolunteers","membersOption","faStreetView","CardTurfFull","stats","Object","keys","k","start","end","prettyMs","num","formatNumber","fractionDigits","ts","Date","toString","NotificationManager","text","_browserLocation","isGeolocationAvailable","isGeolocationEnabled","coords","access","lng","longitude","lat","latitude","Icon","iconName","RootLoader","faSync","children","DialogSaving","disableShrink","o","last_seen","created","_loadImports","imports","_inviteLink","inviteCode","_loadQRCode","qrcode","QRCode","toDataURL","img","_loadQRCodes","qrcodes","byType","call","dist","_loadTeam","_loadForm","_loadAddressData","_loadPeopleAddressData","aId","oldopt","newopt","prior","now","indexOf","p","PlacesAutocomplete","addressSearch","getInputProps","getSuggestionItemProps","suggestions","suggestion","description","InviteSomeone","ModalInvite","_deleteTeam","_createTeam","addTeamForm","getValue","ListTeams","Form","ref","onChangeTeam","CardTeam","teamn","turfSelected","formSelected","memberOptions","CardTeamFull","unassigned","denied","invited","ListVolunteers","thisQRCode","ListQRCodes","CardQRCode","qId","_disableQRCode","onAutoTurfToggle","CardQRCodeFull","link","faQrcode","size","last_used","num_volunteers","disabled","loadMarkerData","onMarkerClick","marker","showingInfoWindow","address","selectedPlace","activeMarker","onTurfClick","infoLocation","paths","activeTurf","mapProps","center","onMapClicked","visits","polygons","geometry","geojson2polygons","polygon","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","ModalMarker","people","units","ModalPerson","person","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","CardVolunteerFull","email","phone","VolunteerAddress","slice","submitAddress","geocodeByAddress","getLatLng","pos","onTypeAddress","debounce","onSelect","attributes_selected","optional","values","_deleteForm","_createForm","addFormForm","formName","atupdate","order","onChangeForm","ListForms","FormEditor","getList","id2List","onDragEnd","result","source","destination","droppableId","startIndex","endIndex","from","splice","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","move","droppable","droppable2","AttributeDroppable","provided","snapshot","innerRef","isDraggingOver","background","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","inputTypeToReadable","CardForm","handleNameChange","CardFormFull","ListTurf","TurfOptions","handleStateChange","selectedStateOption","us_states","sldu","sldl","selectedDrawOption","stateOptions","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","accept","handleImportFiles","files","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","readAsText","_deleteTurf","_createTurf","addTurfForm","objs","geoData","features","properties","NAME","precinctid","subprecinc","circleToPolygon","urlFromDist","failed","asyncForEach","initState","thisTurf","drawOptions","onChangeTurf","_showSubmitButton","MapSelect","_handleCheck","_setValue","_setMapValue","_renderCheckbox","_renderMapOptions","dimensions","labelWidth","specVal","row","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","direction","TablePaginationActionsWrapped","flexShrink","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","emptyRows","min","tableWrapper","Table","table","TableHead","TableRow","Tooltip","TableCell","TableBody","s","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","Check","LinearProgress","paddingTop"],"mappings":"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","file":"static/js/main.853ea6e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      api_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    try {\n      data = await _fetch(global, '/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      api_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    const { api_version, neo4j_version } = this.state;\n\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {api_version ? (\n            'HelloVoterAPI version ' + api_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {neo4j_version ? (\n            'Neo4j version ' + neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        {(api_version && api_version !== \"unknown\" && api_version !== process.env.REACT_APP_VERSION)&&\n        <h3 style={{color: \"red\"}}>WARNING: API version doesn't match HQ version.</h3>\n        }\n        <div>\n          &copy; 2020, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoter/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md\">Privacy Policy</a>\n          ||\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md\">Terms of Service</a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(global);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    const { global } = this.state;\n\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = '/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(global, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);\n","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            key={card.name}\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  _fetch,\n  notify_error,\n  RootLoader,\n  InviteSomeone,\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(global, '/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    const { global, data, loading, noAdmins } = this.state;\n\n    return (\n      <RootLoader flag={loading} func={this._loadData}>\n        {(data.version && data.version !== process.env.REACT_APP_VERSION)&&\n        <h3 style={{color: \"red\"}}>WARNING: API version doesn't match HQ version.</h3>\n        }\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <InviteSomeone refer={this} />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {global.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React, {useState} from 'react';\n\nimport { Checkbox, Select, FormControl,FormControlLabel,InputLabel,\n        MenuItem,TextField,Button,IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n/**\n * This form isn't very dynamic with its construction, but does re-render\n * based on the type of attribute selected in the dropdown.  The only property\n * needed is the callback function to send back the attribute object.\n * Uses material-ui for the form elements.\n * @param {*} props\n */\nconst AddAttribute = (props) => {\n\n    //need some state for UI\n    //name - string\n    const [name, setName] = useState('');\n\n    //type - string\n    const [type, setType] = useState('string');\n\n    const [showAddOps, setShowAddOps] = useState(false);\n\n    //additionalOptions - array of strings\n    const [additionalOptions, setAdditionalOptions] = useState(['']);\n\n    //multi-select flag - bool only on additional options.\n    const [multi, setMulti] = useState(false);\n\n    const handleShowAddOps = (event) => {\n        setShowAddOps(event.target.checked);\n    };\n\n    const handleTypeChange = (event) => {\n        setType(event.target.value);\n        if(event.target.value !== 'string' && showAddOps)\n            setShowAddOps(false);\n    };\n\n    const handleAddOption = () => {\n        const tempArray = additionalOptions.concat('');\n        setAdditionalOptions(tempArray);\n    };\n\n    const deleteOption = (index) => {\n        const tempArray = additionalOptions.filter((value,ind) => index != ind);\n        setAdditionalOptions(tempArray);\n    };\n\n    const handleNameChange = (event) => {\n        setName(event.target.value);\n    };\n\n    const handleMultiChange = (event) => {\n        setMulti(event.target.checked);\n    }\n\n    const handleOptionChange = (event, index) => {\n        const tempArray = [];\n        for ( let key in additionalOptions) {\n            if(key == index) {\n                tempArray.push(event.target.value);\n            } else {\n                tempArray.push(additionalOptions[key]);\n            }\n        }\n\n        setAdditionalOptions(tempArray);\n    };\n\n    let addOpsCheck = null;\n\n    if(type === 'string') {\n        addOpsCheck = (\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={showAddOps}\n                        onChange={handleShowAddOps}\n                        value=\"showAdd\"\n                        color=\"primary\"\n                    />\n            }\n            label=\"Additional Options\"\n          />\n        );\n    }\n\n    let additionalOps = null;\n    let addAnotherBtn = null;\n\n    if(showAddOps) {\n        additionalOps = (\n            additionalOptions.map((data,index) => {\n                return (\n                <React.Fragment key={index}>\n                <FormControl key={index} className={useStyles.formControl}>\n                    <TextField id={\"option-\"+(index+1)}\n                            label={\"Option \"+(index+1)}\n                            onChange={(event) => handleOptionChange(event,index)}\n                            value={data} />\n                </FormControl>\n                <IconButton aria-label=\"delete\" onClick={() => deleteOption(index)}>\n                    <DeleteIcon />\n                </IconButton>\n                <br/>\n                <br/>\n                </React.Fragment>)\n            })\n        );\n        addAnotherBtn = (\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAddOption} >Add Option</Button>\n        );\n\n    }\n\n    let showMultiCheck = null;\n\n    if(additionalOptions.length > 1) {\n        showMultiCheck = (\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={multi}\n                        onChange={handleMultiChange}\n                        value=\"showMulti\"\n                        color=\"primary\"\n                    />\n            }\n            label=\"Mutli-Select\"\n          />\n        );\n    }\n\n    //build the return object, format unknown.\n    const buildAttr = () => {\n        return {\n            name: name,\n            type: type,\n            options: additionalOptions,\n            multi: multi\n        };\n    }\n\n    return (\n        <div>\n            <h3>Enter Attribute Details</h3>\n            <FormControl className={useStyles.formControl}>\n                <TextField required\n                    id=\"standard-required\"\n                    label=\"Name\"\n                    value={name}\n                    onChange={handleNameChange} />\n            </FormControl>\n            <br/>\n            <br/>\n            <FormControl className={useStyles.formControl}>\n                <InputLabel id=\"attribute-type-label\">Type</InputLabel>\n                <Select\n                    labelId=\"attribute-type-label\"\n                    id=\"attribute-type\"\n                    value={type}\n                    onChange={handleTypeChange}\n                >\n                <MenuItem value='string'>Text</MenuItem>\n                <MenuItem value='textbox'>Textbox</MenuItem>\n                <MenuItem value='number'>Number</MenuItem>\n                <MenuItem value='boolean'>Boolean</MenuItem>\n                {/* TODO: <MenuItem value='date'>Date</MenuItem> */}\n                {/* TODO: <MenuItem value='sand'>Agree/Disagree</MenuItem> */}\n                </Select>\n            </FormControl>\n            &emsp;&emsp;{addOpsCheck}\n            <br/>\n            <br/>\n            {additionalOps}\n            {/* TODO: showMultiCheck */}\n            <br/>\n            {addAnotherBtn}&emsp;\n            <Button variant=\"contained\"\n                color=\"primary\"\n                onClick={() => props.create(buildAttr())} >\n                Create Attribute\n            </Button>\n        </div>\n    );\n}\n\nexport default AddAttribute;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport EdiText from 'react-editext';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\nimport {ucFirst} from 'ourvoiceusa-sdk-js';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport AddAttribute from './Attribute/AddAttribute';\n\nimport {\n  _loadAttribute,\n  _loadAttributes,\n  _searchStringify,\n  _fetch,\n  notify_error,\n  notify_success,\n  RootLoader,\n  DialogSaving,\n} from '../common.js';\n\nfunction value2select(val) {\n  return {value: val, label: ucFirst(val)};\n}\n\nconst typeOptions = [\n  value2select(\"string\"),\n  value2select(\"boolean\"),\n  value2select(\"number\"),\n  value2select(\"textbox\"),\n];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('attributesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      attributes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Attribute Name',\n          error: 'You must enter an Attribute name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.addattributeForm);\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeAttribute(addAttributeForm) {\n    console.log(\"Changing attributeState: \",addAttributeForm);\n    //this.setState({ addAttributeForm });\n    this.setState({name: addAttributeForm.name});\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('attributesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteAttribute = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/attribute/delete', 'POST', {\n        id: id,\n      });\n      notify_success('Attribute has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete Attributes.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _createAttribute = async (attr) => {\n    //console.log(attr);\n    const { global } = this.state;\n\n    //let json = this.addAttributeForm.getValue();\n    let json = attr;\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/attribute/create', 'POST', json);\n      notify_success('Attribute has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create Attribute.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let attributes = [];\n\n    try {\n      attributes = await _loadAttributes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, attributes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.attributes.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/attributes/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListAttributes global={global} refer={this} attributes={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/attributes/add\"\n            render={() => (\n              // <div>\n              //   <t.form.Form\n              //     // ref={ref => (this.addattributeForm = ref)}\n              //     type={this.formServerItems}\n              //     options={this.formServerOptions}\n              //     onChange={e => this.onChangeAttribute(e)}\n              //     value={this.state.name}\n              //   />\n              //   <button onClick={() => this._createAttribute()}>Submit</button>\n              // </div>\n              <AddAttribute create={(data) => this._createAttribute(data)}/>\n            )}\n          />\n          <Route\n            path=\"/attributes/view/:id\"\n            render={props => (\n              <div>\n                <CardAttribute\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete attribute\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this attribute?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteAttribute(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListAttributes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.attributes.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardAttribute global={props.global} key={t.id} attribute={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.attributes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Attributes ({props.attributes.length})\n      </h3>\n      <Link to={'/attributes/add'}>\n        <button>Add attribute</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardAttribute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      attribute: this.props.attribute,\n      selectedMembersOption: [],\n    };\n\n    this.onSaveName = this.onSaveName.bind(this);\n    this.onSaveType = this.onSaveType.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.attribute) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let attribute = {};\n    this.setState({ loading: true });\n\n    try {\n      [\n        attribute,\n      ] = await Promise.all([\n        _loadAttribute(global, this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load attribute info.');\n      return this.setState({ loading: false });\n    }\n\n    this.setState({\n      attribute,\n      loading: false,\n    });\n  };\n\n  onSave = async (type, val) => {\n    const { global, attribute } = this.state;\n\n    this.setState({ saving: true });\n\n    let obj = {id: attribute.id};\n    obj[type] = val;\n\n    try {\n      await _fetch(\n        global,\n        '/attribute/update',\n        'POST',\n        obj\n      );\n      notify_success('Attribute has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update Attribute.');\n    }\n\n    this._loadData();\n  }\n\n  onSaveName(val) {\n    this.onSave('name', val);\n  }\n\n  onSaveType(val) {\n    this.onSave('type', val);\n  }\n\n  render() {\n    const { attribute } = this.state;\n\n    if (!attribute || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <PaperclipIcon />{' '}\n            {attribute.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/attributes/view/' + attribute.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardAttributeFull attribute={attribute} onSaveName={this.onSaveName} onSaveType={this.onSaveType} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardAttributeFull = ({attribute, onSaveName, onSaveType}) => (\n  <div>\n    <h1><EdiText type=\"text\" value={attribute.name} onSave={onSaveName} onSaveType={onSaveType} /></h1>\n    <Select\n      value={value2select(attribute.type)}\n      onChange={onSaveType}\n      options={typeOptions}\n      isMulti={false}\n      isSearchable={true}\n      placeholder=\"Select an attribute type\"\n    />\n    {JSON.stringify(attribute)}\n  </div>\n);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => format.value && i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      imports: [],\n      ...defaultState,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { global, mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(global, '/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(global, '/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(global, '/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  _fetch,\n  tsToStr,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      global: props.global,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(global, '/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Loading extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            HelloVoterHQ is loading...\n          </Typography>\n          <CircularProgress height={15} />\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loading);\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\n\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let loginOptions = [];\n    if (!process.env.REACT_APP_NO_AUTH) loginOptions = [{label: 'Organization ID', value: 'org'}, {label: '3rd Party Server', value: 'server'}];\n    if (process.env.NODE_ENV === 'development') loginOptions.unshift({label: 'LOCAL DEVELOPMENT', value: 'dev'});\n\n    let token;\n\n    try {\n      if (this.props.location.pathname.match(/\\/jwt\\//)) {\n        token = this.props.location.pathname.split('/').pop();\n      }\n    } catch(e) {\n      console.warn(e);\n    }\n\n    this.state = {\n      global: props.global,\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n      selectedLoginOption: loginOptions[0],\n      loginOptions: loginOptions,\n    };\n\n  }\n\n  componentDidMount() {\n    const { token } = this.state;\n\n    if (token) {\n      localStorage.setItem('jwt', token);\n      setTimeout(() => {window.location.href = '/HelloVoterHQ/#/'}, 500);\n      setTimeout(() => {window.location.reload()}, 1500);\n    }\n  }\n\n  render() {\n    const { global, classes, token, loginOptions, selectedLoginOption } = this.state;\n\n    if (token) return (<Loading classes={classes} />);\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); global.doSave(e, this.state.target); }} >\n            <Select\n              value={selectedLoginOption}\n              options={loginOptions}\n              onChange={selectedLoginOption => this.setState({selectedLoginOption})}\n            />\n            <center>\n              <br />\n              &nbsp; || &nbsp;\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md\">Privacy Policy</a>\n              &nbsp; || &nbsp;\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md\">Terms of Service</a>\n              &nbsp; || &nbsp;\n            </center>\n            <LoginOption global={global} refer={this} />\n            {(process.env.REACT_APP_NO_AUTH)&&\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({target: 'none'})}\n            >\n              Sign In\n            </Button>\n            ||\n            <div>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={() => this.setState({target: 'google'})}\n              >\n                Google Sign In\n              </Button>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => this.setState({target: 'facebook'})}\n                className={classes.submit}\n              >\n                Facebook Sign In\n              </Button>\n            </div>\n            }\n          </form>\n        </Paper>\n        <br />\n        <center>\n          Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA\n          <p />\n          Not for any candidate or political party.\n          <p />\n          Copyright (c) 2020, Our Voice USA. All rights reserved.\n          <p />\n          This program is free software; you can redistribute it and/or\n          modify it under the terms of the GNU Affero General Public License\n          as published by the Free Software Foundation; either version 3\n          of the License, or (at your option) any later version.\n        </center>\n      </main>\n    );\n  }\n}\n\nconst LoginOption = props => {\n  switch (props.refer.state.selectedLoginOption.value) {\n    case 'org':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Enter your Organization ID. Example: NCC1701</InputLabel>\n            <Input id=\"orgId\" name=\"orgId\" autoComplete=\"orgId\" autoFocus defaultValue={props.global.state.orgId} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that you have read and agreed to our Terms of Service.\"\n          />\n        </div>\n      );\n    case 'server':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.global.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's Terms of Service.\"\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  global,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ {(global.state.orgId?'Organization ID: '+global.state.orgId:'@ '+global.state.server)}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ assignments, handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      {assignments.admin&&\n      <div>\n      <Link to={'/qrcode/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AspectRatioIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"QR Codes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      {(process.env.NODE_ENV === 'development')&&\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      }\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </div>\n    }\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  assignments,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems assignments={assignments} handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  QRCodes,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ global }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard global={global} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} global={global} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers global={global} />} />\n    <Route path=\"/teams/\" render={() => <Teams global={global} />} />\n    <Route path=\"/turf/\" render={() => <Turf global={global} />} />\n    <Route path=\"/forms/\" render={() => <Forms global={global} />} />\n    <Route path=\"/qrcode/\" render={() => <QRCodes global={global} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes global={global} />} />\n    {(process.env.NODE_ENV === 'development')&&\n    <Route path=\"/import/\" render={() => <ImportData global={global} />} />\n    }\n    <Route path=\"/queue/\" render={() => <Queue global={global} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics global={global} />} />\n    <Route path=\"/settings/\" render={() => <Settings global={global} />} />\n    <Route path=\"/about/\" render={() => <About global={global} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport { asyncForEach, sleep } from 'ourvoiceusa-sdk-js';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login, Loading } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      global: props.global,\n      assignments: {},\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: localStorage.getItem('server'),\n      token: localStorage.getItem('jwt'),\n      orgId: localStorage.getItem('orgId'),\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let { server, token, orgId } = this.state;\n\n    this.setState({loading: true});\n\n    // assume error unless proven otherwise\n    let hai = {error: true};\n\n    try {\n      if (server && token) {\n        hai = await this.singHello(server, jwt.decode(token)['id'].split(\":\")[0], token, orgId);\n      } else {\n        throw new Error(\"missing server or token\");\n      }\n\n      if (hai.error) {\n        throw new Error(\"hai error\")\n      }\n    } catch (e) {\n      // if we had a token, it was bad, clear everything\n      if (token && server) {\n        this.setState({server: null, token: null, orgId: null});\n        localStorage.clear();\n        console.warn(\"Cleaning localStorage\");\n      }\n      console.warn(e);\n    }\n\n    this.setState({\n      loading: false,\n      assignments: (hai.data?hai.data:{}),\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    const { global } = this.state;\n\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n    if (!this.state.server) return;\n\n    let data;\n\n    try {\n      data = await _fetch(global, '/google_maps_key');\n      if (!data) return;\n\n      // load google places API\n      var aScript = document.createElement('script');\n      aScript.type = 'text/javascript';\n      aScript.src =\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        data.google_maps_key +\n        '&libraries=places';\n      document.head.appendChild(aScript);\n\n      this.setState({ google_maps_key: data.google_maps_key });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.token) return null;\n\n    try {\n      item = jwt.decode(this.state.token)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.clear();\n    this.setState({ menuLogout: false, server: null, token: null, orgId: null });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n    let orgId;\n\n    if (event.target.orgId) {\n      orgId = event.target.orgId.value;\n      let place = orgId.substring(0,2).toLowerCase();\n      server = 'gotv-'+place+'.ourvoiceusa.org';\n    } else if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = window.location.host.replace(':3000',':8080');\n    }\n    if (process.env.REACT_APP_NO_AUTH) {\n      // TODO: ask developer for username and generate a token with it\n      let token = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Im5vYXV0aDpsb2NhbHVzZXIiLCJuYW1lIjoiTG9jYWwgVXNlciIsImVtYWlsIjoibG9jYWxAbG9jYWxob3N0IiwiaXNzIjoib3Vydm9pY2V1c2Eub3JnIiwiaWF0IjoxLCJleHAiOjIsImRpc2NsYWltZXIiOiJCbGFoIGJsYWggZGlzY2xhaW1lciJ9.qa5K2pgi1uLYkV7jP3aNvazcchvgBD8RwhdG6Q86GxlvusQx7nNCTr3LrAnn6pxDJxNidJoqjD3Ie77jj5hWK_-lbgtHMLhNXGExDxI8pQ0I5ZnAV_5pDu7vARinoy3mctQWFO2pIQSu8KzQc7eQ90IQZBseE7nQV-ugZRfK8Teo_48COcJxGxqwCNCO80G_JzBoif2xaWRb2i2n0qeSUKfXN4Fwy46JOiHFnL9yOS5s54tB6doe1wFJNYps8eVQbVkTBL1I9PQP4Gs-BmzND0vcQaczTdu_J50uvLL5do1FHb48lRhrA44ZrYv3EVwNsJXZtH3MbasxgPrZhl69VQ';\n      localStorage.setItem('jwt', token);\n      this.setState({token}, () => this.singHello(server, target, null, orgId));\n    }\n    else await this.singHello(server, target, null, orgId);\n  };\n\n  singHello = async (server, target, token, orgId) => {\n    let res;\n\n    localStorage.setItem('server', server);\n    if (orgId) localStorage.setItem('orgId', orgId);\n    this.setState({server, orgId});\n\n    let https = true;\n    if (server.match(/:8080$/)) https = false;\n\n    try {\n      let retry = true;\n\n      while (retry) {\n        res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ/'+(orgId?orgId+'/':'')+'api/v1/hello', {\n          method: 'POST',\n          headers: {\n            Authorization:\n              'Bearer ' +\n              (token ? token : (this.state.token ? this.state.token : 'of the one ring')),\n            'Content-Type': 'application/json'\n          },\n        });\n\n        if (res.status === 418) await sleep(12345);\n        else retry = false;\n      }\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        setTimeout(() => {\n          window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        }, 500);\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg, data: body.data };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ user: this.state.user });\n        return { error: false, flag: true, data: body.data };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { assignments, server, token, loading } = this.state;\n\n    if (loading) return (\n      <Router>\n        <Route path=\"/\" render={props => <Loading {...props}  />} />\n      </Router>\n    );\n\n    if (!server || !token) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} global={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            global={this}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            assignments={assignments}\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes global={this} />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  Icon,\n} from '../../common.js';\n\nimport { CardTurf } from '../Turf';\nimport { CardForm } from '../Forms';\nimport { CardTeam } from '../Teams';\nimport { CardVolunteerFull } from './CardVolunteerFull';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: add, vId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    const { global } = this.state;\n\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/promote',\n          'POST',\n          { teamId: add, vId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/demote',\n          'POST',\n          { teamId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { formId: add, vId: this.props.id }\n        ));\n      })\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { formId: rm, vId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: add, vId: this.props.id }\n        ));\n      })\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: rm, vId: this.props.id }\n        ));\n      })\n\n      await Promise.all(adrm);\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    const { global } = this.state;\n\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { global, volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull global={global} volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => {\n          this.props.refer.setState({ thisVolunteer: volunteer });\n          window.location.href = \"/HelloVoterHQ/#/volunteers/view/\"+volunteer.id;\n        }}>\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nconst VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvas\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { teamId: add, turfId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { teamId: rm, turfId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { vId: add, turfId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: rm, turfId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'turf', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull global={global} turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { PaperTable } from '../Elements';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      <h3>Turf Stats</h3>\n      <pre>{JSON.stringify(props.refer.state.turf.stats)}</pre>\n      <PaperTable\n        spec={[\n          {\n            header: 'Query Name',\n            tooltip: 'Constraints which define this attribute query.',\n            params: ['Name'],\n          },\n          {\n            header: 'Total Addresses',\n            tooltip: 'Total number of houses/buildings in this area.',\n            params: ['Total Addresses'],\n          },\n          {\n            header: 'Total People',\n            tooltip: 'Total number of people in this area.',\n            params: ['Total People'],\n          },\n          {\n            header: 'Total People Visited',\n            tooltip: 'Total number of people in this area who have been visited.',\n            params: ['Total People Visited'],\n          },\n          {\n            header: 'People Visited in past month',\n            tooltip: 'Total number of peple in this area who have been visited.',\n            params: ['People Visited in past month'],\n          },\n        ]}\n        rows={\n          Object.keys(props.refer.state.turf.stats[\"Stats by Attribute\"]).map(k => {\n            props.refer.state.turf.stats[\"Stats by Attribute\"][k]['Name'] = k;\n            return props.refer.state.turf.stats[\"Stats by Attribute\"][k];\n          })\n        }\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\nimport QRCode from 'qrcode';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function tsToStr(ts) {\n  return new Date(ts).toString();\n};\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(global, uri, method, body) {\n  if (!global || !global.state) return;\n\n  const { server, token } = global.state;\n\n  let https = true;\n  if (server.match(/:8080$/)) https = false;\n\n  if (!method) method = 'GET';\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ' + (global.state.orgId?'/'+global.state.orgId:'') + '/api/v1' + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(global) {\n  let imports = [];\n  try {\n    let data = await _fetch(global, '/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport function _inviteLink(inviteCode, server, orgId) {\n  return 'http'+(server.match(/:8080$/)?'':'s')+'://'+server+'/HelloVoterHQ/'+(orgId?orgId+'/':'')+'mobile/invite?inviteCode='+inviteCode+'&'+(orgId?'orgId='+orgId:'server='+server);\n}\n\nexport async function _loadQRCode(global, id) {\n  let qrcode = {};\n  try {\n    qrcode = await _fetch(\n      global,\n      '/qrcode/get?id=' + id\n    );\n    qrcode.img = await QRCode.toDataURL(_inviteLink(id, global.state.server, global.state.orgId));\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode info.');\n  }\n  return qrcode;\n}\n\nexport async function _loadQRCodes(global, id) {\n  let qrcodes = [];\n\n  try {\n    qrcodes = await _fetch(global, '/qrcode/list');\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode data.');\n  }\n\n  return qrcodes;\n}\n\nexport async function _loadVolunteer(global, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      global,\n      '/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  if (!volunteer.ass) volunteer.ass = {forms:[],teams:[],turfs:[]};\n  return volunteer;\n}\n\nexport async function _loadVolunteers(global, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(global, '/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\n\nexport async function _loadTurf(global, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      global,\n      '/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTurfs(global, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(global, '/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(global, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(global, '/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(global, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      global,\n      '/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(global, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(global, '/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(global, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      global,\n      '/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(global, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    forms = await _fetch(global, '/' + uri);\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttribute(global, id) {\n  let attribute = {};\n\n  try {\n    let data = await _fetch(global, '/attribute/get?id='+id);\n    if (data.data) attribute = data.data[0];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  return attribute;\n}\n\nexport async function _loadAttributes(global) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(global, '/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\n\nexport async function _loadAddressData(global, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(global, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  now.forEach(n => {\n    if (prior.indexOf(n) === -1) add.push(n);\n  });\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  prior.forEach(p => {\n    if (now.indexOf(p) === -1) rm.push(p);\n  });\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport const InviteSomeone = props => (\n  <div>\n    <Button onClick={() => props.refer.setState({ModalInvite: true})} color=\"primary\">\n      Invite Someone\n    </Button>\n    <Modal\n    aria-labelledby=\"simple-modal-title\"\n    aria-describedby=\"simple-modal-description\"\n    open={props.refer.state.ModalInvite ? true : false}\n    onClose={() => props.refer.setState({ ModalInvite: false })}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: 100,\n          left: 200,\n          right: 200,\n          backgroundColor: 'white',\n          padding: 40\n        }}>\n        To invite someone, have them use the HelloVoter mobile app to scan a QR Code\n        (created in the \"QR Codes\" menu) and they will recieve the same assignments\n        that QR Code has.\n      </div>\n    </Modal>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    const { global } = this.state;\n\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams global={global} refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam global={props.global} key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: add }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: rm }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { formId: add, teamId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { formId: rm, teamId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let teamn = await _loadTeam(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { turfId: add, teamId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { turfId: rm, teamId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(global, this.props.id),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'team', this.props.id),\n        _loadTurfs(global, this.props.id),\n        _loadTurfs(global),\n        _loadForms(global, this.props.id),\n        _loadForms(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull global={global} team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  _fetch,\n  _searchStringify,\n  _loadVolunteers,\n  RootLoader,\n  DialogSaving,\n  InviteSomeone,\n} from '../../common.js';\n\nimport { CardVolunteer } from './CardVolunteer'\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n    let invited = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else if (c.invited) invited.push(c);\n      else if (c.ass.ready || c.ass.teams.length) ready.push(c);\n      else unassigned.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n          <InviteSomeone refer={this} />\n\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers global={global} refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/invited\"\n              render={() => (\n                <div>\n                  <ListVolunteers\n                    global={global}\n                    refer={this}\n                    type=\"Invited\"\n                    volunteers={invited}\n                  />\n                  <Button onClick={async () => {\n                    let obj = await _fetch(\n                      global,\n                      '/volunteer/invite',\n                      'POST'\n                    );\n                    if (obj.token) {\n                      this.setState({ thisVolunteer: {id: 'invite:'+obj.token} });\n                    } else {\n                      notify_error({}, 'Invite failed.');\n                    }\n                  }} color=\"primary\">\n                    Invite Someone\n                  </Button>\n                </div>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n              <CardVolunteer\n                global={global}\n                key={props.match.params.id}\n                id={props.match.params.id}\n                edit={true}\n                refer={this}\n              />\n              </div>)}\n            />\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer global={global} key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type} Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\nimport EdiText from 'react-editext';\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadQRCode,\n  _loadQRCodes,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _inviteLink,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class QRCodes extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('qrcodesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisQRCode: {},\n      qrcodes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('qrcodesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcodes = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      qrcodes = await _loadQRCodes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load qrcodes.');\n    }\n    this.setState({ loading: false, qrcodes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let qrcodes = [];\n\n    this.state.qrcodes.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      qrcodes.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Route\n              exact={true}\n              path=\"/qrcode/\"\n              render={() => <ListQRCodes global={global} refer={this} qrcodes={qrcodes} />}\n            />\n            <Route\n              path=\"/qrcode/view/:id\"\n              render={props => (\n                <CardQRCode\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n              )}\n            />\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListQRCodes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.qrcodes.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardQRCode global={props.global} key={c.id} qrcode={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.qrcodes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}QRCodes ({props.qrcodes.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n      <Button onClick={async () => {\n        let obj = await _fetch(\n          props.global,\n          '/qrcode/create',\n          'POST'\n        );\n        if (obj && obj.id) {\n          props.refer.setState({ thisQRCode: obj});\n          props.refer._loadData();\n        } else {\n          notify_error({}, 'QRCode creation failed.');\n        }\n      }} color=\"primary\">\n        Generate QR CODE\n      </Button>\n    </div>\n  );\n};\n\nexport class CardQRCode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      qrcode: this.props.qrcode,\n      selectedTeamsOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.qrcode) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/team/add',\n          'POST',\n          { teamId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/team/remove',\n          'POST',\n          { teamId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        qrcode\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/form/add',\n          'POST',\n          { formId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/form/remove',\n          'POST',\n          { formId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/turf/add',\n          'POST',\n          { turfId: add, qId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/qrcode/turf/remove',\n          'POST',\n          { turfId: rm, qId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcode = {},\n      forms = [],\n      turf = [],\n      teams = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [qrcode, forms, turf, teams] = await Promise.all([\n        _loadQRCode(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      qrcode.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    qrcode.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    qrcode.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      qrcode,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedFormsOption,\n      selectedTurfOption,\n    });\n  };\n\n  _disableQRCode = async (qrcode, flag) => {\n    const { global } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/disable',\n        'POST',\n        { id: qrcode.id }\n      );\n      notify_success('QRCode has been disabled.');\n    } catch (e) {\n      notify_error(e, 'Unable to disable QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  };\n\n  onAutoTurfToggle = async (x,val) => {\n    const { global, qrcode } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/update',\n        'POST',\n        { id: qrcode.id, autoturf: val }\n      );\n      notify_success('QRCode has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  }\n\n  onSave = async (val) => {\n    const { global, qrcode } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcode/update',\n        'POST',\n        { id: qrcode.id, name: val }\n      );\n      notify_success('QRCode has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  }\n\n  render() {\n    const { global, qrcode } = this.state;\n\n    if (!qrcode || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <img alt=\"QR Code\" src={qrcode.img} />\n            </ListItemAvatar>\n          </ListItem>\n          <CardQRCodeFull global={global} qrcode={qrcode} refer={this} link={_inviteLink(qrcode.id, global.state.server, global.state.orgId)} onSave={this.onSave} onAutoTurfToggle={this.onAutoTurfToggle} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => {\n          this.props.refer.setState({ thisQRCode: qrcode });\n          window.location.href = \"/HelloVoterHQ/#/qrcode/view/\"+qrcode.id;\n        }}>\n        <ListItemAvatar>\n          <Icon icon={faQrcode} size={\"large\"} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={qrcode.name}\n          secondary={\"\"}\n        />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardQRCodeFull = props => (\n  <div>\n    <h1><EdiText type=\"text\" value={props.qrcode.name} onSave={props.onSave} /></h1>\n    <br />\n    <br />\n    Link to use on a mobile device: <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>{props.link}</a>\n    <br />\n    <br />\n    Last Used:{' '}\n    {(props.qrcode.last_used?new TimeAgo('en-US').format(new Date(props.qrcode.last_used-30000)):'Never')}\n    <br />\n    Number of people who've used it: {props.qrcode.num_volunteers}\n    <br />\n    <br />\n    <div>\n      Teams this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.qrcode.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.qrcode.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Auto-assign nearest turf: <Checkbox color=\"primary\" checked={(props.qrcode.autoturf?true:false)} onChange={props.onAutoTurfToggle} />\n      <br />\n      {!props.qrcode.autoturf&&\n      <div>\n      Turf this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      </div>\n      }\n    </div>\n    <br />\n    {props.qrcode.disabled&&\n    <div>This QR Code is disabled</div>\n    }\n    {!props.qrcode.disabled&&\n    <Button onClick={() => props.refer._disableQRCode(props.qrcode, false)}>\n      Disable QRCode\n    </Button>\n    }\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(global, null, true),\n      _loadForms(global),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(global, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    const { global } = this.state;\n\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(global, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport Select from 'react-select';\n\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  PlacesAutocomplete,\n} from '../../common.js';\n\nimport { CardTurf } from '../Turf';\nimport { CardForm } from '../Forms';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <Button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </Button>\n    ) : (\n      <Button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </Button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress global={global} refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      global: props.global,\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    const { global } = this.state;\n\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        global,\n        '/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <Button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardForm, FormEditor } from '.';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadForms,\n  _loadAttributes,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(global);\n      attributes = await _loadAttributes(global);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    const { global, attributes_selected } = this.state;\n\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: attributes_selected.map(a => a.id),\n      };\n\n      await _fetch(global, '/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  atupdate = props => {\n    const { attributes_selected } = props;\n    this.setState({attributes_selected});\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms global={global} forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <FormEditor onChange={this.atupdate} attributes={this.state.attributes} selected={this.state.attributes_selected} />\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm global={props.global} key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nfunction inputTypeToReadable(type) {\n  switch (type) {\n  case 'String':\n    return 'Text Input';\n  case 'TEXTBOX':\n    return 'Text Box';\n  case 'Number':\n    return 'Number';\n  case 'Boolean':\n    return 'On/Off Switch';\n  case 'SAND':\n    return 'Agree/Disagree';\n  case 'List':\n    return 'Select from List';\n  default:\n    return type;\n  }\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nexport default class FormEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n\n    this.state = {\n      onChange: props.onChange,\n      attributes: [],\n      attributes_selected: props.selected,\n    };\n\n    // any attributes not selected go in attributes\n    props.attributes.forEach(attribute => {\n      if (this.state.attributes_selected.map(a => a.id).indexOf(attribute.id) === -1) this.state.attributes.push(attribute);\n    });\n\n    this.id2List = {\n      droppable: 'attributes',\n      droppable2: 'attributes_selected',\n    };\n\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n    const { onChange } = this.state;\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const attributes = reorder(\n        this.getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n\n      let state = { attributes };\n\n      if (source.droppableId === 'droppable2') {\n        state = { attributes_selected: attributes };\n      }\n\n      this.setState(state, () => onChange(this.state));\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n\n      this.setState({\n        attributes: result.droppable,\n        attributes_selected: result.droppable2\n      }, () => onChange(this.state));\n    }\n  };\n\n  render() {\n    const { refer, attributes, attributes_selected } = this.state;\n\n    return (\n      <div style={{display: 'flex', flexDirection: 'row'}}>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <AttributeDroppable label=\"Available Attributes\" droppableId=\"droppable\" attributes={attributes} />\n          &nbsp;\n          Drag to assign\n          &nbsp;\n          <AttributeDroppable label=\"Attributes on this Form\" droppableId=\"droppable2\" attributes={attributes_selected} />\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst AttributeDroppable = props => (\n  <Droppable droppableId={props.droppableId}>\n      {(provided, snapshot) => (\n          <div\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}>\n              {props.label}\n              {props.attributes.map((item, index) => (\n                  <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}>\n                      {(provided, snapshot) => (\n                          <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={getItemStyle(\n                                  snapshot.isDragging,\n                                  provided.draggableProps.style\n                              )}>\n                              {item.label + (item.required ? ' *' : '')} :{' '}\n                              {inputTypeToReadable(item.type)}{' '}\n                          </div>\n                      )}\n                  </Draggable>\n              ))}\n              {provided.placeholder}\n          </div>\n      )}\n  </Droppable>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\nimport EdiText from 'react-editext';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardFormFull } from '.';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForm,\n  _loadVolunteers,\n  _loadTeams,\n  _loadAttributes,\n  Icon,\n} from '../../common.js';\n\nexport default class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: [],\n      attributes: [],\n      attributes_selected: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { teamId: add, formId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { teamId: rm, formId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleNameChange = async (name) => {\n    const { global } = this.state;\nconsole.warn({name})\n\n    try {\n      await _fetch(\n        global,\n        '/form/update',\n        'POST',\n        { formId: this.props.id, name: name }\n      );\n      notify_success('Form name saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to save form name.');\n    }\n  }\n\n  handleAttributeChange = async ({attributes_selected}) => {\n    const { global } = this.state;\n\n    try {\n      await _fetch(\n        global,\n        '/form/update',\n        'POST',\n        { formId: this.props.id, attributes: attributes_selected.map(a => a.id) }\n      );\n      notify_success('Attributes assignments saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove attribute.');\n    }\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      let adrm = [];\n\n      obj.add.forEach(add => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { vId: add, formId: this.props.id }\n        ));\n      });\n\n      obj.rm.forEach(rm => {\n        adrm.push(_fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { vId: rm, formId: this.props.id }\n        ));\n      });\n\n      await Promise.all(adrm);\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [],\n      attributes = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected, attributes] = await Promise.all([\n        _loadForm(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'form', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'form', this.props.id),\n        _loadAttributes(global)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      attributes,\n      attributes_selected: form.attributes.map(a => {\n        if (!a.label) a.label = a.name;\n        return a;\n      }),\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false,\n    });\n\n  };\n\n  render() {\n    const { global, form, attributes, attributes_selected } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {this.props.edit ? (\n              <EdiText type=\"text\" value={form.name} onSave={this.handleNameChange} />\n            ) :\n              form.name\n            }\n            &nbsp;\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull global={global} form={form} refer={this} attributes={attributes} selected={attributes_selected} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { FormEditor } from '.';\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <p>\n    NOTE: After any changes here, users will see these updates the next time they enter the map\n    </p>\n    <FormEditor\n      onChange={props.refer.handleAttributeChange}\n      attributes={props.attributes} selected={props.selected}\n    />\n  </div>\n);\n","import Forms from './Forms';\nimport FormEditor from './FormEditor';\nimport CardForm from './CardForm';\nimport { CardFormFull } from './CardFormFull';\n\nexport {\n  Forms,\n  FormEditor,\n  CardForm,\n  CardFormFull,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf global={props.global} key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { asyncForEach } from 'ourvoiceusa-sdk-js';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState(props);\n    this.state.global = props.global;\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState(props) {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    const { global } = this.state;\n\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        let geoData = JSON.parse(this.state.importFileData);\n        if (geoData.type === \"FeatureCollection\") {\n          geoData.features.forEach(g => {\n            if (g.properties.name) g.name = g.properties.name;\n            else if (g.properties.NAME) g.name = g.properties.NAME;\n            else g.name = g.properties.precinctid + (g.properties.subprecinc?\" \"+g.properties.subprecinc:\"\");\n            objs.push(g);\n          });\n        } else {\n          objs.push(geoData);\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      let failed = 0;\n      let success = 0;\n      await asyncForEach(objs, async (obj) => {\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (obj.name) name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        try {\n          await _fetch(global, '/turf/create', 'POST', {name, geometry});\n          success++;\n        } catch (e) {\n          failed++;\n        }\n      });\n      notify_success('Created '+success+' Turf.');\n      if (failed > 0) notify_error({success, failed}, 'Failed to create '+failed+' Turf.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf global={global} turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import { CardTurf } from './CardTurf';\nimport { CardTurfFull } from './CardTurfFull';\nimport { ListTurf } from './ListTurf';\nimport { TurfOptions } from './TurfOptions';\nimport Turf from './Turf';\n\nexport {\n  CardTurf,\n  CardTurfFull,\n  ListTurf,\n  TurfOptions,\n  Turf\n};","import { CardVolunteer } from './CardVolunteer';\nimport Volunteers from './Volunteers';\n\nexport {\n  CardVolunteer,\n  Volunteers\n};\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","import { MapSelect } from './MapSelect';\nimport PaperTable from './PaperTable';\nimport ProgressBar from './ProgressBar';\n\nexport { MapSelect, PaperTable, ProgressBar };\n"],"sourceRoot":""}