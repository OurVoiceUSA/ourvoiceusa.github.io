{"version":3,"sources":["common.js","components/About.jsx","components/Teams.jsx","components/Forms.jsx","components/Volunteers.jsx","components/Turf/CardTurfFull.jsx","components/Turf/CardTurf.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","components/Jwt.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Map.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","app.styles.js","App.jsx","serviceWorker.js","index.js"],"names":["API_BASE_URI","jobRuntime","start","end","prettyMs","notify_success","msg","NotificationManager","success","notify_error","e","mock","message","error","console","warn","_fetch","_x","_x2","_x3","_x4","_fetch2","apply","this","arguments","_callee","server","uri","method","body","https","res","regenerator_default","a","wrap","_context","prev","next","abrupt","hostname","match","fetch","headers","Authorization","jwt","Content-Type","JSON","stringify","sent","status","t0","Error","text","t1","json","stop","Icon","props","react_default","createElement","index_es","Object","assign","style","width","data-tip","icon","iconName","RootLoader","flag","CircularProgress","common_Icon","faSync","color","onClick","func","children","DialogSaving","Modal","aria-labelledby","aria-describedby","open","position","top","left","right","backgroundColor","padding","disableShrink","_searchStringify","obj","o","parse","last_seen","created","id","toLowerCase","_loadImports","_x5","_loadImports2","_callee2","refer","imports","data","_context2","state","_loadVolunteer","_x6","_x7","_loadVolunteer2","_callee3","volunteer","_context3","_loadVolunteers","_x8","_x9","_x10","_loadVolunteers2","_callee4","byType","volunteers","call","_context4","_loadTurf","_x11","_x12","_loadTurf2","_callee5","turf","_context5","_loadTurfs","_x13","_x14","_x15","_loadTurfs2","_callee6","teamId","_context6","_loadHomeTurfs","_x16","_x17","_x18","_loadHomeTurfs2","_callee7","lng","lat","_context7","_loadTeam","_x19","_x20","_loadTeam2","_callee8","team","_context8","_loadTeams","_x21","_x22","_x23","_loadTeams2","_callee9","teams","_context9","_loadForm","_x24","_x25","_loadForm2","_callee10","form","_context10","_loadForms","_x26","_x27","_loadForms2","_callee11","forms","_context11","_loadAttributes","_x28","_loadAttributes2","_callee12","_context12","_loadAddressData","_x29","_x30","_x31","_x32","_loadAddressData2","_callee13","formId","_context13","_loadPeopleAddressData","_x33","_x34","_x35","_loadPeopleAddressData2","_callee14","aId","_context14","_handleSelectChange","oldopt","newopt","add","rm","prior","map","now","ni","n","indexOf","push","pi","p","PlacesAutocomplete","react_places_autocomplete_dist_default","addressSearch","_ref","getInputProps","getSuggestionItemProps","suggestions","loading","className","suggestion","description","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","asyncToGenerator","mark","setState","cb_version","version","neo4j_version","process","height","target","rel","href","faTwitter","faFacebook","faGlobe","Component","TimeAgo","locale","en","handleClickDelete","menuDelete","handleCloseDelete","_deleteTeam","saving","window","location","_loadData","_createTeam","addTeamForm","getValue","name","search","assertThisInitialized","handlePageClick","pageNum","selected","perPage","localStorage","getItem","formServerItems","t","struct","String","formServerOptions","fields","label","onTypeSearch","bind","handlePageNumChange","setItem","value","event","_this2","list","forEach","includes","react_router_dom","react_router","exact","path","render","common_RootLoader","type","onChange","Teams_ListTeams","main_default","Form","ref","options","onChangeTeam","Teams_CardTeam","key","params","edit","Button","Dialog","onClose","DialogTitle","DialogActions","autoFocus","common_DialogSaving","ListTeams","paginate","idx","Math","floor","display","react_paginate_dist_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","react_select_browser_esm","to","CardTeam","_Component2","_this3","handleMembersChange","_ref5","selectedMembersOption","i","_i","keys","done","vId","t2","t3","t4","handleFormsChange","_ref6","selectedFormsOption","_i2","teamn","handleTurfChange","_ref7","selectedTurfOption","_i3","turfId","members","turfSelected","turfs","formSelected","_ref9","_ref10","memberOptions","formOptions","turfOptions","Promise","all","slicedToArray","c","Volunteers_CardVolunteer","CardTurf_CardTurf","f","Forms_CardForm","inherits","createClass","flex","overflow","faUsers","Teams_CardTeamFull","CardTeamFull","isMulti","isSearchable","placeholder","FTYPE","enums","TEXTBOX","Number","Boolean","SAND","addItem","Forms","attributes","optional","values","_deleteForm","_ref2","_createForm","formName","addFormForm","trim","order","mainForm","customForm","customFormItems","_this$state","splice","forceUpdate","Forms_ListForms","onChangeForm","field","marginLeft","required","inputTypeToReadable","faTimesCircle","margin","ListForms","CardForm","handleTeamsChange","selectedTeamsOption","teamsSelected","_ref8","teamOptions","membersOption","faClipboard","Forms_CardFormFull","CardFormFull","Volunteers","thisVolunteer","ready","unassigned","denied","locked","ass","Volunteers_ListVolunteers","ListVolunteers","List","component","CardVolunteer","handleLeaderChange","_ref3","selectedLeaderOption","_ref4","_i4","hometurf","leaderOptions","x","y","faHome","leader","direct","autoturf","_lockVolunteer","term","ReactTooltip","rebuild","_this4","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","avatar","ListItemText","primary","secondary","locationstr","extract_addr","Volunteers_VolunteerBadges","Volunteers_CardVolunteerFull","button","CardVolunteerFull","format","Date","email","phone","Volunteers_VolunteerAddress","filter","VolunteerAddress","_Component3","_this5","submitAddress","address","pos","geocodeByAddress","getLatLng","onTypeAddress","_this6","common_PlacesAutocomplete","debounce","onSelect","VolunteerBadges","badges","admin","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","arr","split","shift","join","CardTurfFull","stats","CardTurf","_Component","faStreetView","CardTurfFull_CardTurfFull","ListTurf","TurfOptions","_getPrototypeOf2","_len","args","Array","_key","concat","handleStateChange","selectedStateOption","typeOptions","us_states","sldu","sldl","selectedDrawOption","stateOptions","k","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","accept","handleImportFiles","files","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","result","readAsText","_deleteTurf","_createTurf","objs","_res","_obj","geometry","addTurfForm","circleToPolygon","urlFromDist","t5","t6","t7","t8","dist","val","replace","initState","thisTurf","drawOptions","ListTurf_ListTurf","onChangeTurf","TurfOptions_TurfOptions","_showSubmitButton","renderLabelContent","percent","midAngle","transform","textAnchor","toFixed","_init","attributeOptions","doQuery","data_breakdown","selectedAttributeOption","include_null","d","pop","handleAttributeChange","animation","Checkbox","checked","es6","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","index","fill","CardDashboard","sortableElement","faShieldAlt","stat","Cards","sortableContainer","dash","item","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","admins","noAdmins","vol","faUser","faMap","ques","questions","faChartPie","number_format_default","addresses","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","axis","getUserProp","MapSelect","_React$Component","map1","map2","_handleCheck","_this$props","updateFormats","_setValue","_this$props2","_setMapValue","prop","_this$props3","defineProperty","_renderCheckbox","_renderMapOptions","_ref2$map","_ref2$map2","Fragment","_this$props4","_this$props4$label","_this$props4$options","_this$props4$checkbox","checkbox","_this$props4$dimensio","dimensions","labelWidth","React","specVal","row","spec","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","classes","theme","root","IconButton","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","withStyles","flexShrink","palette","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","rows","emptyRows","min","Paper","tableWrapper","Table","table","TableHead","TableRow","Tooltip","title","tooltip","TableCell","header","TableBody","slice","s","funcItemTooltip","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","completed","Check","LinearProgress","paddingTop","variant","_pipe","g","pipe","fns","reduce","PAPER_TABLE_SPEC","num","formatNumber","fractionDigits","ImportMap","formats","mapped","formatHeaders","objectSpread","updateMapped","mapData","getMapped","_assertThisInitialize","generateFormats","getAllIndexes","parseData","isArray","indexes","findIndex","total","_this$updateFormats","_this$props$fields","_this$state$headers","MapSelect_MapSelect","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","PreviewItem_PreviewItem","record","defaultState","sending","submitting","ImportData","preProcess","filename","sendData","seps","sepm","sepr","percentage","RegExp","setTimeout","_resetState","_this$state2","_this$state2$mapped","_this$state2$data","_this$state2$headers","Elements_ProgressBar","faFileCsv","size","ImportMap_ImportMap","Divider","Button_default","ImportPreview_ImportPreview","react_csv_reader_default","onError","preProcessError","onFileLoaded","Elements_PaperTable","tsToStr","ts","toString","jobStatus","job","started","showErrorIfError","taskObjFromQueue","Queue","r","q","token","pathname","decode","LogIn","dev","main","CssBaseline","paper","LockOutlined_default","Typography","onSubmit","preventDefault","doSave","FormControl","fullWidth","InputLabel","htmlFor","Input","autoComplete","defaultValue","qserver","FormControlLabel","control","submit","role","marginRight","breakpoints","up","flexDirection","LogoutDialog","menuLogout","handleCloseLogout","_logout","loadMarkerData","onMarkerClick","marker","place","showingInfoWindow","selectedPlace","activeMarker","onTurfClick","log","infoLocation","paths","activeTurf","mapProps","longitude","latitude","center","onMapClicked","visits","polygons","isGeolocationAvailable","isGeolocationEnabled","coords","access","geojson2polygons","polygon","google_maps_react_dist","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","Map_ModalMarker","ModalMarker","people","units","Map_ModalPerson","person","ModalPerson","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Header","handleDrawerOpen","AppBar","classNames","appBar","appBarShift","Toolbar","disableGutters","toolbar","menuButton","menuButtonHidden","Menu_default","noWrap","MenuItems","handleClickLogout","react","ListItemIcon","icons_Dashboard_default","Person_default","People_default","Map_default","Assignment_default","Navigation_default","PresentToAll_default","Work_default","BarChart_default","IndeterminateCheckBox_default","AccountBalance_default","Help_default","Sidebar","handleDrawerClose","Drawer","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Header_MenuItems","NoMatch","Routes","google_maps_key","components_Dashboard","Volunteers_Volunteers","Teams_App","Turf_App","Forms_Forms","Map","ImportData_ImportData","Queue_Queue","Analytics_App","Settings_App","Jwt_App","About_App","styles","paddingRight","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","whiteSpace","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","_loadKeys","aScript","document","head","appendChild","connectForm","removeItem","singHello","sm_oauth_url","sm","get","dbx","user","v","queryString","dist_default","components_Header_Header","Header_Sidebar","lib","routes_Routes","components_LogoutDialog","Login","ReactDOM","src_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc6dd3bb.chunk.js","sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport const API_BASE_URI = '/HelloVoterHQ/api/v1';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  if (e && e.mock) msg = e.message;\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(server, uri, method, body) {\n  if (!server) return;\n\n  let https = true;\n  if (server.hostname.match(/^localhost/)) https = false;\n\n  if (!method) method = 'GET';\n\n  if (!server.hostname) {\n    notify_error({}, 'API server definition error.');\n    return;\n  }\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server.hostname + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + server.jwt,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(refer) {\n  let imports = [];\n  try {\n    let data = await _fetch(refer.state.server, API_BASE_URI+'/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport async function _loadVolunteer(refer, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(refer, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\nexport async function _loadTurf(refer, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf.data[0];\n}\n\nexport async function _loadTurfs(refer, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadHomeTurfs(refer, lng, lat) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/turf/list/byposition?longitude='+lng+'&latitude='+lat);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(refer, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(refer, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(refer, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      refer.state.server,\n      API_BASE_URI+'/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(refer, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/' + uri);\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttributes(refer) {\n  let forms = [];\n\n  try {\n    let data = await _fetch(refer.props.server, API_BASE_URI+'/attribute/list');\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAddressData(refer, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(refer.props.server, API_BASE_URI+'/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(refer, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(refer.props.server, API_BASE_URI+'/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  }\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  }\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cb_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let data = {};\n    try {\n      data = await _fetch(this.props.server, API_BASE_URI+'/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      cb_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {this.state.cb_version ? (\n            'HelloVoterAPI version ' + this.state.cb_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {this.state.neo4j_version ? (\n            'Neo4j version ' + this.state.neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          &copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: obj.add[i] }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: obj.rm[i] }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { formId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { formId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(this, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { turfId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { turfId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(this, this.props.id),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'team', this.props.id),\n        _loadTurfs(this.props.refer, this.props.id),\n        _loadTurfs(this.props.refer),\n        _loadForms(this.props.refer, this.props.id),\n        _loadForms(this.props.refer),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  faTimesCircle,\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.jsx';\nimport { CardTeam } from './Teams.jsx';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForms,\n  _loadForm,\n  _loadAttributes,\n  _loadVolunteers,\n  _loadTeams,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nconst FTYPE = t.enums(\n  {\n    String: 'Text Input',\n    TEXTBOX: 'Large Text Box',\n    Number: 'Number',\n    Boolean: 'On/Off Switch',\n    SAND: 'Agree/Disagree'\n    //  'List': 'Select from List',\n  },\n  'FTYPE'\n);\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE\n};\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      name: t.String\n    });\n\n    this.state = {\n      loading: true,\n      forms: [],\n      attributes: [],\n      fields: fields,\n      order: order,\n      customForm: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n    case 'String':\n      return 'Text Input';\n    case 'TEXTBOX':\n      return 'Text Box';\n    case 'Number':\n      return 'Number';\n    case 'Boolean':\n      return 'On/Off Switch';\n    case 'SAND':\n      return 'Agree/Disagree';\n    case 'List':\n      return 'Select from List';\n    default:\n      return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({ fields, order });\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(this);\n      attributes = await _loadAttributes(this);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n        //if (a.values) fields[a.id].options =\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: Object.keys(this.state.fields),\n      };\n\n      await _fetch(this.props.server, API_BASE_URI+'/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  render() {\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                {Object.keys(this.state.fields).map(f => {\n                  let field = this.state.fields[f];\n                  return (\n                    <li key={f} style={{ marginLeft: 25 }}>\n                      {field.label + (field.required ? ' *' : '')} :{' '}\n                      {this.inputTypeToReadable(field.type)}{' '}\n                      <Icon icon={faTimesCircle} color=\"red\" />\n                    </li>\n                  );\n                })}\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'form', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'form', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { form } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull form={form} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteers,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadHomeTurfs,\n  RootLoader,\n  Icon,\n  PlacesAutocomplete,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class Volunteers extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else {\n        if (c.ass.ready || c.ass.teams.length) ready.push(c);\n        else unassigned.push(c);\n      }\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n                <CardVolunteer\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisVolunteer.id ? true : false}\n              onClose={() => this.setState({ thisVolunteer: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardVolunteer\n                  key={this.state.thisVolunteer.id}\n                  id={this.state.thisVolunteer.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/add',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/remove',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/promote',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/team/members/demote',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/add',\n          'POST',\n          { formId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/form/assigned/volunteer/remove',\n          'POST',\n          { formId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(this, this.props.id),\n        _loadForms(this.props.refer),\n        _loadTurfs(this.props.refer),\n        _loadTeams(this.props.refer)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location)\n      hometurf = await _loadHomeTurfs(this.props.refer, volunteer.location.x, volunteer.location.y);\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n      {\n        value: 'auto',\n        id: 'auto',\n        label: (\n          <CardTurf\n            key=\"auto\"\n            turf={{\n              id: 'auto',\n              name: 'Area surrounnding this volunteer\\'s home address'\n            }}\n            refer={this}\n            icon={faHome}\n          />\n        )\n      }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        this.state.server,\n        API_BASE_URI+'/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisVolunteer: volunteer })}\n      >\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </button>\n    ) : (\n      <button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    Turf this volunteer's home address is in:\n    {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        this.props.refer.state.server,\n        API_BASE_URI+'/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      <pre>\n      {JSON.stringify(props.refer.state.turf.stats, null, 2)}\n      </pre>\n      <br />\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          this.state.server,\n          API_BASE_URI+'/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'turf', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState();\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState() {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(this.props.server, API_BASE_URI+'/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(this.props.server, API_BASE_URI+'/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(this);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(this);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = API_BASE_URI+'/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(this.props.server, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error,\n  RootLoader\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,ques,addr,dbsz').split(',');\n\n    this.state = {\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(this.props.server, API_BASE_URI+'/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        ques: {\n          name: 'Questions',\n          stat: data.questions,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {this.props.refer.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  API_BASE_URI,\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n  componentDidMount() {\n    this._loadData();\n  }\n\n  state = {\n    server: this.props.server,\n    imports: [],\n    ...defaultState,\n  };\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(this.props.server, API_BASE_URI+'/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(this.props.server, API_BASE_URI+'/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(this.props.server, API_BASE_URI+'/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(this);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst tsToStr = ts => {\n  return new Date(ts).toString();\n};\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      server: this.props.server,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(this.state.server, API_BASE_URI+'/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router';\nimport jwt from 'jsonwebtoken';\nimport {notify_error} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let token;\n\n    try {\n      token = this.props.location.pathname.split('/').pop();\n      jwt.decode(token);\n      this.props.refer._loadData(token);\n    } catch (e) {\n      notify_error(e, 'Unable to extract jwt from URI');\n      token = 'error';\n    }\n\n    this.state = {token: token};\n  }\n\n  render() {\n    if (this.state.token === 'error') return (<div>There was an error parsing the jwt</div>);\n\n    return (\n      <Route render={() => (\n        <Redirect to=\"/\" />\n      )} />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nclass LogIn extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); this.props.refer.doSave(e, this.state.target); }} >\n            {(process.env.NODE_ENV === 'development')?\n              <FormControlLabel\n                control={<Checkbox id=\"dev\" name=\"dev\" value=\"dev\" color=\"primary\" checked={this.state.dev} onChange={(e, c) => this.setState({dev: c})} />}\n                label=\"DEVELOPMENT MODE\"\n              />\n              :''}\n              <div>\n                {this.state.dev?\n                ''\n                :\n                <div>\n                  <FormControl margin=\"normal\" required fullWidth>\n                    <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n                    <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={this.state.qserver} />\n                  </FormControl>\n                  <FormControlLabel\n                    control={<Checkbox value=\"ack\" color=\"primary\" required />}\n                    label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n                  />\n                </div>\n                }\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => this.setState({target: 'google'})}\n                >\n                  Google Sign In\n                </Button>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => this.setState({target: 'facebook'})}\n                  className={classes.submit}\n                >\n                  Facebook Sign In\n                </Button>\n              </div>\n          </form>\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(LogIn);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(this, null, true),\n      _loadForms(this),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(this, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(this, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  server,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ @ {server.hostname}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n        onClick={() =>\n          (window.location.href =\n            '/HelloVoterHQ/#/volunteers/view/' + getUserProp('id'))\n        }\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      <Link to={'/map/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <NavigationIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Map\" />\n        </ListItem>\n      </Link>\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/tree/mast\n  er/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Jwt,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ server, refer, google_maps_key }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard server={server} refer={refer} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers server={server} />} />\n    <Route path=\"/teams/\" render={() => <Teams server={server} />} />\n    <Route path=\"/turf/\" render={() => <Turf server={server} />} />\n    <Route path=\"/forms/\" render={() => <Forms server={server} />} />\n    <Route\n      path=\"/map/\"\n      render={() => <Map server={server} apiKey={google_maps_key} />}\n    />\n    <Route path=\"/import/\" render={() => <ImportData server={server} />} />\n    <Route path=\"/queue/\" render={() => <Queue server={server} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics server={server} />} />\n    <Route path=\"/settings/\" render={() => <Settings server={server} />} />\n    <Route path=\"/jwt/\" render={props => <Jwt {...props} refer={refer} />} />\n    <Route path=\"/about/\" render={() => <About server={server} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  avatar: {\n    margin: 10\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  API_BASE_URI,\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      open: true,\n      menuLogout: false,\n      server: {},\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async jwt => {\n    let mock = false;\n\n    if (jwt) localStorage.setItem('jwt', jwt);\n    else jwt = localStorage.getItem('jwt');\n\n    let hostname = localStorage.getItem('server');\n    if (hostname === 'npm start') mock = true;\n\n    this.setState({\n      server: {\n        hostname: hostname,\n        jwt: jwt,\n        mock: mock,\n      }\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n\n    let data = await _fetch(this.state.server, API_BASE_URI+'/google_maps_key');\n\n    // load google places API\n    var aScript = document.createElement('script');\n    aScript.type = 'text/javascript';\n    aScript.src =\n      'https://maps.googleapis.com/maps/api/js?key=' +\n      data.google_maps_key +\n      '&libraries=places';\n    document.head.appendChild(aScript);\n\n    this.setState({ google_maps_key: data.google_maps_key });\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.server.jwt) return null;\n\n    try {\n      item = jwt.decode(this.state.server.jwt)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.removeItem('server');\n    localStorage.removeItem('jwt');\n    this.setState({ menuLogout: false, server: {} });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n\n    if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = 'localhost:8080';\n    }\n    await this.singHello(server, target);\n  };\n\n  singHello = async (server, target) => {\n    let res;\n\n    localStorage.setItem('server', server);\n\n    let https = true;\n    if (server.match(/^localhost/)) https = false;\n\n    try {\n      res = await fetch('http'+(https?'s':'')+'://' + server + API_BASE_URI+'/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (this.state.server.jwt ? this.state.server.jwt : 'of the one ring'),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ server: server, dbx: null, user: this.state.user });\n        return { error: false, flag: true };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { server } = this.state;\n\n    if (!server.hostname) return <Login refer={this} />;\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            server={server}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes\n              server={server}\n              refer={this}\n              google_maps_key={this.state.google_maps_key}\n            />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}