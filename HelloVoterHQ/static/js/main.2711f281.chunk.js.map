{"version":3,"sources":["components/Login.js","common.js","components/Dashboard.js","components/Forms.js","components/Teams.js","components/Turf.js","components/Volunteers.js","components/Map.js","components/ImportData.js","components/Analytics.js","components/Settings.js","components/Jwt.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["LogIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mock","process","user","classes","_this2","react_default","a","createElement","className","main","CssBaseline_default","Paper_default","paper","Avatar_default","avatar","LockOutlined_default","Typography_default","component","variant","form","onSubmit","e","preventDefault","refer","doSave","Login_ServerLiveOrMocked","qserver","Button_default","type","fullWidth","color","submit","role","aria-label","Component","ServerLiveOrMocked","react_select_esm","options","value","id","name","label","placeholder","onChange","obj","setState","FormControl_default","margin","required","InputLabel_default","htmlFor","Input_default","autoComplete","autoFocus","defaultValue","FormControlLabel_default","control","Checkbox_default","withStyles","theme","defineProperty","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","marginTop","flexDirection","alignItems","padding","concat","backgroundColor","palette","secondary","notify_success","msg","NotificationManager","success","notify_error","error","console","warn","_fetch","_x","_x2","_x3","_x4","_fetch2","apply","arguments","_callee","server","uri","method","body","res","regenerator_default","wrap","_context","prev","next","hostname","abrupt","fetch","headers","Authorization","jwt","Content-Type","JSON","stringify","sent","status","t0","Error","text","t1","stop","Icon","react_fontawesome_index_es","assign","style","data-tip","icon","iconName","RootLoader","flag","CircularProgress_default","common_Icon","faSync","onClick","func","children","DialogSaving","Modal_default","aria-labelledby","aria-describedby","open","position","top","left","right","disableShrink","_searchStringify","o","parse","last_seen","toLowerCase","_loadVolunteer","_x5","_x6","_loadVolunteer2","_callee2","volunteer","_context2","json","_loadVolunteers","_x7","_x8","_x9","_loadVolunteers2","_callee3","byType","volunteers","_context3","_loadTurf","_x10","_x11","_loadTurf2","_callee4","turf","_context4","data","_loadTurfs","_x12","_x13","_x14","_loadTurfs2","_callee5","teamId","_context5","_loadTeam","_x15","_x16","_loadTeam2","_callee6","team","_context6","_loadTeams","_x17","_x18","_x19","_loadTeams2","_callee7","teams","_context7","_loadForm","_x20","_x21","_loadForm2","_callee8","_context8","_loadForms","_x22","_x23","_loadForms2","_callee9","forms","_context9","_loadAddresses","_x24","_loadAddresses2","_callee10","addresses","_context10","nodes","_handleSelectChange","oldopt","newopt","add","rm","prior","map","now","ni","n","indexOf","push","pi","p","PlacesAutocomplete","react_places_autocomplete_dist_default","addressSearch","_ref","getInputProps","getSuggestionItemProps","suggestions","loading","suggestion","description","App","_loadData","asyncToGenerator","mark","common_RootLoader","Dashboard_CardDashboard","stat","faUser","faUsers","turfs","faMap","faClipboard","questions","faChartPie","number_format_default","displayType","thousandSeparator","faMapMarkerAlt","filesize","dbsize","round","faDatabase","CardDashboard","height","faShieldAlt","flex","overflow","Modal","setAppElement","document","getElementById","customStyles","content","bottom","transform","FTYPE","t","enums","String","TEXTBOX","Number","Boolean","SAND","addItem","key","fields","help","premade","FullName","optional","Phone","Email","RegisteredToVote","PartyAffiliation","handleClickDelete","menuDelete","handleCloseDelete","handlePageClick","pageNum","selected","assertThisInitialized","_deleteForm","_ref2","saving","formId","window","location","href","_createForm","formName","addFormForm","getValue","trim","match","length","questions_order","order","perPage","localStorage","getItem","keys","mainForm","struct","customForm","search","formServerItems","customFormItems","formServerOptions","bind","openModal","closeModal","doAddCustom","onTypeSearch","handlePageNumChange","setItem","event","target","_this$state","ref","_this$state2","f","splice","forceUpdate","list","forEach","includes","HashRouter","Route","exact","path","render","Forms_ListForms","main_default","Form","onChangeForm","faPlusCircle","field","inputTypeToReadable","faTimesCircle","react_modal_lib_default","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","Forms_CardForm","params","edit","Dialog_default","onClose","DialogTitle_default","DialogActions_default","common_DialogSaving","ListForms","paginate","idx","Math","floor","react_paginate_dist_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","Link","to","CardForm","_Component2","_this3","handleTeamsChange","_ref6","selectedTeamsOption","i","_i","done","t2","t3","t4","handleMembersChange","_ref7","selectedMembersOption","_i2","cId","members","teamsSelected","_ref9","_ref10","teamOptions","membersOption","Promise","all","slicedToArray","Teams_CardTeam","c","Volunteers_CardVolunteer","inherits","createClass","Forms_CardFormFull","CardFormFull","isMulti","isSearchable","TimeAgo","locale","en","_deleteTeam","_createTeam","addTeamForm","Teams_ListTeams","onChangeTeam","ListTeams","CardTeam","_ref5","handleFormsChange","selectedFormsOption","teamn","handleTurfChange","selectedTurfOption","_i3","turfId","turfSelected","formSelected","memberOptions","formOptions","turfOptions","Turf_CardTurf","Teams_CardTeamFull","CardTeamFull","submitAddress","address","pos","geocodeByAddress","getLatLng","addressCoords","handleDrawChange","selectedDrawOption","selectedStateOption","selectedTypeOption","selectedDistrictOption","importFileData","handleStateChange","handleTypeChange","handleDistrictChange","handleImportFiles","files","reader","FileReader","onload","result","readAsText","_deleteTurf","_createTurf","objs","_res","_obj","geometry","addTurfForm","circleToPolygon","lng","lat","districtOptions","urlFromDist","t5","t6","t7","t8","selectedTypeFetch","dist","val","replace","initState","onTypeAddress","thisTurf","_showDistrictOption","drawOptions","Turf_ListTurf","onChangeTurf","Turf_TurfOptions","_showSubmitButton","ListTurf","TurfOptions","stateOptions","us_states","k","onMenuClose","accept","common_PlacesAutocomplete","debounce","onSelect","rel","CardTurf","_ref8","_ref11","faStreetView","Turf_CardTurfFull","CardTurfFull","thisVolunteer","ready","unassigned","denied","locked","ass","Volunteers_ListVolunteers","ListVolunteers","List_default","CardVolunteer","handleLeaderChange","_ref3","selectedLeaderOption","_ref4","leaderOptions","faHome","teamperms","leader","autoturf","_lockVolunteer","term","ReactTooltip","rebuild","_this4","ListItem_default","ListItemAvatar_default","alt","src","ListItemText_default","primary","homeaddress","extract_addr","Volunteers_VolunteerBadges","Volunteers_CardVolunteerFull","button","CardVolunteerFull","format","Date","email","phone","Volunteers_VolunteerAddress","direct","VolunteerAddress","_Component3","_this5","_this6","VolunteerBadges","badges","admin","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","arr","split","shift","join","_Component","d","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","polygons","isGeolocationAvailable","isGeolocationEnabled","coords","access","longitude","latitude","geojson2polygons","google_maps_react_dist","google","zoom","center","title","latlng","paths","strokeColor","strokeWeight","fillColor","fillOpacity","visible","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","address1","address2","city","zip","preProcess","pop","onHeadersSubmit","evt","setTimeout","faFileCsv","size","checked","react_csv_reader_default","onError","preProcessError","onFileLoaded","data01","v","data02","renderLabelContent","percent","x","y","midAngle","textAnchor","toFixed","animation","PieChart","Legend","Pie","dataKey","cx","cy","startAngle","endAngle","outerRadius","entry","index","Cell","fill","Label","LabelList","innerRadius","paddingAngle","isAnimationActive","token","pathname","decode","es_Route","Redirect","componentDidMount","cb_version","version","faTwitter","faFacebook","faGlobe","_loadKeys","aScript","google_maps_key","head","appendChild","handleClickLogout","menuLogout","handleCloseLogout","sign","singHello","sm_oauth_url","get","dbx","handleDrawerOpen","handleDrawerClose","queryString","log","connectForm","prop","item","removeItem","root","dist_default","AppBar_default","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","menuButton","menuButtonHidden","Menu_default","noWrap","getUserProp","Drawer_default","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","ListItemIcon_default","Dashboard_default","Person_default","People_default","Map_default","Assignment_default","Navigation_default","PresentToAll_default","BarChart_default","Settings_default","IndeterminateCheckBox_default","AccountBalance_default","Help_default","appBarSpacer","lib","Switch","Dashboard_App","Volunteers_App","Teams_App","Turf_App","Forms_App","Map","ImportData_App","Analytics_App","Settings_App","Jwt_App","About_App","NoMatch","_logout","Login","paddingRight","objectSpread","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","flexGrow","whiteSpace","overflowX","chartContainer","tableContainer","h5","marginBottom","ReactDOM","src_App","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.2711f281.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nclass LogIn extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mock: (process.env.NODE_ENV === 'development'), // default to true if development\n      user: null,\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); this.props.refer.doSave(e, this.state.user); }} >\n            {(process.env.NODE_ENV === 'development')?\n            <FormControlLabel\n              control={<Checkbox id=\"mock\" name=\"mock\" value=\"mock\" color=\"primary\" checked={this.state.mock} onChange={(e, c) => this.setState({mock: c})} />}\n              label=\"DEVELOPMENT MODE\"\n            />\n            :\"\"}\n            <ServerLiveOrMocked mock={this.state.mock} refer={this} qserver={this.props.refer.state.qserver} />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign in\n            </Button>\n          </form>\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nconst ServerLiveOrMocked = (props) => {\n\n  if (props.mock) return (\n    <Select\n      options={[\n        {value: {\"id\": \"test:admin\", \"name\": \"Administrator\", \"avatar\": \"https://cdn0.iconfinder.com/data/icons/viking-2/500/viking_4-512.png\"}, label: \"Administrator\"},\n        {value: {\"id\": \"test:regionleader\", \"name\": \"Team A Leader\", \"avatar\": \"https://cdn.iconscout.com/icon/premium/png-256-thumb/thor-3-159482.png\"}, label: \"Region Leader\"},\n        {value: {\"id\": \"test:teamaleader\", \"name\": \"Team A Leader\", \"avatar\": \"https://cdn.iconscout.com/icon/premium/png-256-thumb/thor-3-159482.png\"}, label: \"Team A Leader\"},\n        {value: {\"id\": \"test:teambleader\", \"name\": \"Team B Leader\", \"avatar\": \"https://cdn.iconscout.com/icon/premium/png-256-thumb/thor-3-159482.png\"}, label: \"Team B Leader\"},\n        {value: {\"id\": \"test:teamamember\", \"name\": \"Team A Member\", \"avatar\": \"https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/chess_piece_rook.png\"}, label: \"Team A Member\"},\n        {value: {\"id\": \"test:teambmember\", \"name\": \"Team B Member\", \"avatar\": \"https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/chess_piece_rook.png\"}, label: \"Team B Member\"},\n        {value: {\"id\": \"test:solo\", \"name\": \"Team C Member\", \"avatar\": \"http://comic-cons.xyz/wp-content/uploads/Star-Wars-avatars-Movie-Han-Solo-Harrison-Ford.jpg\"}, label: \"Solo Volunteer\"},\n      ]}\n      placeholder=\"Choose a user to mock\"\n      onChange={(obj) => props.refer.setState({user: obj.value})}\n    />\n  );\n\n  return (\n    <div>\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n        <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.qserver} />\n      </FormControl>\n      <FormControlLabel\n        control={<Checkbox value=\"ack\" color=\"primary\" required />}\n        label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n      />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(LogIn);\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport {NotificationManager} from 'react-notifications';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(server, uri, method, body) {\n  if (!method) method = 'GET';\n\n  if (!server.hostname) {\n    notify_error({}, \"API server definition error.\");\n    return;\n  }\n\n  if (server.mock) {\n    throw \"MOCKED\";\n  }\n\n  let res = await fetch('https://'+server.hostname+uri, {\n    method: method,\n    headers: {\n      'Authorization': 'Bearer '+server.jwt,\n      'Content-Type': 'application/json',\n    },\n    body: (body?JSON.stringify(body):null),\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res;\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled) return {access: false};\n  if (props.coords) return {access: true, lng: props.coords.longitude, lat: props.coords.latitude};\n  return {access: true};\n}\n\nexport const Icon = (props) => (\n  <FontAwesomeIcon style={{width: 25}} data-tip={(props['data-tip']?props['data-tip']:props.icon.iconName)} {...props} />\n)\n\nexport const RootLoader = (props) => {\n  if (props.flag) return (<CircularProgress />);\n  else return (\n    <div>\n      <Icon icon={faSync} color=\"green\" onClick={props.func} data-tip=\"Reload Data\" />\n      <div>{props.children}</div>\n    </div>\n  );\n}\n\nexport const DialogSaving = (props) => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div style={{\n          position: 'absolute',\n          top: 100, left: '40%', right: '40%',\n          backgroundColor: 'white',\n          padding: 40,\n        }}>\n        <center>\n          Saving changes...<br /><br />\n          <CircularProgress disableShrink />\n        </center>\n        </div>\n      </Modal>\n    );\n  return (<div />);\n}\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadVolunteer(refer, id) {\n  let volunteer = {};\n  try {\n    let res = await _fetch(refer.state.server, '/volunteer/v1/volunteer/get?id='+id);\n    volunteer = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load volunteer info.\");\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(refer, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId='+id;\n    else if (byType === 'turf') call = 'turf/assigned/volunteer/list?turfId='+id;\n    else if (byType === 'form') call = 'form/assigned/volunteer/list?formId='+id;\n\n    let res = await _fetch(refer.props.server, '/volunteer/v1/'+call);\n    volunteers = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load volunteer data.\");\n  }\n\n  return volunteers;\n}\n\nexport async function _loadTurf(refer, id) {\n  let turf = {};\n\n  try {\n    let res = await _fetch(refer.state.server, '/volunteer/v1/turf/get?turfId='+id);\n    turf = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load turf data.\");\n  }\n\n  return turf.data[0];\n}\n\nexport async function _loadTurfs(refer, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list'+(flag?'?geometry=true':'');\n    if (teamId) call = 'team/turf/list?teamId='+teamId+(flag?'&geometry=true':'');\n    let res = await _fetch(refer.props.server, '/volunteer/v1/'+call);\n    let data = await res.json();\n    turf = (data.data?data.data:[]);\n  } catch (e) {\n    notify_error(e, \"Unable to load turf data.\");\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(refer, id) {\n  let team = {};\n\n  try {\n    let res = await _fetch(refer.state.server, '/volunteer/v1/team/get?teamId='+id);\n    team = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load team data.\");\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(refer, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId='+id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId='+id\n\n    let res = await _fetch(refer.props.server, '/volunteer/v1/'+call);\n    let data = await res.json();\n    teams = (data.data?data.data:[]);\n  } catch (e) {\n    notify_error(e, \"Unable to load teams data.\");\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(refer, id) {\n  let form = {};\n\n  try {\n    let res = await _fetch(refer.state.server, '/volunteer/v1/form/get?formId='+id);\n    form = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load form data.\");\n  }\n\n  return form;\n}\n\nexport async function _loadForms(refer, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId='+teamId;\n    else uri = 'form/list';\n\n    let res = await _fetch(refer.props.server, '/volunteer/v1/'+uri);\n    let data = await res.json();\n    forms = (data.data?data.data:[]);\n  } catch (e) {\n    notify_error(e, \"Unable to load form data.\");\n  }\n\n  return forms;\n}\n\nexport async function _loadAddresses(refer) {\n  let addresses = {};\n  try {\n    let res = await _fetch(refer.props.server, '/volunteer/v1/sync', 'POST', {nodes: {}});\n    addresses = await res.json();\n  } catch (e) {\n    notify_error(e, \"Unable to load address information.\");\n  }\n  return addresses;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  let prior = oldopt.map((e) => {\n    return e.id;\n  });\n\n  let now = newopt.map((e) => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  };\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  };\n\n  return {add: add, rm: rm};\n}\n\nexport const PlacesAutocomplete = (props) => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n)\n\nconst addressSearch = ({ getInputProps, getSuggestionItemProps, suggestions, loading }) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport { faShieldAlt, faUser, faUsers, faMap, faClipboard, faChartPie, faMapMarkerAlt, faDatabase } from '@fortawesome/free-solid-svg-icons';\n\nimport { _fetch, notify_error, RootLoader, Icon } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      data: {},\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let data = {};\n\n    this.setState({loading: true})\n\n    try {\n      let res = await _fetch(this.props.server, '/volunteer/v1/dashboard');\n\n      data = await res.json();\n    } catch (e) {\n      notify_error(e, \"Unable to load dashboard info.\");\n    }\n\n    this.setState({data: data, loading: false});\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <CardDashboard name=\"Volunteers\" stat={this.state.data.volunteers} icon={faUser} />\n        <CardDashboard name=\"Teams\" stat={this.state.data.teams} icon={faUsers} />\n        <CardDashboard name=\"Turf\" stat={this.state.data.turfs} icon={faMap} />\n        <CardDashboard name=\"Forms\" stat={this.state.data.forms} icon={faClipboard} />\n        <CardDashboard name=\"Questions\" stat={this.state.data.questions} icon={faChartPie} />\n        <CardDashboard name=\"Addresses\" stat={(<NumberFormat value={this.state.data.addresses} displayType={'text'} thousandSeparator={true} />)} icon={faMapMarkerAlt} />\n        <CardDashboard name=\"Database size\" stat={filesize((this.state.data.dbsize?this.state.data.dbsize:0), {round: 1})} icon={faDatabase} />\n      </RootLoader>\n    );\n  }\n}\n\nconst CardDashboard = (props) => (\n  <div style={{display: 'flex', padding: '10px'}}>\n    <div style={{padding: '5px 10px'}}>\n      <Icon style={{width: 50, height: 50, color: \"gray\"}} icon={(props.icon?props.icon:faShieldAlt)} />\n    </div>\n    <div style={{flex: 1, overflow: 'auto'}}>\n      <h3>{props.name}: {props.stat}</h3>\n    </div>\n  </div>\n)\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport Modal from 'react-modal';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { faTimesCircle, faPlusCircle, faClipboard } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.js';\nimport { CardTeam } from './Teams.js';\n\nimport {\n  _fetch, notify_error, notify_success, _handleSelectChange, _searchStringify,\n  _loadForms, _loadForm, _loadVolunteers, _loadTeams,\n  RootLoader, Icon, DialogSaving,\n} from '../common.js';\n\nModal.setAppElement(document.getElementById('root'));\n\nconst customStyles = {\n  content : {\n    top                   : '15%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nconst FTYPE = t.enums({\n  'String': 'Text Input',\n  'TEXTBOX': 'Large Text Box',\n  'Number': 'Number',\n  'Boolean': 'On/Off Switch',\n  'SAND': 'Agree/Disagree',\n//  'List': 'Select from List',\n}, 'FTYPE');\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE,\n};\n\nvar options = {\n  fields: {\n    key: {\n      label: 'Input Key',\n      help: 'The spreadsheet column name.',\n    },\n    label: {\n      label: 'Input Label',\n      help: 'Label the user sees on the form.',\n    },\n    type: {\n      help: 'The type of input the user can enter.',\n    },\n  },\n};\n\nvar premade = {\n  'FullName': { label: 'Full Name', type: 'String', optional: true },\n  'Phone': { label: 'Phone Number', type: 'Number', optional: true },\n  'Email': { label: 'Email Address', type: 'String', optional: true },\n  'RegisteredToVote': { label: 'Are you registered to vote?', type: 'Boolean', optional: true },\n  'PartyAffiliation': { label: 'Party Affiliation', type: 'List', optional: true,\n    options: [\n      'No Party Preference',\n      'Democratic',\n      'Republican',\n      'Green',\n      'Libertarian',\n      'Other',\n    ]},\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = JSON.parse(JSON.stringify(premade)); // deep copy\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      'name': t.String,\n    });\n\n    this.state = {\n      loading: true,\n      forms: [],\n      fields: fields,\n      order: order,\n      customForm: null,\n      search: \"\",\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.',\n        },\n      },\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.doAddCustom = this.doAddCustom.bind(this);\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({pageNum: 1, perPage: obj.value});\n  }\n\n  handlePageClick = (data) => {\n    this.setState({pageNum: data.selected+1});\n  }\n\n  onTypeSearch (event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    })\n  }\n\n  openModal() {\n    this.setState({customForm: t.struct(addItem)})\n  }\n\n  closeModal() {\n    this.setState({customForm: null});\n  }\n\n  doAddCustom() {\n    let { fields, order } = this.state;\n\n    let ref = this.customForm.getValue();\n    if (ref === null) return;\n    let json = JSON.parse(JSON.stringify(ref)); // deep copy\n\n    let key = json.key;\n    delete json.key;\n    json.optional = true; // backwards compatability\n\n    // check for duplicate keys\n    if (fields[key]) {\n      //return Alert.alert('Error', 'Duplicate Input Key. Change your Input Key to add this item.', [{text: 'OK'}], { cancelable: false });    }\n      notify_error({}, \"Duplicate entry.\");\n      return;\n    }\n\n    fields[key] = json;\n    order[order.length] = key;\n\n    this.setState({customForm: null, fields: fields, order: order});\n\n  }\n\n  doShowCustom() {\n    this.setState({customForm: t.struct(addItem)});\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n      case 'String': return 'Text Input';\n      case 'TEXTBOX': return 'Text Box';\n      case 'Number': return 'Number';\n      case 'Boolean': return 'On/Off Switch';\n      case 'SAND': return 'Agree/Disagree';\n      case 'List': return 'Select from List';\n      default: return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({fields, order});\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({addFormForm})\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({loading: true});\n    let forms = [];\n\n    try {\n      forms = await _loadForms(this);\n    } catch (e) {\n      notify_error(e, \"Unable to load forms.\");\n    }\n    this.setState({forms, loading: false});\n  }\n\n  _deleteForm = async (id) => {\n    this.setState({saving: true, menuDelete: false});\n    try {\n      await _fetch(this.props.server, '/volunteer/v1/form/delete', 'POST', {formId: id});\n      notify_success(\"Form has been deleted.\");\n    } catch (e) {\n      notify_error(e, \"Unable to delete form.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/forms/\";\n    this._loadData();\n  }\n\n  _createForm = async () => {\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error({}, \"From name can only contain alphanumeric characters, and spaces and dashes.\");\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, \"Form name cannot be longer than 255 characters.\");\n      return;\n    }\n\n    this.setState({saving: true});\n\n    // make sure this name doesn't exist\n    try {\n\n      let obj;\n\n      obj = {\n        name: formName,\n        questions: this.state.fields,\n        questions_order: this.state.order,\n      };\n\n      await _fetch(this.props.server, '/volunteer/v1/form/create', 'POST', obj);\n      notify_success(\"Form has been created.\")\n    } catch (e) {\n      notify_error(e, \"Unable to create form.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/forms/\";\n    this._loadData();\n  }\n\n  render() {\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search)) return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/forms/\" render={() => (\n            <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n              Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n              <br />\n              <ListForms forms={list} refer={this} />\n            </RootLoader>\n          )} />\n          <Route path=\"/forms/add\" render={(props) => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addFormForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeForm(e)}\n                value={this.state.addFormForm}\n              />\n\n              <div style={{margin: 25}}>Items in your Volunteering form: <button onClick={this.openModal}><Icon icon={faPlusCircle} /> Add Item</button></div>\n\n              {Object.keys(this.state.fields).map((f) => {\n                let field = this.state.fields[f];\n                return (\n                  <li key={f} style={{marginLeft: 25}}>{field.label+(field.required?' *':'')} : {this.inputTypeToReadable(field.type)} <Icon icon={faTimesCircle} color=\"red\" /></li>\n                );\n              })}\n\n              <button style={{margin: 25}} onClick={() => this._createForm()}>\n                Create Form\n              </button>\n\n              <Modal\n                isOpen={(this.state.customForm !== null)}\n                onAfterOpen={this.afterOpenModal}\n                onRequestClose={this.closeModal}\n                style={customStyles}\n                contentLabel=\"Add item to form\"\n              >\n              <t.form.Form\n                ref={(ref) => this.customForm = ref}\n                type={this.customFormItems}\n                options={options}\n                onChange={this.onChange}\n                value={this.state.customForm}\n              />\n                <button onClick={this.doAddCustom}>Add this item</button>\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                <button onClick={() => this.setState({customForm: null})}>Dismiss</button>\n              </Modal>\n            </div>\n          )} />\n          <Route path=\"/forms/view/:id\" render={(props) => (\n            <div>\n              <CardForm key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n              <br />\n              <br />\n              <br />\n              <Button onClick={this.handleClickDelete} color=\"primary\">\n                Delete Form\n              </Button>\n              <Dialog\n                open={this.state.menuDelete}\n                onClose={this.handleCloseDelete}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">Are you sure you wish to delete this form?</DialogTitle>\n                <DialogActions>\n                  <Button onClick={this.handleCloseDelete} color=\"primary\" autoFocus>\n                    No\n                  </Button>\n                  <Button onClick={() => this._deleteForm(props.match.params.id)} color=\"primary\">\n                    Yes\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </div>\n          )} />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = (props) => {\n  const perPage = props.refer.state.perPage;\n  let paginate = (<div></div>);\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx/perPage)+1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{display: 'flex'}}>\n      <ReactPaginate previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.forms.length/perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{width: 75}}>\n      # Per Page <Select\n        value={{value: perPage, label: perPage}}\n        onChange={props.refer.handlePageNumChange}\n        options={[\n          {value: 5, label: 5},\n          {value: 10, label: 10},\n          {value: 25, label: 25},\n          {value: 50, label: 50},\n          {value: 100, label: 100}\n        ]}\n      />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>{props.type}Forms ({props.forms.length})</h3>\n      <Link to={'/forms/add'}><button>Add Form</button></Link>\n      {paginate}\n      {list}\n      {paginate}\n     </div>\n   );\n};\n\nexport class CardForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async (selectedTeamsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedTeamsOption, selectedTeamsOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/team/add', 'POST', {teamId: obj.add[i], formId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/team/remove', 'POST', {teamId: obj.rm[i], formId: this.props.id});\n      }\n\n      notify_success(\"Team assignments saved.\");\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleMembersChange = async (selectedMembersOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedMembersOption, selectedMembersOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/volunteer/add', 'POST', {cId: obj.add[i], formId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/volunteer/remove', 'POST', {cId: obj.rm[i], formId: this.props.id});\n      }\n\n      notify_success(\"Volunteer assignments saved.\");\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  _loadData = async () => {\n    let form = {}, volunteers = [], members = [], teams = [], teamsSelected = [];\n\n    this.setState({loading: true})\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'form', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'form', this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, \"Unable to load form info.\");\n      return this.setState({loading: false});\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach((t) => {\n      teamOptions.push({value: _searchStringify(t), id: t.id, label: (\n        <CardTeam key={t.id} team={t} refer={this} />\n      )});\n    });\n\n    teamsSelected.forEach((t) => {\n      selectedTeamsOption.push({value: _searchStringify(t), id: t.id, label: (<CardTeam key={t.id} team={t} refer={this} />)});\n    })\n\n    volunteers.forEach((c) => {\n      membersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    members.forEach((c) => {\n      selectedMembersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    this.setState({form, volunteers, teamOptions, membersOption, selectedTeamsOption, selectedMembersOption, loading: false});\n  }\n\n  render() {\n    const { form } = this.state;\n\n    if (!form || this.state.loading) {\n      return (<CircularProgress />);\n    }\n\n    return (\n      <div>\n        <div style={{display: 'flex', padding: '10px'}}>\n          <div style={{padding: '5px 10px'}}>\n            <Icon icon={faClipboard} style={{width: 50, height: 50, color: \"gray\"}} /> {form.name} {(this.props.edit?'':(<Link to={'/forms/view/'+form.id}>view</Link>))}\n          </div>\n        </div>\n        {this.props.edit?<CardFormFull form={form} refer={this} />:''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = (props) => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  notify_error, notify_success, _fetch,  _handleSelectChange, _searchStringify,\n  _loadVolunteers, _loadTeams, _loadTeam, _loadForms, _loadTurfs,\n  RootLoader, Icon, DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf.js';\nimport { CardForm } from './Forms.js';\nimport { CardVolunteer } from './Volunteers.js';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      teams: [],\n      search: \"\",\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({addTeamForm})\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({pageNum: 1, perPage: obj.value});\n  }\n\n  onTypeSearch (event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    })\n  }\n\n  _deleteTeam = async (id) => {\n    this.setState({saving: true, menuDelete: false});\n    try {\n      await _fetch(this.props.server, '/volunteer/v1/team/delete', 'POST', {teamId: id});\n      notify_success(\"Team has been deleted.\");\n    } catch (e) {\n      notify_error(e, \"Unable to delete teams.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/teams/\";\n    this._loadData();\n  }\n\n  _createTeam = async () => {\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({saving: true});\n\n    try {\n      await _fetch(this.props.server, '/volunteer/v1/team/create', 'POST', {name: json.name});\n      notify_success(\"Team has been created.\");\n    } catch (e) {\n      notify_error(e, \"Unable to create team.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/teams/\";\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({loading: true, search: \"\"});\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(this);\n    } catch (e) {\n      notify_error(e, \"Unable to load volunteers.\");\n    }\n\n    this.setState({loading: false, teams});\n  }\n\n  handlePageClick = (data) => {\n    this.setState({pageNum: data.selected+1});\n  }\n\n  render() {\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search)) return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/teams/\" render={() => (\n            <RootLoader flag={this.state.loading} func={this._loadData}>\n              Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n              <ListTeams refer={this} teams={list} />\n            </RootLoader>\n          )} />\n          <Route exact={true} path=\"/teams/add\" render={() => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addTeamForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTeam(e)}\n                value={this.state.addTeamForm}\n              />\n              <button onClick={() => this._createTeam()}>\n                Submit\n              </button>\n            </div>\n          )} />\n          <Route path=\"/teams/view/:id\" render={(props) => (\n            <div>\n              <CardTeam key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n              <br />\n              <br />\n              <br />\n              <Button onClick={this.handleClickDelete} color=\"primary\">\n                Delete Team\n              </Button>\n              <Dialog\n                open={this.state.menuDelete}\n                onClose={this.handleCloseDelete}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">Are you sure you wish to delete this team?</DialogTitle>\n                <DialogActions>\n                  <Button onClick={this.handleCloseDelete} color=\"primary\" autoFocus>\n                    No\n                  </Button>\n                  <Button onClick={() => this._deleteTeam(props.match.params.id)} color=\"primary\">\n                    Yes\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </div>\n          )} />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = (props) => {\n  const perPage = props.refer.state.perPage;\n  let paginate = (<div></div>);\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx/perPage)+1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{display: 'flex'}}>\n      <ReactPaginate previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.teams.length/perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{width: 75}}>\n      # Per Page <Select\n        value={{value: perPage, label: perPage}}\n        onChange={props.refer.handlePageNumChange}\n        options={[\n          {value: 5, label: 5},\n          {value: 10, label: 10},\n          {value: 25, label: 25},\n          {value: 50, label: 50},\n          {value: 100, label: 100}\n        ]}\n      />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>{props.type}Teams ({props.teams.length})</h3>\n      <Link to={'/teams/add'}><button>Add Team</button></Link>\n      {paginate}\n      {list}\n      {paginate}\n     </div>\n   );\n};\n\nexport class CardTeam extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async (selectedMembersOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedMembersOption, selectedMembersOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/add', 'POST', {teamId: this.props.id, cId: obj.add[i]});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/remove', 'POST', {teamId: this.props.id, cId: obj.rm[i]});\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success(\"Team assignments saved.\");\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove team members.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleFormsChange = async (selectedFormsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedFormsOption, selectedFormsOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/team/add', 'POST', {formId: obj.add[i], teamId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/team/remove', 'POST', {formId: obj.rm[i], teamId: this.props.id});\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(this, this.props.id);\n      notify_success(\"Form selection saved.\");\n      this.setState({teamn, selectedFormsOption});\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove form.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleTurfChange = async (selectedTurfOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedTurfOption, selectedTurfOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/team/add', 'POST', {turfId: obj.add[i], teamId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/team/remove', 'POST', {turfId: obj.rm[i], teamId: this.props.id});\n      }\n\n      // refresh team info\n      let team = await _loadTeam(this, this.props.id);\n      notify_success(\"Turf selection saved.\");\n      this.setState({team, selectedTurfOption});\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove turf.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  _loadData = async () => {\n    let team = {}, volunteers = [], members = [], turfSelected = [], turfs = [], formSelected = [], forms = [];\n    this.setState({loading: true})\n\n    try {\n      [team, volunteers, members, turfSelected, turfs, formSelected, forms] = await Promise.all([\n        _loadTeam(this, this.props.id),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'team', this.props.id),\n        _loadTurfs(this.props.refer, this.props.id),\n        _loadTurfs(this.props.refer),\n        _loadForms(this.props.refer, this.props.id),\n        _loadForms(this.props.refer),\n      ]);\n    } catch (e) {\n      notify_error(e, \"Unable to load team info.\");\n      return this.setState({loading: false});\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach((c) => {\n      memberOptions.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    members.forEach((c) => {\n      selectedMembersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    turfs.forEach((t) => {\n      turfOptions.push({value: _searchStringify(t), id: t.id, label: (<CardTurf key={t.id} turf={t} refer={this} />)});\n    })\n\n    turfSelected.forEach((t) => {\n      selectedTurfOption.push({value: _searchStringify(t), id: t.id, label: (<CardTurf key={t.id} turf={t} refer={this} />)});\n    })\n\n    forms.forEach((f) => {\n      formOptions.push({value: _searchStringify(f), id: f.id, label: (<CardForm key={f.id} form={f} refer={this} />)});\n    })\n\n    formSelected.forEach((f) => {\n      selectedFormsOption.push({value: _searchStringify(f), id: f.id, label: (<CardForm key={f.id} form={f} refer={this} />)});\n    })\n\n    this.setState({team, memberOptions, turfOptions, formOptions, selectedMembersOption, selectedTurfOption, selectedFormsOption, loading: false});\n  }\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return (<CircularProgress />);\n    }\n\n    return (\n      <div>\n        <div style={{display: 'flex', padding: '10px'}}>\n          <div style={{flex: 1, overflow: 'auto', padding: '5px 10px'}}>\n            <Icon icon={faUsers} style={{width: 50, height: 50, color: \"gray\"}} /> {team.name} {(this.props.edit?'':(<Link to={'/teams/view/'+team.id}>view</Link>))}\n          </div>\n        </div>\n        {this.props.edit?<CardTeamFull team={team} refer={this} />:''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = (props) => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport {geocodeByAddress, getLatLng} from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport { CardVolunteer } from './Volunteers.js';\nimport { CardTeam } from './Teams.js';\n\nimport {\n  _fetch, notify_error, notify_success, _handleSelectChange, _searchStringify,\n  _loadTurfs, _loadTurf, _loadTeams, _loadVolunteers,\n  PlacesAutocomplete, RootLoader, Icon, DialogSaving,\n} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState();\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = (address) => this.setState({ address })\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState() {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: \"\",\n      addressCoords: null,\n      search: \"\",\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({pageNum: 1, perPage: obj.value});\n  }\n\n  handlePageClick = (data) => {\n    this.setState({pageNum: data.selected+1});\n  }\n\n  onTypeSearch (event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    })\n  }\n\n  submitAddress = async (address) => {\n    this.setState({address, saving: true})\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({addressCoords: pos});\n    } catch (e) {\n      notify_error(e, \"Unable to search or geocode address.\");\n    }\n    this.setState({saving: false});\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({addTurfForm})\n  }\n\n  handleDrawChange = (selectedDrawOption) => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: \"\",\n     });\n  }\n\n  handleStateChange = (selectedStateOption) => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = (selectedTypeOption) => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = (selectedDistrictOption) => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = (files: FileList) => {\n    this.setState({saving: true});\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      this.setState({importFileData: event.target.result, saving: false});\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n      case 'sldu':\n      case 'sldl':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (this.state.selectedTypeOption && this.state.selectedTypeOption.value === \"state\") return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption) return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async (id) => {\n    this.setState({saving: true, menuDelete: false});\n    try {\n      await _fetch(this.props.server, '/volunteer/v1/turf/delete', 'POST', {turfId: id});\n      notify_success(\"Turf has been deleted.\");\n    } catch (e) {\n      notify_error(e, \"Unable to delete turf.\");\n    }\n    this.setState({saving: false});\n\n    this._loadData();\n    window.location.href = \"/HelloVoterHQ/#/turf/\";\n  }\n\n  _createTurf = async () => {\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({saving: true});\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, \"Unable to parse import data file.\");\n        return this.setState({saving: false});\n      }\n    } else if (this.state.selectedDrawOption.value === \"radius\") {\n      objs.push(circleToPolygon([this.state.addressCoords.lng,this.state.addressCoords.lat],1000));\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (this.state.selectedDistrictOption && this.state.selectedDistrictOption.value === 'all') {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(this.urlFromDist(state, this.state.selectedTypeOption.value, this.state.districtOptions[i].value));\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(this.urlFromDist(state, this.state.selectedTypeOption.value, (this.state.selectedDistrictOption?this.state.selectedDistrictOption.value:null)));\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, \"Unable to fetch district info data.\");\n        return this.setState({saving: false});\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (this.state.selectedDistrictOption && this.state.selectedDistrictOption.value === 'all')\n          name = json.name+' '+obj.name;\n        else\n          name = json.name;\n\n        await _fetch(this.props.server, '/volunteer/v1/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success(\"Turf has been created.\");\n    } catch (e) {\n      notify_error(e, \"Unable to create turf.\");\n    }\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoterHQ/#/turf/\";\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n      case 'state':\n        uri = 'states/'+state+'/shape.geojson';\n        break;\n      case 'cd':\n        // TODO: handle the fact there are new years with less in them\n        uri = 'cds/2016/'+value+'/shape.geojson';\n        break;\n      case 'sldu':\n        uri = 'states/'+state+'/sldu/'+value+'.geojson';\n        break;\n      case 'sldl':\n        uri = 'states/'+state+'/sldl/'+value+'.geojson';\n        break;\n      default:\n        throw new Error(\"unknown selectedTypeOption\");\n    }\n\n    return 'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/'+uri;\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({districtOptions: []})\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n        // TODO: handle the fact there are new years with less in them\n        uri = 'cds/2016/';\n        break;\n      case 'sldu':\n        uri = 'states/'+state+'/sldu/';\n        break;\n      case 'sldl':\n        uri = 'states/'+state+'/sldl/';\n        break;\n      default:\n        return;\n    }\n\n    let res = await fetch('https://api.github.com/repos/OurVoiceUSA/districts/contents/'+uri);\n\n    let dist = [{value: 'all', label: 'Create all of them!'}];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n        objs.forEach((o) => {\n          if (o.name.includes(this.state.selectedStateOption.value)) dist.push({value: o.name, label: o.name});\n          return;\n        });\n        break;\n      default:\n        objs.forEach((o) => {\n          let val = o.name.replace('.geojson', '');\n          dist.push({value: val, label: val});\n        });\n    }\n\n    this.setState({districtOptions: dist});\n\n  }\n\n  _loadData = async () => {\n    this.setState({loading: true, search: \"\"});\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(this);\n    } catch (e) {\n      notify_error(e, \"Unable to load turf.\");\n    }\n    this.setState(this.initState());\n    this.setState({loading: false, turf})\n  }\n\n  render() {\n\n    let drawOptions = [\n      {value: 'select', label: 'Select from legislative boundary'},\n      {value: 'import', label: 'Import GeoJSON shape file'},\n      {value: 'radius', label: 'Area surrounding an address'},\n      {value: 'draw', label: 'Manually draw with your mouse'},\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search)) return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/turf/\" render={() => (\n            <RootLoader flag={this.state.loading} func={this._loadData}>\n              Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n              <br />\n              <ListTurf turf={list} refer={this} />\n            </RootLoader>\n          )} />\n          <Route exact={true} path=\"/turf/add\" render={() => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addTurfForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTurf(e)}\n                value={this.state.addTurfForm}\n              />\n\n              <br />\n              Method of generating turf:\n              <Select\n                value={this.state.selectedDrawOption}\n                onChange={this.handleDrawChange}\n                options={drawOptions}\n                isSearchable={false}\n                placeholder=\"Select method\"\n              />\n\n              <TurfOptions refer={this} />\n\n              {this._showSubmitButton()?\n              <div><br />\n                <button onClick={() => this._createTurf()}>\n                  Submit\n                </button>\n              </div>\n              :''}\n            </div>\n          )} />\n          <Route path=\"/turf/view/:id\" render={(props) => (\n            <div>\n              <CardTurf key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n              <br />\n              <br />\n              <br />\n              <Button onClick={this.handleClickDelete} color=\"primary\">\n                Delete Turf\n              </Button>\n              <Dialog\n                open={this.state.menuDelete}\n                onClose={this.handleCloseDelete}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">Are you sure you wish to delete this turf?</DialogTitle>\n                <DialogActions>\n                  <Button onClick={this.handleCloseDelete} color=\"primary\" autoFocus>\n                    No\n                  </Button>\n                  <Button onClick={() => this._deleteTurf(props.match.params.id)} color=\"primary\">\n                    Yes\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </div>\n          )} />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTurf = (props) => {\n  const perPage = props.refer.state.perPage;\n  let paginate = (<div></div>);\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx/perPage)+1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{display: 'flex'}}>\n      <ReactPaginate previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.turf.length/perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{width: 75}}>\n      # Per Page <Select\n        value={{value: perPage, label: perPage}}\n        onChange={props.refer.handlePageNumChange}\n        options={[\n          {value: 5, label: 5},\n          {value: 10, label: 10},\n          {value: 25, label: 25},\n          {value: 50, label: 50},\n          {value: 100, label: 100}\n        ]}\n      />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>{props.type}Turf ({props.turf.length})</h3>\n      <Link to={'/turf/add'}><button>Add Turf</button></Link>\n      {paginate}\n      {list}\n      {paginate}\n     </div>\n   );\n};\n\nconst TurfOptions = (props) => {\n  if (!props.refer.state.selectedDrawOption) return (<br />);\n\n  let stateOptions = [];\n  Object.keys(us_states).map((k) => stateOptions.push({value: k, label: us_states[k]}));\n\n  let typeOptions = [\n    {value: 'state', label: 'State'},\n    {value: 'cd', label: 'Congressional'},\n    {value: 'sldu', label: 'State Senate'},\n    {value: 'sldl', label: 'State House'},\n  ];\n\n  switch (props.refer.state.selectedDrawOption.value) {\n    case \"select\":\n      return (\n        <div>\n          <div><br />\n            State or region:\n            <Select\n              value={props.refer.state.selectedStateOption}\n              onChange={props.refer.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {props.refer.state.selectedStateOption?\n          <div><br />\n            District Type:\n            <Select\n              value={props.refer.state.selectedTypeOption}\n              onChange={props.refer.handleTypeChange}\n              onMenuClose={props.refer.selectedTypeFetch}\n              options={typeOptions}\n              isSearchable={false}\n              placeholder=\"Select district for this turf\"\n            />\n          </div>\n          :''}\n\n          {props.refer._showDistrictOption()?\n          <div><br />\n            District Number:\n            {props.refer.state.districtOptions.length?\n            <Select\n              value={props.refer.state.selectedDistrictOption}\n              onChange={props.refer.handleDistrictChange}\n              options={props.refer.state.districtOptions}\n              isSearchable={true}\n              placeholder=\"Select district for this turf\"\n            />\n            :<CircularProgress />}\n          </div>\n          :''}\n        </div>\n      );\n    case \"import\":\n      return (\n        <div><br />\n          <input type=\"file\" accept=\".geojson,.json\" onChange={ (e) => props.refer.handleImportFiles(e.target.files) } />\n        </div>\n      );\n    case \"radius\":\n      return (\n        <div><br />\n          Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={props.refer.state.address}\n            onChange={props.refer.onTypeAddress}\n            onSelect={props.refer.submitAddress}\n          />\n        </div>\n      );\n    case \"draw\":\n      return (\n        <div><br />\n          Use a <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\">GeoJSON Draw Tool</a>,\n          save the file, and then select the \"Import GeoJSON shape file\" option.\n        </div>\n      );\n    default:\n      return (<div>Unknown generation method.</div>);\n  }\n}\n\nexport class CardTurf extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async (selectedTeamsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedTeamsOption, selectedTeamsOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/team/add', 'POST', {teamId: obj.add[i], turfId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/team/remove', 'POST', {teamId: obj.rm[i], turfId: this.props.id});\n      }\n\n      notify_success(\"Team assignments saved.\");\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleMembersChange = async (selectedMembersOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedMembersOption, selectedMembersOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/volunteer/add', 'POST', {cId: obj.add[i], turfId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/volunteer/remove', 'POST', {cId: obj.rm[i], turfId: this.props.id});\n      }\n\n      notify_success(\"Volunteer assignments saved.\");\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  _loadData = async () => {\n    let turf = {}, volunteers = [], members = [], teams = [], teamsSelected = [];\n\n    this.setState({loading: true})\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(this, this.props.id, true),\n        _loadVolunteers(this.props.refer),\n        _loadVolunteers(this.props.refer, 'turf', this.props.id),\n        _loadTeams(this.props.refer),\n        _loadTeams(this.props.refer, 'turf', this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, \"Unable to load turf info.\");\n      return this.setState({loading: false});\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach((t) => {\n      teamOptions.push({value: _searchStringify(t), id: t.id, label: (\n        <CardTeam key={t.id} team={t} refer={this} />\n      )});\n    });\n\n    teamsSelected.forEach((t) => {\n      selectedTeamsOption.push({value: _searchStringify(t), id: t.id, label: (<CardTeam key={t.id} team={t} refer={this} />)});\n    })\n\n    volunteers.forEach((c) => {\n      membersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    members.forEach((c) => {\n      selectedMembersOption.push({value: _searchStringify(c), id: c.id, label: (<CardVolunteer key={c.id} volunteer={c} refer={this} />)});\n    });\n\n    this.setState({turf, volunteers, teamOptions, membersOption, selectedTeamsOption, selectedMembersOption, loading: false});\n  }\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return (<CircularProgress />);\n    }\n\n    return (\n      <div>\n        <div style={{display: 'flex', padding: '10px'}}>\n          <div style={{padding: '5px 10px'}}>\n            <Icon icon={faStreetView} style={{width: 50, height: 50, color: \"gray\"}} /> {turf.name} {(this.props.edit?'':(<Link to={'/turf/view/'+turf.id}>view</Link>))}\n          </div>\n        </div>\n        {this.props.edit?<CardTurfFull turf={turf} refer={this} />:''}\n      </div>\n    );\n  }\n}\n\nexport const CardTurfFull = (props) => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport {geocodeByAddress, getLatLng} from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {\n  notify_error, notify_success, _fetch, _searchStringify, _handleSelectChange,\n  _loadVolunteers, _loadVolunteer, _loadTeams, _loadForms, _loadTurfs,\n  RootLoader, Icon, PlacesAutocomplete, DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf.js';\nimport { CardForm } from './Forms.js';\nimport { CardTeam } from './Teams.js';\n\nimport {\n  faCrown, faExclamationTriangle, faCheckCircle, faBan, faHome, faFlag,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: \"\",\n      perPage: perPage,\n      pageNum: 1,\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({pageNum: 1, perPage: obj.value});\n  }\n\n  onTypeSearch (event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    })\n  }\n\n  _loadData = async () => {\n    let volunteers = [];\n    this.setState({loading: true, search: \"\"});\n    try {\n      volunteers = await _loadVolunteers(this);\n    } catch (e) {\n      notify_error(e, \"Unable to load volunteers.\");\n    }\n    this.setState({loading: false, volunteers});\n  }\n\n  handlePageClick = (data) => {\n    this.setState({pageNum: data.selected+1});\n  }\n\n  render() {\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search)) return;\n      if (c.locked) {\n        denied.push(c);\n      } else {\n        if (c.ass.ready || c.ass.teams.length)\n          ready.push(c);\n        else\n          unassigned.push(c);\n      }\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n            <br />\n            <Link to={'/volunteers/'} onClick={() => this.setState({pageNum: 1})}>Volunteers ({ready.length})</Link>&nbsp;-&nbsp;\n            <Link to={'/volunteers/unassigned'} onClick={() => this.setState({pageNum: 1})}>Unassigned ({unassigned.length})</Link>&nbsp;-&nbsp;\n            <Link to={'/volunteers/denied'} onClick={() => this.setState({pageNum: 1})}>Denied ({denied.length})</Link>\n            <Route exact={true} path=\"/volunteers/\" render={() => (<ListVolunteers refer={this} volunteers={ready} />)} />\n            <Route exact={true} path=\"/volunteers/unassigned\" render={() => (<ListVolunteers refer={this} type=\"Unassigned\" volunteers={unassigned} />)} />\n            <Route exact={true} path=\"/volunteers/denied\" render={() => (<ListVolunteers refer={this} type=\"Denied\" volunteers={denied} />)} />\n            <Route path=\"/volunteers/view/:id\" render={(props) => (\n              <CardVolunteer key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n            )} />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={(this.state.thisVolunteer.id?true:false)}\n              onClose={() => this.setState({thisVolunteer: {}})}\n            >\n              <div style={{\n                position: 'absolute',\n                top: 100, left: 200, right: 200,\n                backgroundColor: 'white',\n                padding: 40,\n              }}>\n                <CardVolunteer key={this.state.thisVolunteer.id} id={this.state.thisVolunteer.id} edit={true} refer={this} />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = (props) => {\n  const perPage = props.refer.state.perPage;\n  let paginate = (<div></div>);\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx/perPage)+1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(\n      <CardVolunteer key={c.id} volunteer={c} refer={props.refer} />\n    );\n  });\n\n  paginate = (\n    <div style={{display: 'flex'}}>\n      <ReactPaginate previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.volunteers.length/perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{width: 75}}>\n      # Per Page <Select\n        value={{value: perPage, label: perPage}}\n        onChange={props.refer.handlePageNumChange}\n        options={[\n          {value: 5, label: 5},\n          {value: 10, label: 10},\n          {value: 25, label: 25},\n          {value: 50, label: 50},\n          {value: 100, label: 100}\n        ]}\n      />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>{props.type}Volunteers ({props.volunteers.length})</h3>\n      {paginate}\n      <List component=\"nav\">\n        {list}\n      </List>\n      {paginate}\n     </div>\n   );\n};\n\nexport class CardVolunteer extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: {},\n      selectedTurfOption: {},\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async (selectedTeamsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedTeamsOption, selectedTeamsOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/add', 'POST', {teamId: obj.add[i], cId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/remove', 'POST', {teamId: obj.rm[i], cId: this.props.id});\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success(\"Team assignments saved.\");\n      this.setState({ selectedTeamsOption, selectedFormsOption: {}, selectedTurfOption: {}, volunteer });\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove teams.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleLeaderChange = async (selectedLeaderOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      let obj = _handleSelectChange(this.state.selectedLeaderOption, selectedLeaderOption);\n\n      for (let i in obj.add) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/promote', 'POST', {teamId: obj.add[i], cId: this.props.id});\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(this.state.server, '/volunteer/v1/team/members/demote', 'POST', {teamId: obj.rm[i], cId: this.props.id});\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success(\"Team leaders saved.\");\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, \"Unable to edit team leadership.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleFormsChange = async (selectedFormsOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      if (this.state.selectedFormsOption.value) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/volunteer/remove', 'POST', {\n          formId: this.state.selectedFormsOption.id,\n          cId: this.props.id,\n        });\n      }\n      if (selectedFormsOption.value) {\n        await _fetch(this.state.server, '/volunteer/v1/form/assigned/volunteer/add', 'POST', {\n          formId: selectedFormsOption.id,\n          cId: this.props.id,\n        });\n      }\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success(\"Form selection saved.\");\n      this.setState({volunteer, selectedFormsOption});\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove form.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  handleTurfChange = async (selectedTurfOption) => {\n    this.props.refer.setState({saving: true});\n    try {\n      if (this.state.selectedTurfOption.value) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/volunteer/remove', 'POST', {\n          turfId: this.state.selectedTurfOption.id,\n          cId: this.props.id,\n        });\n      }\n      if (selectedTurfOption.value) {\n        await _fetch(this.state.server, '/volunteer/v1/turf/assigned/volunteer/add', 'POST', {\n          turfId: selectedTurfOption.id,\n          cId: this.props.id,\n        });\n      }\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(this, this.props.id);\n      notify_success(\"Turf selection saved.\");\n      this.setState({volunteer, selectedTurfOption});\n    } catch (e) {\n      notify_error(e, \"Unable to add/remove turf.\");\n    }\n    this.props.refer.setState({saving: false});\n  }\n\n  _loadData = async () => {\n    let volunteer = {}, forms = [], turf = [], teams = [];\n\n    this.setState({loading: true})\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(this, this.props.id),\n        _loadForms(this.props.refer),\n        _loadTurfs(this.props.refer),\n        _loadTeams(this.props.refer)\n      ]);\n    } catch (e) {\n      notify_error(e, \"Unable to load canavasser info.\");\n      return this.setState({loading: false});\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = {};\n    let selectedTurfOption = {};\n\n    let formOptions = [\n      {value: '', label: \"None\"},\n    ];\n\n    let turfOptions = [\n      {value: '', label: \"None\"},\n      {value: 'auto', id: 'auto', label: (<CardTurf key=\"auto\" turf={{id: \"auto\", name: \"Area surrounnding this volunteer's home address\"}} refer={this} icon={faHome} />)},\n    ];\n\n    teams.forEach((t) => {\n      teamOptions.push({value: _searchStringify(t), id: t.id, label: (\n        <CardTeam key={t.id} team={t} refer={this} />\n      )});\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({value: _searchStringify(t), id: t.id, label: (\n            <CardTeam key={t.id} team={t} refer={this} />\n          )});\n          leaderOptions.push({value: _searchStringify(t), id: t.id, label: (\n            <CardTeam key={t.id} team={t} refer={this} />\n          )});\n          if (volunteer.ass.teamperms[idx].leader) {\n            selectedLeaderOption.push({value: _searchStringify(t), id: t.id, label: (\n              <CardTeam key={t.id} team={t} refer={this} />\n            )});\n          }\n        }\n      });\n    });\n\n    forms.forEach((f) => {\n      formOptions.push({value: _searchStringify(f), id: f.id, label: (<CardForm key={f.id} form={f} refer={this} />)});\n    });\n\n    if (volunteer.ass.forms.length) {\n      let f = volunteer.ass.forms[0];\n      selectedFormsOption = {value: _searchStringify(f), id: f.id, label: (<CardForm key={f.id} form={f} refer={this} />)};\n    }\n\n    turf.forEach((t) => {\n      turfOptions.push({value: _searchStringify(t), id: t.id, label: (<CardTurf key={t.id} turf={t} refer={this} />)})\n    });\n\n    if (volunteer.ass.turf.length) {\n      let t = volunteer.ass.turf[0];\n      selectedTurfOption = {value: _searchStringify(t), id: t.id, label: (<CardTurf key={t.id} turf={t} refer={this} icon={(volunteer.autoturf?faHome:null)} />)};\n    }\n\n    this.setState({\n      loading: false, volunteer, teamOptions, leaderOptions, formOptions, turfOptions,\n      selectedTeamsOption, selectedLeaderOption, selectedFormsOption, selectedTurfOption\n    });\n  }\n\n  _lockVolunteer = async (volunteer, flag) => {\n    let term = (flag?'lock':'unlock');\n    this.props.refer.setState({saving: true});\n    try {\n      await _fetch(this.state.server, '/volunteer/v1/volunteer/'+term, 'POST', {id: volunteer.id});\n      notify_success(\"Volunteer hass been \"+term+\"ed.\");\n    } catch (e) {\n      notify_error(e, \"Unable to \"+term+\" volunteer.\");\n    }\n    this.props.refer.setState({saving: false});\n\n    this._loadData();\n  }\n\n  render() {\n    const { volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return (<CircularProgress />);\n    }\n\n    if (this.props.edit) return (\n      <div>\n        <ListItem alignItems=\"flex-start\" style={{width: 350}}>\n          <ListItemAvatar>\n            <Avatar alt={volunteer.name} src={volunteer.avatar} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={volunteer.name}\n            secondary={(volunteer.homeaddress?extract_addr(volunteer.homeaddress):'N/A')}\n          />\n          <VolunteerBadges volunteer={volunteer} />\n        </ListItem>\n        <CardVolunteerFull volunteer={volunteer} refer={this} />\n      </div>\n    );\n\n    return (\n      <ListItem button style={{width: 350}} alignItems=\"flex-start\" onClick={() => this.props.refer.setState({thisVolunteer: volunteer})}>\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={(volunteer.homeaddress?extract_addr(volunteer.homeaddress):'N/A')}\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = (props) => (\n  <div>\n    <br />\n    {props.volunteer.locked?\n      (<button onClick={() => props.refer._lockVolunteer(props.volunteer, false)}>Restore Access</button>)\n    :\n      (<button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>Deny Access</button>)\n    }\n    <br />\n    Last Seen: {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen-30000))}\n    <br />\n    Email: {(props.volunteer.email?props.volunteer.email:'N/A')}\n    <br />\n    Phone: {(props.volunteer.phone?props.volunteer.phone:'N/A')}\n    <br />\n    Address: <VolunteerAddress refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    # of doors knocked: 0\n    <br />\n    <br />\n    {props.volunteer.ass.direct?\n    <div>\n      This volunteer is not assigned to any teams. To do so, you must remove the direct form and turf assignments below.\n    </div>\n    :\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    }\n    <br />\n    {props.refer.state.selectedTeamsOption.length?\n    <div>\n      Forms / Turf this users sees based on the above team(s):\n      <br />\n      {props.volunteer.ass.forms.map((f) => (<CardForm key={f.id} form={f} refer={props.refer} />))}\n      {props.volunteer.ass.turf.map((t) => (<CardTurf key={t.id} turf={t} refer={props.refer} />))}\n    </div>\n    :\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    }\n\n  </div>\n)\n\nexport class VolunteerAddress extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n      address: (this.props.volunteer.homeaddress?this.props.volunteer.homeaddress:\"\"),\n    };\n    this.onTypeAddress = (address) => this.setState({ address });\n  }\n\n  submitAddress = async (address) => {\n    this.setState({address})\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(this.props.refer.state.server, '/volunteer/v1/volunteer/update', 'POST', {\n        id: this.props.volunteer.id,\n        address: address,\n        lat: pos.lat,\n        lng: pos.lng,\n      });\n      this.props.refer._loadData();\n      notify_success(\"Address hass been saved.\");\n    } catch (e) {\n      notify_error(e, \"Unable to update address info.\");\n    }\n  }\n\n  render() {\n    if (this.state.edit) return (\n      <PlacesAutocomplete\n        debounce={500}\n        value={this.state.address}\n        onChange={this.onTypeAddress}\n        onSelect={this.submitAddress}\n      />\n    );\n\n    return (\n      <div>\n        {this.state.address} <button onClick={() => this.setState({edit: true})}>click to edit</button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = (props) => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin) badges.push(<Icon icon={faCrown} color=\"gold\" key={id+\"admin\"} data-tip=\"Administrator\" />);\n  if (props.volunteer.ass.leader) badges.push(<Icon icon={faFlag} color=\"green\" key={id+\"leader\"} data-tip=\"Team Leader\" />);\n  if (props.volunteer.locked) badges.push(<Icon icon={faBan} color=\"red\" key={id+\"locked\"} data-tip=\"Denied access\" />);\n  else {\n    if (props.volunteer.ass.ready) badges.push(<Icon icon={faCheckCircle} color=\"green\" key={id+\"ready\"} data-tip=\"Ready to Canvass\" />);\n    else badges.push(<Icon icon={faExclamationTriangle} color=\"red\" key={id+\"notready\"} data-tip=\"Not ready to volunteer, check assignments\" />);\n    if (!props.volunteer.homeaddress) badges.push(<Icon icon={faHome} color=\"red\" key={id+\"addr\"} data-tip=\"Home Address is not set\" />);\n  }\n\n  return badges;\n}\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport { _browserLocation, _loadTurf, _loadAddresses } from '../common.js';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let addresses = [];\n\n    let turfs = await _loadTurf(this, null, true);\n    let data = (await _loadAddresses(this)).nodes;\n\n    if (!data) data = {};\n\n    // only care about address objects\n    Object.keys(data).forEach((d) => {\n      if (data[d] && data[d].type === \"address\") {\n        addresses.push(data[d]);\n      }\n    })\n\n    this.setState({turfs, addresses});\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  };\n\n  render() {\n    let polygons = [];\n    const { addresses } = this.state;\n\n    let location = _browserLocation(this.props);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push(p));\n    });\n\n    return (\n      <Map google={this.props.google} zoom={14} center={location} onClick={this.onMapClicked}>\n        {addresses.map((a, idx) => (\n          <Marker\n            key={idx}\n            onClick={this.onMarkerClick}\n            title={a.address.join(\" \")}\n            position={{lat: a.latlng.latitude, lng: a.latlng.longitude}} />\n        ))}\n        {polygons.map((p, idx) => (\n          <Polygon\n            key={idx}\n            paths={p}\n            strokeColor=\"#0000FF\"\n            strokeWeight={5}\n            fillColor=\"#000000\"\n            fillOpacity={0} />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}>\n          <div>\n            <h1>{this.state.selectedPlace.title}</h1>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport CSVReader from 'react-csv-reader';\nimport Select from 'react-select';\n\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { notify_error, notify_success, Icon } from '../common.js';\n\nimport {\n  faFileCsv,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst HEADER = t.enums({\n  'address1': 'Address 1',\n  'address2': 'Address 2',\n  'city': 'City',\n  'state': 'State',\n  'zip': 'Zip Code',\n}, 'HEADER');\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      data: null,\n      headers: [],\n    };\n  }\n\n  preProcessError(e) {\n    notify_error(e, \"Failed to preprocess the import file.\");\n  }\n\n  preProcess = async (data) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({data, headers});\n  }\n\n  onHeadersSubmit = (evt) => {\n    evt.preventDefault();\n\n  /*\n    const value = this.refs.form.getValue();\n\n    if (value) {\n      // required import fields\n      let address1 = null;\n      let address2 = null;\n      let city = null;\n      let state = null;\n      let zip = null;\n\n      for (let val in value) {\n        let v = value[val];\n        if (v === 'address1') address1 = val;\n        if (v === 'address2') address2 = val;\n        if (v === 'city') city = val;\n        if (v === 'state') state = val;\n        if (v === 'zip') zip = val;\n      }\n\n      if (address1 == null || address2 == null || city == null || state == null || zip == null) {\n        this.setState({formError: 'All address elements must be assigned'});\n        return;\n      }\n\n      this.processData(address1, address2, city, state, zip);\n    }\n  */\n\n    this.setState({loading: true});\n    // fake data loaded after 3 seconds\n    setTimeout(() => {\n      notify_success(\"Data has been imported.\")\n      this.setState({loading: false, headers: []})\n    }, 3000);\n\n  }\n\n  render() {\n\n    if (this.state.loading) return (<CircularProgress />);\n\n/*\n\nOLD CODE\n\n    if (this.state.headers.length) {\n      let obj = {};\n\n      let FormOptions = {fields: {}};\n\n      for (let h in this.state.headers) {\n        obj[h] = t.maybe(HEADER);\n        FormOptions.fields[h] = {label: this.state.headers[h]};\n      }\n\n      let FormSchema = t.struct(obj);\n\n      return (\n        <div>\n          Assign each header to its data type <br />\n\n          <form onSubmit={this.onHeadersSubmit}>\n            <t.form.Form ref=\"form\" type={FormSchema} options={FormOptions} />\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            </div>\n          </form>\n\n          <hr />\n            NOTE: This import tool does not work on all spreadsheet files, as there is no standard format.\n            We do our best to accommodate the most common patterns. Contact someone you know who's\n            good with Microsoft&copy; Excel or LibreOffice&copy; and they can reformat your spreadsheet\n            file so it works with this import tool.\n        </div>\n        );\n    }\n*/\n\n  if (!this.state.headers.length) return (\n    <div>\n      <CSVReader\n        label=\"Data Importa\"\n        onError={this.preProcessError}\n        onFileLoaded={this.preProcess}\n      />\n      <br />\n      <h3>Select a CSV file to get to the next menu!</h3>\n      (Also want the user to be able to drag&drop files.)\n    </div>\n  );\n\n    return (\n      <div>\n\n        <div style={{display: 'flex'}}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n\n        <div style={{display: 'flex'}}>\n\n          <div style={{width: 150}}>Name:</div> <div style={{width: 450}}><Select\n            value={[\n              {value: 1, label: \"First Name\"},\n              {value: 1, label: \"Middle Initial\"},\n              {value: 1, label: \"Last Name\"},\n            ]}\n            isMulti={true}\n            placeholder=\"None\"\n          /></div>\n          <Checkbox value=\"ack\" color=\"primary\" />\n        </div>\n\n        <div style={{display: 'flex'}}>\n\n          <div style={{width: 150}}>Street Address:</div> <div style={{width: 450}}><Select\n            value={[\n              {value: 1, label: \"Street #\"},\n              {value: 1, label: \"Street Name\"},\n            ]}\n            isMulti={true}\n            placeholder=\"None\"\n          /></div>\n          <Checkbox value=\"ack\" color=\"primary\" />\n        </div>\n\n        <div style={{display: 'flex'}}>\n\n          <div style={{width: 150}}>City</div> <div style={{width: 450}}><Select\n            value={[\n              {value: 1, label: \"City Name\"},\n            ]}\n            isMulti={true}\n            placeholder=\"None\"\n          /></div>\n          <Checkbox value=\"ack\" color=\"primary\" />\n        </div>\n\n        <div style={{display: 'flex'}}>\n\n          <div style={{width: 150}}>State</div> <div style={{width: 450}}><Select\n            value={[\n            ]}\n            isMulti={true}\n            placeholder=\"None\"\n          /></div>\n          <Checkbox value=\"ack\" color=\"primary\" />\n        </div>\n\n        <div style={{display: 'flex'}}>\n\n          <div style={{width: 150}}>Zip</div> <div style={{width: 450}}><Select\n            value={[\n              {value: 1, label: \"Postal Code\"},\n            ]}\n            isMulti={true}\n            placeholder=\"None\"\n          /></div>\n          <Checkbox value=\"ack\" color=\"primary\" />\n        </div>\n\n        <div style={{display: 'flex'}}>\n\n          <div style={{width: 150}}>Country</div> <div style={{width: 450}}><Select\n            value={[\n            ]}\n            isMulti={true}\n            placeholder=\"None\"\n          /></div>\n          <Checkbox value=\"ack\" color=\"primary\" />\n        </div>\n\n        <div style={{display: 'flex'}}>\n\n          <div style={{width: 150}}>Longitude</div> <div style={{width: 450}}><Select\n            value={[\n              {value: 1, label: \"Position\"},\n            ]}\n            isMulti={true}\n            placeholder=\"None\"\n          /></div>\n          <Checkbox value=\"ack\" color=\"primary\" checked />\n          <div style={{width: 200}}><Select\n            value={[\n              {value: 1, label: \"delimited by space\"},\n            ]}\n            placeholder=\"None\"\n          /></div>\n          <div style={{width: 150}}><Select\n            value={[\n              {value: 1, label: \"1st value\"},\n            ]}\n            placeholder=\"None\"\n          /></div>\n\n        </div>\n\n        <div style={{display: 'flex'}}>\n\n          <div style={{width: 150}}>Latitude</div> <div style={{width: 450}}><Select\n            value={[\n              {value: 1, label: \"Position\"},\n            ]}\n            isMulti={true}\n            placeholder=\"None\"\n          /></div>\n          <Checkbox value=\"ack\" color=\"primary\" checked />\n          <div style={{width: 200}}><Select\n            value={[\n              {value: 1, label: \"delimited by space\"},\n            ]}\n            placeholder=\"None\"\n          /></div>\n          <div style={{width: 150}}><Select\n            value={[\n              {value: 1, label: \"2st value\"},\n            ]}\n            placeholder=\"None\"\n          /></div>\n\n        </div>\n\n        <h3>Sample Records based on selection</h3>\n\n        <div style={{display: 'flex'}}>\n\n          <div>\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Name:</div> <div>Joe Average</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Street Address:</div> <div>838 Wilshire Pl</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>City:</div> <div>Salt Lake City</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>State:</div> <div>NULL</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Zip:</div> <div>84102</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Country:</div> <div>NULL</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Longitude:</div> <div>-111.8688189</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Latitude</div> <div>40.7554569</div>\n            </div>\n          </div>\n\n          <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n\n          <div>\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Joy B. Awesome</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>828 E Sego Ave</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Salt Lake City</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>NULL</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>84102</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>NULL</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>-111.8677287</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>40.7550583</div>\n            </div>\n          </div>\n\n          <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n\n          <div>\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Jake Abomination</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>857 Wilshire Pl</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>Salt Lake City</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>NULL</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>84102</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>NULL</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>-111.8688182</div>\n            </div>\n            <br />\n            <div style={{display: 'flex'}}>\n              <div style={{width: 150}}>40.7554561</div>\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport {PieChart, Pie, Cell, Legend, Label, LabelList} from 'recharts';\n\nconst data01 = [\n  { name: 'Republican', value: 400, v: 89, color: 'red' },\n  { name: 'Democratic', value: 300, v: 100 },\n  { name: 'UUP', value: 200, v: 200 },\n  { name: 'Unaffiliated', value: 200, v: 20 },\n];\n\nconst data02 = [\n  { name: 'Republican', value: 2400 },\n  { name: 'Democratic', value: 4567 },\n  { name: 'UUP', value: 1398 },\n  { name: 'Unaffiliated', value: 9800 },\n];\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animation: true,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Analytics</h3>\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={data01}\n            dataKey=\"value\"\n            cx={200}\n            cy={200}\n            startAngle={180}\n            endAngle={0}\n            outerRadius={80}\n            label\n          >\n            {\n              data01.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={[\"red\",\"blue\",\"yellow\",\"grey\"][index]} />\n              ))\n            }\n            <Label value=\"Volunteering\" position=\"outside\" />\n            <LabelList position=\"outside\" />\n          </Pie>\n          <Pie\n            data={data02}\n            dataKey=\"value\"\n            cx={600}\n            cy={200}\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              data02.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={[\"red\",\"blue\",\"yellow\",\"grey\"][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              Agreed with you\n            </Label>\n          </Pie>\n        </PieChart>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router'\nimport jwt from 'jsonwebtoken';\nimport {notify_error} from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let token;\n\n    try {\n      token = this.props.location.pathname.split('/').pop();\n      jwt.decode(token);\n      this.props.refer._loadData(token);\n    } catch (e) {\n      notify_error(e, \"Unable to extract jwt from URI\");\n      token = 'error';\n    }\n\n    this.state = {token: token};\n  }\n\n  render() {\n    if (this.state.token === 'error') return (<div>There was an error parsing the jwt</div>);\n\n    return (\n      <Route render={() => (\n        <Redirect to=\"/\" />\n      )} />\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { _fetch, notify_error, Icon } from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cb_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let data = {};\n    try {\n      let res = await _fetch(this.props.server, '/volunteer/v1/dashboard');\n\n      data = await res.json();\n    } catch (e) {\n      notify_error(e, \"Unable to load dashboard info.\");\n    }\n\n    this.setState({cb_version: (data.version?data.version:'unknown')});\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}</div>\n        <div>{(this.state.cb_version?'volunteer-broker version '+this.state.cb_version:<CircularProgress height={15} />)}</div>\n        <div>&copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not for any candidate or political party.</div>\n        <div>This program is free software; refer to our <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\">License</a> for more details.</div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/OurVoiceUSA\"><Icon icon={faTwitter} /> @OurVoiceUSA</a></div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/OurVoiceUsa\"><Icon icon={faFacebook} /> @OurVoiceUSA</a></div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ourvoiceusa.org/\"><Icon icon={faGlobe} /> ourvoiceusa.org</a></div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport Volunteers from './components/Volunteers';\nimport Teams from './components/Teams';\nimport Turf from './components/Turf';\nimport Forms from './components/Forms';\nimport Map from './components/Map';\nimport ImportData from './components/ImportData';\nimport Analytics from './components/Analytics';\nimport Settings from './components/Settings';\nimport Jwt from './components/Jwt';\nimport About from './components/About';\n\nimport 'typeface-roboto';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport { _fetch, notify_error } from './common.js';\n\nconst drawerWidth = 175;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  avatar: {\n    margin: 10,\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    height: 320,\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n\n    this.state = {\n      open: true,\n      menuLogout: false,\n      server: {},\n      qserver: v.server,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.doSave = this.doSave.bind(this);\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\"%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!\", \"background: red; color: yellow; font-size: 45px\");\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async (jwt) => {\n    if (jwt)\n      localStorage.setItem('jwt', jwt);\n\n    this.setState({\n      server: {\n        hostname: localStorage.getItem('server'),\n        jwt: (jwt?jwt:localStorage.getItem('jwt')),\n      },\n    });\n\n    // don't load if no jwt\n    if (jwt) this._loadKeys();\n  }\n\n  _loadKeys = async () => {\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n\n    let res = await _fetch(this.state.server, '/volunteer/v1/google_maps_key');\n    let data = await res.json();\n\n    // load google places API\n    var aScript = document.createElement('script');\n    aScript.type = 'text/javascript';\n    aScript.src = \"https://maps.googleapis.com/maps/api/js?key=\"+data.google_maps_key+\"&libraries=places\";\n    document.head.appendChild(aScript);\n\n    this.setState({google_maps_key: data.google_maps_key});\n  }\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange(connectForm) {\n    this.setState({connectForm})\n  }\n\n  getUserProp(prop) {\n    let item;\n\n    if (!this.state.server.jwt) return null;\n\n    try {\n      item = jwt.decode(this.state.server.jwt)[prop];\n    } catch (e) {\n      notify_error(e, \"Holy crap this error should never happen!! Better dust off that résumé...\");\n      console.warn(e);\n    }\n    return item;\n  }\n\n  _logout() {\n    localStorage.removeItem('server');\n    localStorage.removeItem('jwt');\n    this.setState({menuLogout: false, server: {}});\n  }\n\n  doSave = async (event, user) => {\n    // mocked user\n    if (user) {\n      let token = jwt.sign(user, 'shhhhh');\n      localStorage.setItem('server', \"mocked\");\n      localStorage.setItem('jwt', token);\n      this.setState({server: {\n        hostname: \"npm start\",\n        jwt: token,\n        mock: true,\n      }});\n    } else {\n      // live poll\n      await this.singHello(event.target.server.value);\n    }\n  }\n\n  singHello = async (server) => {\n    let res;\n\n    localStorage.setItem('server', server);\n\n    try {\n      res = await fetch('https://'+server+'/volunteer/v1/hello', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.state.server.jwt?this.state.server.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({longitude: -118, latitude: 40}),\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url) return {error: true, msg: \"Missing required header.\"}\n\n      switch (res.status) {\n        case 200:\n          break; // valid - break to proceed\n        case 400:\n          return {error: true, msg: \"The server didn't understand the request sent from this device.\"};\n        case 401:\n          window.location.href = sm_oauth_url+\"/gm?app=HelloVoterHQ\";\n          return {error: false, flag: true};\n        case 403:\n          return {error: true, msg: \"We're sorry, but your request to volunteer with this server has been rejected.\"};\n        default:\n          return {error: true, msg: \"Unknown error connecting to server.\"};\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true) return {error: false, msg: \"The server said: \"+body.msg};\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({server: server, dbx: null, user: this.state.user});\n        return {error: false, flag: true};\n      }\n    } catch (e) {\n      console.warn(\"singHello: \"+e);\n      return {error: true, msg: \"Unable to make a connection to target server\"};\n    }\n\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { server } = this.state;\n\n    if (!server.hostname)\n      return (<Login refer={this} />);\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <AppBar\n            position=\"absolute\"\n            className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n          >\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(\n                  classes.menuButton,\n                  this.state.open && classes.menuButtonHidden,\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                <div style={{margin: 10}}>HelloVoterHQ @ {server.hostname}</div>\n              </Typography>\n              <Avatar\n                alt=\"Remy Sharp\"\n                src={this.getUserProp('avatar')}\n                className={classes.avatar}\n                onClick={() => window.location.href='/HelloVoterHQ/#/volunteers/view/'+this.getUserProp('id')} />\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n                <Link to={'/'}>\n                  <ListItem button>\n                      <ListItemIcon><DashboardIcon /></ListItemIcon>\n                      <ListItemText primary=\"Dashboard\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/volunteers/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <PersonIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Volunteers\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/teams/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <PeopleIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Teams\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/turf/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <MapIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Turf\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/forms/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <AssignmentIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Forms\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/map/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <NavigationIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Map\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/import/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <PresentToAllIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Import Data\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/analytics/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <BarChartIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Analytics\" />\n                  </ListItem>\n                </Link>\n                <Link to={'/settings/'}>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <SettingsIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                  </ListItem>\n                </Link>\n              </List>\n              <Divider />\n              <List>\n                <ListItem button onClick={this.handleClickLogout}>\n                  <ListItemIcon>\n                    <IndeterminateCheckBoxIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Logout\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n              <Link to={'/about/'}>\n                <ListItem button>\n                  <ListItemIcon>\n                    <AccountBalanceIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"About\" />\n                </ListItem>\n              </Link>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/tree/mast\n  er/docs/\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <HelpIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Help\" />\n                </ListItem>\n              </a>\n            </List>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer/>\n            <Switch>\n              <Route exact={true} path=\"/\" render={() => <Dashboard server={server} />} />\n              <Route path=\"/volunteers/\" render={() => <Volunteers server={server} />} />\n              <Route path=\"/teams/\" render={() => <Teams server={server} />} />\n              <Route path=\"/turf/\" render={() => <Turf server={server} />} />\n              <Route path=\"/forms/\" render={() => <Forms server={server} />} />\n              <Route path=\"/map/\" render={() => <Map server={server} apiKey={this.state.google_maps_key} />} />\n              <Route path=\"/import/\" render={() => <ImportData server={server} />} />\n              <Route path=\"/analytics/\" render={() => <Analytics server={server} />} />\n              <Route path=\"/settings/\" render={() => <Settings server={server} />} />\n              <Route path=\"/jwt/\" render={(props) => <Jwt {...props} refer={this} />} />\n              <Route path=\"/about/\" render={() => <About server={server} />} />\n              <Route component={NoMatch} />\n            </Switch>\n            <Dialog\n              open={this.state.menuLogout}\n              onClose={this.handleCloseLogout}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">Are you sure you wish to logout?</DialogTitle>\n              <DialogActions>\n                <Button onClick={this.handleCloseLogout} color=\"primary\" autoFocus>\n                  No\n                </Button>\n                <Button onClick={() => this._logout()} color=\"primary\">\n                  Yes\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br /><br />\n      <code>{location.pathname}</code>\n      <br /><br />\n      If you feel this page is in error, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\">\n      report an issue</a> and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}