{"version":3,"sources":["components/Turf/CardTurf.jsx","components/Turf/CardTurfFull.jsx","common.js","components/QRCodes.jsx","components/Map.jsx","components/Teams.jsx","components/Turf/ListTurf.jsx","components/Turf/TurfOptions.jsx","components/Turf/Turf.jsx","components/Turf/index.js","components/Forms.jsx","components/Volunteers.jsx","components/Elements/MapSelect.jsx","components/Elements/PaperTable.jsx","components/Elements/ProgressBar.jsx","components/Elements/index.js","components/About.jsx","components/Analytics.jsx","components/Dashboard/CardDashboard.jsx","components/Dashboard/Cards.jsx","components/Dashboard/index.js","components/Dashboard/Dashboard.jsx","components/Attributes.jsx","components/ImportData/constants.js","components/ImportData/utilities.js","components/ImportData/ImportMap.jsx","components/ImportData/PreviewItem.jsx","components/ImportData/ImportPreview.jsx","components/ImportData/ImportData.jsx","components/Queue.jsx","app.styles.js","components/Loading.jsx","components/Login.jsx","components/LogoutDialog.jsx","components/Settings.jsx","components/Header/Header.jsx","components/Header/MenuItems.jsx","components/Header/Sidebar.jsx","routes/NoMatch.jsx","routes/Routes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CardTurf","props","handleTeamsChange","selectedTeamsOption","a","global","state","refer","setState","saving","obj","_handleSelectChange","add","i","_fetch","teamId","turfId","id","rm","notify_success","notify_error","handleMembersChange","selectedMembersOption","vId","_loadData","turf","volunteers","members","teams","teamsSelected","loading","Promise","all","_loadTurf","_loadVolunteers","_loadTeams","teamOptions","membersOption","forEach","t","push","value","_searchStringify","label","key","team","c","volunteer","this","style","display","padding","icon","faStreetView","width","height","color","name","edit","to","Component","CardTurfFull","onChange","options","isMulti","isSearchable","placeholder","JSON","stringify","stats","spec","header","tooltip","params","rows","Object","keys","map","k","jobRuntime","start","end","prettyMs","jobNumber","num","formatNumber","fractionDigits","tsToStr","ts","Date","toString","msg","NotificationManager","success","e","error","console","warn","uri","method","body","server","token","https","match","fetch","orgId","headers","Authorization","res","status","Error","text","json","_browserLocation","isGeolocationAvailable","isGeolocationEnabled","coords","access","lng","longitude","lat","latitude","Icon","data-tip","iconName","RootLoader","flag","faSync","onClick","func","children","DialogSaving","aria-labelledby","aria-describedby","open","position","top","left","right","backgroundColor","disableShrink","o","parse","last_seen","created","toLowerCase","_loadImports","imports","data","_inviteLink","inviteCode","_loadQRCode","qrcode","QRCode","toDataURL","img","_loadQRCodes","qrcodes","_loadVolunteer","byType","call","_loadTurfs","_loadNearbyTurfs","dist","_loadTeam","_loadForm","form","_loadForms","forms","_loadAttribute","attribute","_loadAttributes","attributes","_loadAddressData","formId","_loadPeopleAddressData","aId","oldopt","newopt","prior","now","ni","n","indexOf","pi","p","PlacesAutocomplete","addressSearch","getInputProps","getSuggestionItemProps","suggestions","className","suggestion","description","TimeAgo","locale","en","QRCodes","search","handlePageClick","pageNum","selected","perPage","localStorage","getItem","thisQRCode","onTypeSearch","bind","handlePageNumChange","setItem","event","target","includes","type","exact","path","render","ListQRCodes","CardQRCode","onClose","paginate","list","idx","Math","floor","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","length","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","component","qId","handleFormsChange","selectedFormsOption","handleTurfChange","selectedTurfOption","leaderOptions","formOptions","turfOptions","ass","f","direct","turfs","_disableQRCode","onSave","val","ReactTooltip","rebuild","alignItems","alt","src","CardQRCodeFull","link","button","faQrcode","size","primary","secondary","rel","href","last_used","format","num_volunteers","filter","disabled","App","loadMarkerData","onMarkerClick","marker","showingInfoWindow","address","place","title","selectedPlace","activeMarker","onTurfClick","log","infoLocation","paths","activeTurf","mapProps","center","addresses","onMapClicked","visits","polygons","location","geometry","geojson2polygons","polygon","google","zoom","initialCenter","onReady","onDragend","street","city","zip","url","statusColor","strokeColor","strokeWeight","fillColor","fillOpacity","visible","ModalMarker","people","units","ModalPerson","person","attrs","party","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","handleClickDelete","menuDelete","handleCloseDelete","_deleteTeam","window","_createTeam","addTeamForm","getValue","formServerItems","struct","String","formServerOptions","fields","ListTeams","Form","ref","onChangeTeam","CardTeam","autoFocus","teamn","turfSelected","formSelected","memberOptions","flex","overflow","faUsers","CardTeamFull","ListTurf","TurfOptions","handleStateChange","selectedStateOption","typeOptions","us_states","sldu","sldl","selectedDrawOption","stateOptions","selectedTypeOption","handleTypeChange","onMenuClose","selectedTypeFetch","_showDistrictOption","districtOptions","selectedDistrictOption","handleDistrictChange","CircularProgress","accept","handleImportFiles","files","debounce","onTypeAddress","onSelect","submitAddress","geocodeByAddress","getLatLng","pos","addressCoords","handleDrawChange","importFileData","reader","FileReader","onload","result","readAsText","_deleteTurf","_createTurf","addTurfForm","objs","circleToPolygon","urlFromDist","replace","initState","thisTurf","drawOptions","onChangeTurf","_showSubmitButton","Button","Dialog","DialogTitle","DialogActions","reorder","startIndex","endIndex","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getItemStyle","isDragging","draggableStyle","userSelect","grid","margin","background","getListStyle","isDraggingOver","Forms","getList","id2List","onDragEnd","attributes_selected","droppable","droppable2","optional","values","_deleteForm","_createForm","addFormForm","formName","trim","order","ListForms","onChangeForm","flexDirection","provided","snapshot","innerRef","item","draggableId","draggableProps","dragHandleProps","required","inputTypeToReadable","CardForm","faClipboard","CardFormFull","NEARBY_DIST","Volunteers","thisVolunteer","ready","unassigned","denied","invited","locked","ListVolunteers","CardVolunteer","handleLeaderChange","selectedLeaderOption","hometurf","nearbyturf","x","y","faHome","leader","autoturf","_lockVolunteer","term","avatar","locationstr","extract_addr","VolunteerBadges","CardVolunteerFull","email","phone","VolunteerAddress","slice","badges","admin","faCrown","faFlag","faBan","faCheckCircle","faExclamationTriangle","addr","arr","split","shift","join","MapSelect","checked","map1","map2","_handleCheck","updateFormats","_setValue","_setMapValue","prop","_renderCheckbox","Checkbox","_renderMapOptions","Fragment","checkbox","dimensions","labelWidth","React","specVal","row","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","max","ceil","count","rowsPerPage","classes","theme","root","IconButton","aria-label","direction","TablePaginationActionsWrapped","withStyles","flexShrink","palette","marginLeft","spacing","unit","withTheme","PaperTable","handleChangePage","handleChangeRowsPerPage","emptyRows","min","Paper","tableWrapper","Table","table","TableHead","TableRow","Tooltip","TableCell","TableBody","s","funcItemTooltip","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","marginTop","minWidth","overflowX","flexGrow","completed","Check","LinearProgress","paddingTop","variant","componentDidMount","cb_version","version","neo4j_version","process","faTwitter","faFacebook","faGlobe","renderLabelContent","percent","midAngle","transform","textAnchor","toFixed","_init","attributeOptions","doQuery","selectedAttributeOption","data_breakdown","include_null","d","pop","handleAttributeChange","animation","dataKey","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","isAnimationActive","entry","fill","CardDashboard","sortableElement","faShieldAlt","stat","Cards","sortableContainer","dash","card","cards","Dashboard","onSortEnd","oldIndex","newIndex","arrayMove","admins","noAdmins","vol","faUser","faMap","faChartPie","displayType","thousandSeparator","faMapMarkerAlt","dbsz","filesize","dbsize","round","faDatabase","axis","Modal","getUserProp","value2select","ucFirst","_deleteAttribute","_createAttribute","addAttributeForm","addattributeForm","onChangeAttribute","ListAttributes","CardAttribute","onSaveName","onSaveType","CardAttributeFull","_pipe","g","pipe","fns","reduce","PAPER_TABLE_SPEC","ImportMap","formats","mapped","formatHeaders","field","updateMapped","mapData","getMapped","generateFormats","getAllIndexes","parseData","isArray","indexes","findIndex","total","next","PreviewItem","random","createRandomKey","parseInt","ImportPreview","titles","records","record","defaultState","sending","submitting","ImportData","preProcess","filename","sendData","sepm","seps","RegExp","sepr","percentage","setTimeout","_resetState","faFileCsv","Divider","onError","preProcessError","onFileLoaded","jobStatus","job","started","showErrorIfError","taskObjFromQueue","Queue","r","q","styles","main","marginRight","breakpoints","up","paper","submit","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","appBarSpacer","content","chartContainer","tableContainer","h5","marginBottom","Loading","CssBaseline","Typography","role","Login","loginOptions","pathname","dev","selectedLoginOption","reload","Avatar","onSubmit","preventDefault","doSave","fullWidth","LoginOption","FormControl","InputLabel","htmlFor","Input","autoComplete","defaultValue","FormControlLabel","control","qserver","LogoutDialog","menuLogout","handleCloseLogout","_logout","Header","handleDrawerOpen","AppBar","classNames","Toolbar","disableGutters","noWrap","MenuItems","assignments","handleClickLogout","List","ListItem","ListItemIcon","ListItemText","Sidebar","handleDrawerClose","Drawer","NoMatch","Routes","Teams","Turf","Map","google_maps_key","hai","singHello","jwt","decode","clear","_loadKeys","aScript","document","createElement","head","appendChild","connectForm","substring","host","sm_oauth_url","get","sm","user","v","queryString","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"2TAuBaA,EAAb,YACE,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAcRC,kBAfmB,sCAeC,WAAMC,GAAN,qBAAAC,EAAA,qDACVC,EAAW,EAAKC,MAAhBD,OAEHF,IAAqBA,EAAsB,IAChD,EAAKF,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJlB,SAMZC,EAAMC,YACR,EAAKL,MAAMH,oBACXA,GARc,OAAAC,EAAA,KAWFM,EAAIE,KAXF,qDAWPC,EAXO,qBAYRC,YACJT,EACA,0BACA,OACA,CAAEU,OAAQL,EAAIE,IAAIC,GAAIG,OAAQ,EAAKf,MAAMgB,KAhB7B,sCAAAb,EAAA,KAoBFM,EAAIQ,IApBF,sDAoBPL,EApBO,qBAqBRC,YACJT,EACA,6BACA,OACA,CAAEU,OAAQL,EAAIQ,GAAGL,GAAIG,OAAQ,EAAKf,MAAMgB,KAzB5B,gCA6BhBE,YAAe,2BACf,EAAKX,SAAS,CAAEL,wBA9BA,kDAgChBiB,YAAa,EAAD,GAAI,+BAhCA,QAkClB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAlClB,wDAfD,wDAoDnBY,oBApDmB,sCAoDG,WAAMC,GAAN,qBAAAlB,EAAA,qDACZC,EAAW,EAAKC,MAAhBD,OAEHiB,IAAuBA,EAAwB,IACpD,EAAKrB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJhB,SAMdC,EAAMC,YACR,EAAKL,MAAMgB,sBACXA,GARgB,OAAAlB,EAAA,KAWJM,EAAIE,KAXA,qDAWTC,EAXS,qBAYVC,YACJT,EACA,+BACA,OACA,CAAEkB,IAAKb,EAAIE,IAAIC,GAAIG,OAAQ,EAAKf,MAAMgB,KAhBxB,sCAAAb,EAAA,KAoBJM,EAAIQ,IApBA,sDAoBTL,EApBS,qBAqBVC,YACJT,EACA,kCACA,OACA,CAAEkB,IAAKb,EAAIQ,GAAGL,GAAIG,OAAQ,EAAKf,MAAMgB,KAzBvB,gCA6BlBE,YAAe,gCACf,EAAKX,SAAS,CAAEc,0BA9BE,kDAgClBF,YAAa,EAAD,GAAI,+BAhCE,QAkCpB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAlChB,wDApDH,wDAyFnBe,UAzFmB,qBAyFP,kDAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJoB,EAAO,GACTC,EAAa,GACbC,EAAU,GACVC,EAAQ,GACRC,EAAgB,GAElB,EAAKrB,SAAS,CAAEsB,SAAS,IATf,kBAYkDC,QAAQC,IAAI,CACpEC,YAAU5B,EAAQ,EAAKJ,MAAMgB,IAAI,GACjCiB,YAAgB7B,GAChB6B,YAAgB7B,EAAQ,OAAQ,EAAKJ,MAAMgB,IAC3CkB,YAAW9B,GACX8B,YAAW9B,EAAQ,OAAQ,EAAKJ,MAAMgB,MAjBhC,mCAYPQ,EAZO,KAYDC,EAZC,KAYWC,EAZX,KAYoBC,EAZpB,KAY2BC,EAZ3B,8DAoBRT,YAAa,EAAD,GAAI,6BApBR,kBAqBD,EAAKZ,SAAS,CAAEsB,SAAS,KArBxB,QAwBNM,EAAc,GACdC,EAAgB,GAChBlC,EAAsB,GACtBmB,EAAwB,GAE5BM,EAAMU,QAAQ,SAAAC,GACZH,EAAYI,KAAK,CACfC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,qBAI9DsB,EAAcS,QAAQ,SAAAC,GACpBpC,EAAoBqC,KAAK,CACvBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,qBAI9DmB,EAAWY,QAAQ,SAAAQ,GACjBT,EAAcG,KAAK,CACjBC,MAAOC,YAAiBI,GACxB7B,GAAI6B,EAAE7B,GACN0B,MAAO,kBAAC,IAAD,CAAetC,OAAQA,EAAQuC,IAAKE,EAAE7B,GAAI8B,UAAWD,EAAGvC,MAAK,qBAIxEoB,EAAQW,QAAQ,SAAAQ,GACdxB,EAAsBkB,KAAK,CACzBC,MAAOC,YAAiBI,GACxB7B,GAAI6B,EAAE7B,GACN0B,MAAO,kBAAC,IAAD,CAAetC,OAAQA,EAAQuC,IAAKE,EAAE7B,GAAI8B,UAAWD,EAAGvC,MAAK,qBAIxE,EAAKC,SAAS,CACZiB,OACAC,aACAU,cACAC,gBACAlC,sBACAmB,wBACAQ,SAAS,IApED,wDAtFV,EAAKxB,MAAQ,CACXD,OAAQJ,EAAMI,OACdoB,KAAM,EAAKxB,MAAMwB,KACjBtB,oBAAqB,GACrBmB,sBAAuB,IAPR,EADrB,iFAaS0B,KAAK1C,MAAMmB,MAAMuB,KAAKxB,cAb/B,+BAkKY,IACAC,EAASuB,KAAK1C,MAAdmB,KAER,OAAKA,GAAQuB,KAAK1C,MAAMwB,QACf,kBAAC,IAAD,MAIP,6BACE,yBAAKmB,MAAO,CAAEC,QAAS,OAAQC,QAAS,SACtC,yBAAKF,MAAO,CAAEE,QAAS,aACrB,kBAAC,IAAD,CACEC,KAAMC,IACNJ,MAAO,CAAEK,MAAO,GAAIC,OAAQ,GAAIC,MAAO,UACtC,IACF/B,EAAKgC,KAAM,IACXT,KAAK/C,MAAMyD,KACV,GAEA,kBAAC,IAAD,CAAMC,GAAI,cAAgBlC,EAAKR,IAA/B,UAIL+B,KAAK/C,MAAMyD,KAAO,kBAAC,IAAD,CAAcrD,OAAQA,EAAQoB,KAAMA,EAAMlB,MAAOyC,OAAW,QAzLvF,GAA8BY,e,mDCvB9B,oEAOaC,GAPb,KAO4B,SAAA5D,GAAK,OAC/B,6BACE,4DAEE,kBAAC,IAAD,CACEwC,MAAOxC,EAAMM,MAAMD,MAAMH,oBACzB2D,SAAU7D,EAAMM,MAAML,kBACtB6D,QAAS9D,EAAMM,MAAMD,MAAM8B,YAC3B4B,SAAS,EACTC,cAAc,EACdC,YAAY,SAEd,6BAVF,6CAYE,kBAAC,IAAD,CACEzB,MAAOxC,EAAMM,MAAMD,MAAMgB,sBACzBwC,SAAU7D,EAAMM,MAAMc,oBACtB0C,QAAS9D,EAAMM,MAAMD,MAAM+B,cAC3B2B,SAAS,EACTC,cAAc,EACdC,YAAY,SAEd,6BACA,0CACA,6BAAMC,KAAKC,UAAUnE,EAAMM,MAAMD,MAAMmB,KAAK4C,QAC5C,kBAAC,IAAD,CACEC,KAAM,CACJ,CACEC,OAAQ,aACRC,QAAS,iDACTC,OAAQ,CAAC,SAEX,CACEF,OAAQ,kBACRC,QAAS,iDACTC,OAAQ,CAAC,oBAEX,CACEF,OAAQ,eACRC,QAAS,uCACTC,OAAQ,CAAC,iBAEX,CACEF,OAAQ,uBACRC,QAAS,6DACTC,OAAQ,CAAC,yBAEX,CACEF,OAAQ,+BACRC,QAAS,4DACTC,OAAQ,CAAC,kCAGbC,KACEC,OAAOC,KAAK3E,EAAMM,MAAMD,MAAMmB,KAAK4C,MAAM,uBAAuBQ,IAAI,SAAAC,GAElE,OADA7E,EAAMM,MAAMD,MAAMmB,KAAK4C,MAAM,sBAAsBS,GAAnD,KAAgEA,EACzD7E,EAAMM,MAAMD,MAAMmB,KAAK4C,MAAM,sBAAsBS,Y,uoCCjD/D,SAASC,EAAWC,EAAOC,GAChC,OAAIA,EACKC,IAASD,EAAID,GAEb,GAGJ,SAASG,EAAUC,GACxB,OAAIA,EAAYC,IAAaD,EAAK,CAAEE,eAAgB,IACxC,GAGP,SAASC,EAAQC,GACtB,OAAO,IAAIC,KAAKD,GAAIE,WAGf,SAASvE,EAAewE,GAC7BC,sBAAoBC,QAAQF,EAAK,UAAW,KAGvC,SAASvE,EAAa0E,EAAGH,GAC9BC,sBAAoBG,MAAMJ,EAAK,QAAS,KACxCK,QAAQC,KAAKH,GAGR,SAAehF,EAAtB,wC,2CAAO,WAAsBT,EAAQ6F,EAAKC,EAAQC,GAA3C,uBAAAhG,EAAA,wDACAC,GAAWA,EAAOC,MADlB,0DAGqBD,EAAOC,MAAzB+F,EAHH,EAGGA,OAAQC,EAHX,EAGWA,MAEZC,GAAQ,EACRF,EAAOG,MAAM,YAAWD,GAAQ,GAE/BJ,IAAQA,EAAS,OARjB,SAUWM,MAAM,QAAQF,EAAM,IAAI,IAAI,MAAQF,EAAS,iBAAmBhG,EAAOC,MAAMoG,MAAM,IAAIrG,EAAOC,MAAMoG,MAAM,IAAM,UAAYR,EAAK,CAC/IC,OAAQA,EACRQ,QAAS,CACPC,cAAe,UAAYN,EAC3B,eAAgB,oBAElBF,KAAMA,EAAOjC,KAAKC,UAAUgC,GAAQ,OAhBjC,aAUDS,EAVC,QAmBGC,QAAU,KAnBb,6BAmB4BC,MAnB5B,UAmBwCF,EAAIG,OAnB5C,0EAqBEH,EAAII,QArBN,2C,sBAwBA,SAASC,EAAiBjH,GAC/B,OAAKA,EAAMkH,wBAA2BlH,EAAMmH,qBAExCnH,EAAMoH,OACD,CACLC,QAAQ,EACRC,IAAKtH,EAAMoH,OAAOG,UAClBC,IAAKxH,EAAMoH,OAAOK,UAEf,CAAEJ,QAAQ,GAPR,CAAEA,QAAQ,GAUd,IAAMK,EAAO,SAAA1H,GAAK,OACvB,kBAAC,IAAD,eACEgD,MAAO,CAAEK,MAAO,IAChBsE,WAAU3H,EAAM,YAAcA,EAAM,YAAcA,EAAMmD,KAAKyE,UACzD5H,KAIK6H,EAAa,SAAA7H,GACxB,OAAIA,EAAM8H,KAAa,kBAAC,IAAD,MAGnB,6BACE,kBAACJ,EAAD,CACEvE,KAAM4E,IACNxE,MAAM,QACNyE,QAAShI,EAAMiI,KACfN,WAAS,gBAEX,6BAAM3H,EAAMkI,YAKPC,EAAe,SAAAnI,GAC1B,OAAIA,EAAM8H,KAEN,kBAAC,IAAD,CACEM,kBAAgB,qBAChBC,mBAAiB,2BACjBC,MAAM,GAEN,yBACEtF,MAAO,CACLuF,SAAU,WACVC,IAAK,IACLC,KAAM,MACNC,MAAO,MACPC,gBAAiB,QACjBzF,QAAS,KAGX,oDAEE,6BACA,6BACA,kBAAC,IAAD,CAAkB0F,eAAa,OAKlC,+BAGF,SAASnG,EAAiBhC,GAE/B,IAAIoI,EAAI3E,KAAK4E,MAAM5E,KAAKC,UAAU1D,IAIlC,cAHOoI,EAAEE,iBACFF,EAAEG,eACFH,EAAE7H,GACFkD,KAAKC,UAAU0E,GAAGI,cAGpB,SAAeC,EAAtB,kC,2CAAO,WAA4B9I,GAA5B,iBAAAD,EAAA,4DACDgJ,EAAU,GADT,kBAGctI,EAAOT,EAAQ,gBAH7B,OAGCgJ,EAHD,OAIHD,EAAUC,GAAQA,EAAKA,KAAOA,EAAKA,KAAO,GAJvC,gDAMHjI,EAAa,EAAD,GAAI,+BANb,iCAQEgI,GARF,wD,sBAWA,SAASE,EAAYC,EAAYlD,EAAQK,GAC9C,MAAO,QAAQL,EAAOG,MAAM,UAAU,GAAG,KAAK,MAAMH,EAAO,kBAAkBK,EAAMA,EAAM,IAAI,IAAI,4BAA4B6C,EAAW,KAAK7C,EAAM,SAASA,EAAM,UAAUL,GAGvK,SAAemD,EAAtB,oC,2CAAO,WAA2BnJ,EAAQY,GAAnC,eAAAb,EAAA,4DACDqJ,EAAS,GADR,kBAGY3I,EACbT,EACA,mBAAqBY,GALpB,cAGHwI,EAHG,gBAOgBC,IAAOC,UAAUL,EAAYrI,EAAIZ,EAAOC,MAAM+F,OAAQhG,EAAOC,MAAMoG,QAPnF,OAOH+C,EAAOG,IAPJ,yDASHxI,EAAa,EAAD,GAAI,+BATb,iCAWEqI,GAXF,yD,sBAcA,SAAeI,EAAtB,oC,2CAAO,WAA4BxJ,EAAQY,GAApC,eAAAb,EAAA,4DACD0J,EAAU,GADT,kBAIahJ,EAAOT,EAAQ,iBAJ5B,OAIHyJ,EAJG,uDAMH1I,EAAa,EAAD,GAAI,+BANb,iCASE0I,GATF,wD,sBAYA,SAAeC,EAAtB,oC,2CAAO,WAA8B1J,EAAQY,GAAtC,eAAAb,EAAA,4DACD2C,EAAY,GADX,kBAGejC,EAChBT,EACA,qBAAuBY,GALtB,OAGH8B,EAHG,uDAQH3B,EAAa,EAAD,GAAI,kCARb,iCAUE2B,GAVF,wD,sBAaA,SAAeb,EAAtB,sC,2CAAO,WAA+B7B,EAAQ2J,EAAQ/I,GAA/C,iBAAAb,EAAA,4DACDsB,EAAa,GADZ,SAICuI,EAAO,iBAEI,SAAXD,EAAmBC,EAAO,4BAA8BhJ,EACxC,SAAX+I,EACPC,EAAO,uCAAyChJ,EAC9B,SAAX+I,IACPC,EAAO,uCAAyChJ,GAV/C,SAYgBH,EAAOT,EAAQ,IAAM4J,GAZrC,OAYHvI,EAZG,uDAcHN,EAAa,EAAD,GAAI,kCAdb,iCAiBEM,GAjBF,wD,sBAqBA,SAAeO,EAAtB,oC,2CAAO,WAAyB5B,EAAQY,GAAjC,eAAAb,EAAA,4DACDqB,EAAO,GADN,kBAIUX,EACXT,EACA,oBAAsBY,GANrB,OAIHQ,EAJG,uDASHL,EAAa,EAAD,GAAI,6BATb,iCAYEK,GAZF,wD,sBAeA,SAAeyI,EAAtB,sC,2CAAO,WAA0B7J,EAAQU,EAAQgH,GAA1C,mBAAA3H,EAAA,4DACDqB,EAAO,GADN,SAICwI,EAAO,aAAelC,EAAO,iBAAmB,IAChDhH,IACFkJ,EAAO,yBAA2BlJ,GAAUgH,EAAO,iBAAmB,KANrE,SAOcjH,EAAOT,EAAQ,IAAM4J,GAPnC,OAOCZ,EAPD,OAQH5H,EAAO4H,EAAKA,KAAOA,EAAKA,KAAO,GAR5B,kDAUHjI,EAAa,EAAD,GAAI,6BAVb,iCAaEK,GAbF,yD,sBAgBA,SAAe0I,EAAtB,wC,2CAAO,WAAgC9J,EAAQkH,EAAKE,EAAK2C,GAAlD,iBAAAhK,EAAA,4DACDqB,EAAO,GADN,kBAIcX,EAAOT,EAAQ,mCAAmCkH,EAAI,aAAaE,GAAK2C,EAAK,SAASA,EAAK,KAJzG,OAICf,EAJD,OAKH5H,EAAO4H,EAAKA,KAAOA,EAAKA,KAAO,GAL5B,gDAOHjI,EAAa,EAAD,GAAI,6BAPb,iCAUEK,GAVF,wD,sBAaA,SAAe4I,EAAtB,oC,2CAAO,WAAyBhK,EAAQY,GAAjC,eAAAb,EAAA,4DACDyC,EAAO,GADN,kBAIU/B,EACXT,EACA,oBAAsBY,GANrB,OAIH4B,EAJG,uDASHzB,EAAa,EAAD,GAAI,6BATb,iCAYEyB,EAAKwG,KAAK,IAZZ,wD,sBAeA,SAAelH,EAAtB,sC,2CAAO,WAA0B9B,EAAQ2J,EAAQ/I,GAA1C,mBAAAb,EAAA,4DACDwB,EAAQ,GADP,SAICqI,EAAO,YAEI,SAAXD,EAAmBC,EAAO,kCAAoChJ,EAC9C,SAAX+I,IAAmBC,EAAO,kCAAoChJ,GAPpE,SAScH,EAAOT,EAAQ,IAAM4J,GATnC,OASCZ,EATD,OAUHzH,EAAQyH,EAAKA,KAAOA,EAAKA,KAAO,GAV7B,kDAYHjI,EAAa,EAAD,GAAI,8BAZb,iCAeEQ,GAfF,yD,sBAkBA,SAAe0I,GAAtB,qC,6CAAO,WAAyBjK,EAAQY,GAAjC,eAAAb,EAAA,4DACDmK,EAAO,GADN,kBAIUzJ,EACXT,EACA,oBAAsBY,GANrB,OAIHsJ,EAJG,uDASHnJ,EAAa,EAAD,GAAI,6BATb,iCAYEmJ,GAZF,wD,sBAeA,SAAeC,GAAtB,qC,6CAAO,WAA0BnK,EAAQU,GAAlC,mBAAAX,EAAA,4DACDqK,EAAQ,GADP,SAMSvE,EAARnF,EAAc,yBAA2BA,EAClC,YAPR,SAScD,EAAOT,EAAQ,IAAM6F,GATnC,OASCmD,EATD,OAUHoB,EAAQpB,EAAKA,KAAOA,EAAKA,KAAO,GAV7B,gDAYHjI,EAAa,EAAD,GAAI,6BAZb,iCAeEqJ,GAfF,wD,sBAkBA,SAAeC,GAAtB,qC,6CAAO,WAA8BrK,EAAQY,GAAtC,iBAAAb,EAAA,4DACDuK,EAAY,GADX,kBAIc7J,EAAOT,EAAQ,qBAAqBY,GAJlD,QAICoI,EAJD,QAKMA,OAAMsB,EAAYtB,EAAKA,KAAK,IALlC,gDAOHjI,EAAa,EAAD,GAAI,kCAPb,iCAUEuJ,GAVF,wD,sBAaA,SAAeC,GAAtB,mC,6CAAO,WAA+BvK,GAA/B,iBAAAD,EAAA,4DACDyK,EAAa,GADZ,kBAIc/J,EAAOT,EAAQ,mBAJ7B,OAICgJ,EAJD,OAKHwB,EAAaxB,EAAKA,KAAOA,EAAKA,KAAO,GALlC,gDAOHjI,EAAa,EAAD,GAAI,kCAPb,eAULyJ,EAAWvI,QAAQ,SAAAlC,GACZA,EAAEuC,QAAOvC,EAAEuC,MAAQvC,EAAEqD,QAXvB,kBAcEoH,GAdF,wD,sBAiBA,SAAeC,GAAtB,yC,6CAAO,WAAgCzK,EAAQkH,EAAKE,EAAKsD,GAAlD,eAAA3K,EAAA,4DACDiJ,EAAO,GADN,kBAGUvI,EAAOT,EAAQ,gDAAgDkH,EAAI,aAAaE,GAAKsD,EAAO,WAAWA,EAAO,KAHxH,OAGH1B,EAHG,uDAKHjI,EAAa,EAAD,GAAI,uCALb,iCAOEiI,GAPF,wD,sBAUA,SAAe2B,GAAtB,uC,6CAAO,WAAsC3K,EAAQ4K,EAAKF,GAAnD,eAAA3K,EAAA,4DACDiJ,EAAO,GADN,kBAGUvI,EAAOT,EAAQ,6BAA6B4K,GAAKF,EAAO,WAAWA,EAAO,KAHpF,OAGH1B,EAHG,uDAKHjI,EAAa,EAAD,GAAI,uCALb,iCAOEiI,GAPF,wD,sBAUA,SAAS1I,GAAoBuK,EAAQC,GAC1C,IAAIvK,EAAM,GACNM,EAAK,GAEJgK,IAAQA,EAAS,IACjBC,IAAQA,EAAS,IAEtB,IAAIC,EAAQF,EAAOrG,IAAI,SAAAiB,GACrB,OAAOA,EAAE7E,KAGPoK,EAAMF,EAAOtG,IAAI,SAAAiB,GACnB,OAAOA,EAAE7E,KAIX,IAAK,IAAIqK,KAAMD,EAAK,CAClB,IAAIE,EAAIF,EAAIC,IACc,IAAtBF,EAAMI,QAAQD,IAChB3K,EAAI4B,KAAK+I,GAKb,IAAK,IAAIE,KAAML,EAAO,CACpB,IAAIM,EAAIN,EAAMK,IACU,IAApBJ,EAAIG,QAAQE,IACdxK,EAAGsB,KAAKkJ,GAIZ,MAAO,CAAE9K,IAAKA,EAAKM,GAAIA,GAGlB,IAAMyK,GAAqB,SAAA1L,GAAK,OACrC,kBAAC,IAA6BA,EAC3B2L,KAICA,GAAgB,SAAC,GAAD,IACpBC,EADoB,EACpBA,cACAC,EAFoB,EAEpBA,uBACAC,EAHoB,EAGpBA,YACAjK,EAJoB,EAIpBA,QAJoB,OAMpB,yBAAKkK,UAAU,qBACb,0BAAWH,KACX,yBAAKG,UAAU,mCACZlK,GAAW,2CACXiK,EAAYlH,IAAI,SAAAoH,GAAU,OACzB,wBAASH,EAAuBG,GAC9B,8BAAOA,EAAWC,oB,2YCjY5BC,IAAQC,OAAOC,K,IAEMC,E,YACnB,WAAYrM,GAAQ,IAAD,uBACjB,4CAAMA,KAmCRuB,UApCmB,qBAoCP,8BAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJyJ,EAAU,GACd,EAAKtJ,SAAS,CAAEsB,SAAS,EAAMyK,OAAQ,KAJ7B,kBAMQ1C,YAAaxJ,GANrB,OAMRyJ,EANQ,uDAQR1I,YAAa,EAAD,GAAI,2BARR,QAUV,EAAKZ,SAAS,CAAEsB,SAAS,EAAOgI,YAVtB,uDApCO,EAiDnB0C,gBAAkB,SAAAnD,GAChB,EAAK7I,SAAS,CAAEiM,QAASpD,EAAKqD,SAAW,KA/CzC,IAAIC,EAAUC,aAAaC,QAAQ,kBAHlB,OAIZF,IAASA,EAAU,GAExB,EAAKrM,MAAQ,CACXD,OAAQJ,EAAMI,OACdyB,SAAS,EACTgL,WAAY,GACZhD,QAAS,GACTyC,OAAQ,GACRI,QAASA,EACTF,QAAS,GAGX,EAAKM,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAjBV,E,iFAqBjBhK,KAAKxB,c,0CAGad,GAClBkM,aAAaM,QAAQ,iBAAkBxM,EAAI+B,OAC3CO,KAAKxC,SAAS,CAAEiM,QAAS,EAAGE,QAASjM,EAAI+B,U,mCAG9B0K,GACXnK,KAAKxC,SAAS,CACZ+L,OAAQY,EAAMC,OAAO3K,MAAMyG,cAC3BuD,QAAS,M,+BAqBH,IAAD,OACCpM,EAAW2C,KAAK1C,MAAhBD,OAEJyJ,EAAU,GAQd,OANA9G,KAAK1C,MAAMwJ,QAAQxH,QAAQ,SAAAQ,GACrB,EAAKxC,MAAMiM,SAAW7J,YAAiBI,GAAGuK,SAAS,EAAK/M,MAAMiM,SAElEzC,EAAQtH,KAAKM,KAIb,kBAAC,IAAD,CAAYiF,KAAM/E,KAAK1C,MAAMwB,QAASoG,KAAM,kBAAM,EAAK1G,cACrD,kBAAC,IAAD,KACE,uCACU,IACR,2BACE8L,KAAK,OACL7K,MAAOO,KAAK1C,MAAMmC,MAClBqB,SAAUd,KAAK+J,aACfnF,WAAS,8CAEX,6BACA,kBAAC,IAAD,CACE2F,OAAO,EACPC,KAAK,YACLC,OAAQ,kBAAM,kBAACC,EAAD,CAAarN,OAAQA,EAAQE,MAAO,EAAMuJ,QAASA,OAEnE,kBAAC,IAAD,CACE0D,KAAK,oBACLC,OAAQ,SAAAxN,GAAK,OACX,kBAAC0N,EAAD,CACEtN,OAAQA,EACRuC,IAAK3C,EAAMuG,MAAM/B,OAAOxD,GACxBA,GAAIhB,EAAMuG,MAAM/B,OAAOxD,GACvByC,MAAM,OAIZ,kBAAC,IAAD,CACE2E,kBAAgB,qBAChBC,mBAAiB,2BACjBC,OAAMvF,KAAK1C,MAAMwM,WAAW7L,GAC5B2M,QAAS,kBAAM,EAAKpN,SAAS,CAAEsM,WAAY,OAE3C,yBACE7J,MAAO,CACLuF,SAAU,WACVC,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,gBAAiB,QACjBzF,QAAS,KAGX,kBAACwK,EAAD,CACEtN,OAAQA,EACRuC,IAAKI,KAAK1C,MAAMwM,WAAW7L,GAC3BA,GAAI+B,KAAK1C,MAAMwM,WAAW7L,GAC1ByC,MAAM,EACNnD,MAAOyC,SAIb,kBAAC,IAAD,CAAc+E,KAAM/E,KAAK1C,MAAMG,gB,GAtHNmD,aA8H/B8J,EAAc,SAAAzN,GAClB,IAAM0M,EAAU1M,EAAMM,MAAMD,MAAMqM,QAC9BkB,EAAW,8BACXC,EAAO,GAyCX,OAvCA7N,EAAM6J,QAAQxH,QAAQ,SAACQ,EAAGiL,GACfC,KAAKC,MAAMF,EAAMpB,GAAW,IAC1B1M,EAAMM,MAAMD,MAAMmM,SAC7BqB,EAAKtL,KAAK,kBAACmL,EAAD,CAAYtN,OAAQJ,EAAMI,OAAQuC,IAAKE,EAAE7B,GAAIwI,OAAQ3G,EAAGvC,MAAON,EAAMM,WAGjFsN,EACE,yBAAK5K,MAAO,CAAEC,QAAS,SACrB,kBAAC,IAAD,CACEgL,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWrO,EAAM6J,QAAQyE,OAAS5B,EAClC6B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAczO,EAAMM,MAAMiM,gBAC1BmC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,WAZrB,eAeE,yBAAK5L,MAAO,CAAEK,MAAO,KAArB,aACa,IACX,kBAAC,IAAD,CACEb,MAAO,CAAEA,MAAOkK,EAAShK,MAAOgK,GAChC7I,SAAU7D,EAAMM,MAAM0M,oBACtBlJ,QAAS,CACP,CAAEtB,MAAO,EAAGE,MAAO,GACnB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,IAAKE,MAAO,UAQ7B,6BACE,4BACG1C,EAAMqN,KADT,YACwBrN,EAAM6J,QAAQyE,OADtC,KAGCV,EACD,kBAAC,IAAD,CAAMiB,UAAU,OAAOhB,GACtBD,EACD,kBAAC,IAAD,CAAQ5F,QAAO,qBAAE,4BAAA7H,EAAA,qEACCU,YACdb,EAAMI,OACN,kBACA,QAJa,QACXK,EADW,SAMJA,EAAIO,IACbhB,EAAMM,MAAMC,SAAS,CAAEsM,WAAYpM,IACnCT,EAAMM,MAAMiB,aAEZJ,YAAa,GAAI,2BAVJ,yCAYdoC,MAAM,WAZT,sBAmBOmK,EAAb,YACE,WAAY1N,GAAQ,IAAD,8BACjB,4CAAMA,KAsBRC,kBAvBmB,sCAuBC,WAAMC,GAAN,uBAAAC,EAAA,qDACVC,EAAW,EAAKC,MAAhBD,OAEHF,IAAqBA,EAAsB,IAChD,EAAKF,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJlB,SAMZC,EAAMC,YACR,EAAKL,MAAMH,oBACXA,GARc,OAAAC,EAAA,KAWFM,EAAIE,KAXF,qDAWPC,EAXO,qBAYRC,YACJT,EACA,oBACA,OACA,CAAEU,OAAQL,EAAIE,IAAIC,GAAIkO,IAAK,EAAK9O,MAAMgB,KAhB1B,sCAAAb,EAAA,KAoBFM,EAAIQ,IApBF,sDAoBPL,EApBO,qBAqBRC,YACJT,EACA,uBACA,OACA,CAAEU,OAAQL,EAAIQ,GAAGL,GAAIkO,IAAK,EAAK9O,MAAMgB,KAzBzB,iDA8BGuI,YAAYnJ,EAAQ,EAAKJ,MAAMgB,IA9BlC,QA8BZwI,EA9BY,OA+BhBtI,YAAe,2BACf,EAAKX,SAAS,CACZL,sBACAsJ,WAlCc,kDAqChBrI,YAAa,EAAD,GAAI,+BArCA,QAuClB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAvClB,wDAvBD,wDAiEnBuO,kBAjEmB,sCAiEC,WAAMC,GAAN,uBAAA7O,EAAA,qDACVC,EAAW,EAAKC,MAAhBD,OAEH4O,IAAqBA,EAAsB,IAChD,EAAKhP,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJlB,SAMZC,EAAMC,YACR,EAAKL,MAAM2O,oBACXA,GARc,OAAA7O,EAAA,KAWFM,EAAIE,KAXF,qDAWPC,EAXO,qBAYRC,YACJT,EACA,oBACA,OACA,CAAE0K,OAAQrK,EAAIE,IAAIC,GAAIkO,IAAK,EAAK9O,MAAMgB,KAhB1B,sCAAAb,EAAA,KAoBFM,EAAIQ,IApBF,sDAoBPL,EApBO,qBAqBRC,YACJT,EACA,uBACA,OACA,CAAE0K,OAAQrK,EAAIQ,GAAGL,GAAIkO,IAAK,EAAK9O,MAAMgB,KAzBzB,iDA8BGuI,YAAYnJ,EAAQ,EAAKJ,MAAMgB,IA9BlC,QA8BZwI,EA9BY,OA+BhBtI,YAAe,yBACf,EAAKX,SAAS,CAAEyO,sBAAqBxF,WAhCrB,kDAkChBrI,YAAa,EAAD,GAAI,8BAlCA,QAoClB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IApClB,wDAjED,wDAwGnByO,iBAxGmB,sCAwGA,WAAMC,GAAN,uBAAA/O,EAAA,qDACTC,EAAW,EAAKC,MAAhBD,OAEH8O,IAAoBA,EAAqB,IAC9C,EAAKlP,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJnB,SAMXC,EAAMC,YACR,EAAKL,MAAM6O,mBACXA,GARa,OAAA/O,EAAA,KAWDM,EAAIE,KAXH,qDAWNC,EAXM,qBAYPC,YACJT,EACA,oBACA,OACA,CAAEW,OAAQN,EAAIE,IAAIC,GAAIkO,IAAK,EAAK9O,MAAMgB,KAhB3B,sCAAAb,EAAA,KAoBDM,EAAIQ,IApBH,sDAoBNL,EApBM,qBAqBPC,YACJT,EACA,uBACA,OACA,CAAEW,OAAQN,EAAIQ,GAAGL,GAAIkO,IAAK,EAAK9O,MAAMgB,KAzB1B,iDA8BIuI,YAAYnJ,EAAQ,EAAKJ,MAAMgB,IA9BnC,QA8BXwI,EA9BW,OA+BftI,YAAe,yBACf,EAAKX,SAAS,CAAE2O,qBAAoB1F,WAhCrB,kDAkCfrI,YAAa,EAAD,GAAI,8BAlCD,QAoCjB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IApCnB,wDAxGA,wDA+InBe,UA/ImB,qBA+IP,sDAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJoJ,EAAS,GACXgB,EAAQ,GACRhJ,EAAO,GACPG,EAAQ,GAEV,EAAKpB,SAAS,CAAEsB,SAAS,IARf,kBAW6BC,QAAQC,IAAI,CAC/CwH,YAAYnJ,EAAQ,EAAKJ,MAAMgB,IAC/BuJ,YAAWnK,GACX6J,YAAW7J,GACX8B,YAAW9B,KAfL,mCAWPoJ,EAXO,KAWCgB,EAXD,KAWQhJ,EAXR,KAWcG,EAXd,8DAkBRR,YAAa,EAAD,GAAI,mCAlBR,kBAmBD,EAAKZ,SAAS,CAAEsB,SAAS,KAnBxB,QAsBNM,EAAc,GACdgN,EAAgB,GAChBjP,EAAsB,GACtB8O,EAAsB,GACtBE,EAAqB,GAErBE,EAAc,CAAC,CAAE5M,MAAO,GAAIE,MAAO,SAEnC2M,EAAc,CAChB,CAAE7M,MAAO,GAAIE,MAAO,SAGtBf,EAAMU,QAAQ,SAAAC,GACZH,EAAYI,KAAK,CACfC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,mBAE5DkJ,EAAO8F,IAAI3N,MAAMU,QAAQ,SAAClC,EAAG2N,GACvB3N,EAAEa,KAAOsB,EAAEtB,KACbd,EAAoBqC,KAAK,CACvBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,mBAE5D6O,EAAc5M,KAAK,CACjBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,wBAMlEkK,EAAMnI,QAAQ,SAAAkN,GACZH,EAAY7M,KAAK,CACfC,MAAOC,YAAiB8M,GACxBvO,GAAIuO,EAAEvO,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAK,qBAI9DkJ,EAAO8F,IAAI9E,MAAMnI,QAAQ,SAAAkN,GACnBA,EAAEC,QACJR,EAAoBzM,KAAK,CACvBC,MAAOC,YAAiB8M,GACxBvO,GAAIuO,EAAEvO,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAK,qBAKhEkB,EAAKa,QAAQ,SAAAC,GACX+M,EAAY9M,KAAK,CACfC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAIQ,KAAMc,EAAGhC,MAAK,qBAI9DkJ,EAAO8F,IAAIG,MAAMpN,QAAQ,SAAAC,GACnBA,EAAEkN,QACJN,EAAmB3M,KAAK,CACtBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MACE,kBAAC,IAAD,CACEtC,OAAQA,EACRuC,IAAKL,EAAEtB,GACPQ,KAAMc,EACNhC,MAAK,qBAOf,EAAKC,SAAS,CACZsB,SAAS,EACT2H,SACArH,cACAgN,gBACAC,cACAC,cACAnP,sBACA8O,sBACAE,uBA5GQ,wDA/IO,EA+PnBQ,eA/PmB,sCA+PF,WAAOlG,EAAQ1B,GAAf,eAAA3H,EAAA,4DACPC,EAAW,EAAKC,MAAhBD,OAER,EAAKJ,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAHrB,kBAKPK,YACJT,EACA,mBACA,OACA,CAAEY,GAAIwI,EAAOxI,KATF,OAWbE,YAAe,6BAXF,gDAabC,YAAa,EAAD,GAAI,6BAbH,QAef,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAEpC,EAAKR,MAAMM,MAAMiB,YAjBF,uDA/PE,0DAmRnBoO,OAnRmB,sCAmRV,WAAOC,GAAP,mBAAAzP,EAAA,8DACoB,EAAKE,MAAxBD,EADD,EACCA,OAAQoJ,EADT,EACSA,OAEhB,EAAKxJ,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAH7B,kBAKCK,YACJT,EACA,kBACA,OACA,CAAEY,GAAIwI,EAAOxI,GAAIwC,KAAMoM,IATpB,OAWL1O,YAAe,4BAXV,gDAaLC,YAAa,EAAD,GAAI,4BAbX,QAeP,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAEpC,EAAKR,MAAMM,MAAMiB,YAjBV,uDAnRU,sDAGjB,EAAKlB,MAAQ,CACXD,OAAQJ,EAAMI,OACdE,MAAO,EAAKN,MAAMM,MAAMN,MAAMM,MAC9BkJ,OAAQ,EAAKxJ,MAAMwJ,OACnBtJ,oBAAqB,GACrB8O,oBAAqB,GACrBE,mBAAoB,IATL,EADrB,iFAeSnM,KAAK1C,MAAMmJ,QAAQzG,KAAKxB,YAE7BsO,IAAaC,YAjBjB,2CAqBID,IAAaC,YArBjB,+BAwSY,IAAD,SACoB/M,KAAK1C,MAAxBD,EADD,EACCA,OAAQoJ,EADT,EACSA,OAEhB,OAAKA,GAAUzG,KAAK1C,MAAMwB,QACjB,kBAAC,IAAD,MAGLkB,KAAK/C,MAAMyD,KAEX,6BACE,kBAAC,IAAD,CAAUsM,WAAW,aAAa/M,MAAO,CAAEK,MAAO,MAChD,kBAAC,IAAD,KACE,yBAAK2M,IAAI,UAAUC,IAAKzG,EAAOG,QAGnC,kBAACuG,EAAD,CAAgB9P,OAAQA,EAAQoJ,OAAQA,EAAQlJ,MAAOyC,KAAMoN,KAAM9G,YAAYG,EAAOxI,GAAIZ,EAAOC,MAAM+F,OAAQhG,EAAOC,MAAMoG,OAAQkJ,OAAQ5M,KAAK4M,UAKrJ,kBAAC,IAAD,CACES,QAAM,EACNpN,MAAO,CAAEK,MAAO,KAChB0M,WAAW,aACX/H,QAAS,kBAAM,EAAKhI,MAAMM,MAAMC,SAAS,CAAEsM,WAAYrD,MAEvD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMrG,KAAMkN,IAAUC,KAAM,WAE9B,kBAAC,IAAD,CACEC,QAAS/G,EAAOhG,KAChBgN,UAAW,UAvUrB,GAAgC7M,aA8UnBuM,EAAiB,SAAAlQ,GAAK,OACjC,6BACE,4BAAI,kBAAC,IAAD,CAASqN,KAAK,OAAO7K,MAAOxC,EAAMwJ,OAAOhG,KAAMmM,OAAQ3P,EAAM2P,UACjE,6BACA,6BAHF,mCAIkC,uBAAGxC,OAAO,SAASsD,IAAI,sBAAsBC,KAAM1Q,EAAMmQ,MAAOnQ,EAAMmQ,MACtG,6BACA,6BANF,aAOa,IACTnQ,EAAMwJ,OAAOmH,UAAU,IAAIzE,IAAQ,SAAS0E,OAAO,IAAIpL,KAAKxF,EAAMwJ,OAAOmH,UAAU,MAAQ,QAC7F,6BATF,oCAUoC3Q,EAAMwJ,OAAOqH,eAC/C,6BACA,6BACA,kEAEE,kBAAC,IAAD,CACErO,MAAOxC,EAAMM,MAAMD,MAAMH,oBACzB2D,SAAU7D,EAAMM,MAAML,kBACtB6D,QAAS9D,EAAMM,MAAMD,MAAM8B,YAC3B4B,SAAS,EACTC,cAAc,EACdC,YAAY,UAIhB,6BACCjE,EAAMM,MAAMD,MAAMH,oBAAoBoO,OACrC,wFAEE,6BACCtO,EAAMwJ,OAAO8F,IAAI9E,MAAMsG,OAAO,SAAAvB,GAAC,OAAKA,EAAEC,SAAQ5K,IAAI,SAAA2K,GAAC,OAClD,kBAAC,IAAD,CAAUnP,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAON,EAAMM,UAE5DN,EAAMwJ,OAAO8F,IAAIG,MAAMqB,OAAO,SAAAxO,GAAC,OAAKA,EAAEkN,SAAQ5K,IAAI,SAAAtC,GAAC,OAClD,kBAAC,IAAD,CAAUlC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAIQ,KAAMc,EAAGhC,MAAON,EAAMM,WAG/D,GAEF,kEAEE,kBAAC,IAAD,CACEkC,MAAOxC,EAAMM,MAAMD,MAAM2O,oBACzBnL,SAAU7D,EAAMM,MAAMyO,kBACtBjL,QAAS9D,EAAMM,MAAMD,MAAM+O,YAC3BrL,SAAS,EACTC,cAAc,EACdC,YAAY,SAEd,6BAVF,oCAYE,kBAAC,IAAD,CACEzB,MAAOxC,EAAMM,MAAMD,MAAM6O,mBACzBrL,SAAU7D,EAAMM,MAAM2O,iBACtBnL,QAAS9D,EAAMM,MAAMD,MAAMgP,YAC3BtL,SAAS,EACTC,cAAc,EACdC,YAAY,UAGhB,6BACCjE,EAAMwJ,OAAOuH,UACd,0DAEE/Q,EAAMwJ,OAAOuH,UACf,kBAAC,IAAD,CAAQ/I,QAAS,kBAAMhI,EAAMM,MAAMoP,eAAe1P,EAAMwJ,QAAQ,KAAhE,sB,oNC5mBSwH,EAAb,YAEE,WAAYhR,GAAQ,IAAD,8BACjB,4CAAMA,KAiBRuB,UAlBmB,qBAkBP,sCAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJqP,EAAQ,GAAIjF,EAAQ,GAAI4E,EAAc,CAAC,CAAC1M,MAAO,SAHzC,SAQAZ,QAAQC,IAAI,CACpBkI,YAAW7J,EAAQ,MAAM,GACzBmK,YAAWnK,KAVH,mCAMRqP,EANQ,MAORjF,EAPQ,MAaJnI,QAAQ,SAAAkN,GACZH,EAAY7M,KAAK,CACfC,MAAOC,YAAiB8M,GACxBvO,GAAIuO,EAAEvO,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAK,qBAI9D,EAAKC,SAAS,CAACkP,QAAOjF,QAAO4E,gBArBnB,0CAlBO,EA0CnBL,kBA1CmB,sCA0CC,WAAMC,GAAN,SAAA7O,EAAA,qDACb6O,IAAqBA,EAAsB,IAChD,EAAKzO,SAAS,CAACyO,sBAAqBlE,OAAQkE,EAAoBhO,IAAK,kBAAM,EAAKiQ,mBAF9D,yCA1CD,wDA+CnBC,cA/CmB,sCA+CH,WAAOlR,EAAOmR,EAAQtL,GAAtB,mBAAA1F,EAAA,4DACN2K,EAAW,EAAKzK,MAAhByK,OACR,EAAKvK,SAAS,CAAC6Q,mBAAmB,IAFpB,SAGGrG,YAAuB3K,EAAQJ,EAAMqR,QAAQrQ,GAAI8J,GAHpD,OAGV1B,EAHU,QAIVkI,EAAQlI,EAAK,IACXmI,MAAQvR,EAAMuR,MACpB,EAAKhR,SAAS,CACZiR,cAAeF,EACfG,aAAcN,IARF,yCA/CG,4DA2DnBO,YA3DmB,sCA2DL,WAAO1R,GAAP,SAAAG,EAAA,qDACZ4F,QAAQ4L,IAAI3R,GACZ,EAAKO,SAAS,CACZqR,aAAc5R,EAAM6R,MAAM,GAC1BC,WAAY9R,EAAMwD,OAJR,yCA3DK,wDAmEnByN,eAnEmB,sCAmEF,WAAOc,EAAUnN,GAAjB,qBAAAzE,EAAA,4DACPC,EAAW,EAAKC,MAAhBD,OAIJwE,GACF2C,EAAY3C,EAAIoN,OAAO1K,MACvBG,EAAW7C,EAAIoN,OAAOxK,MACtB,EAAKjH,SAAS,CAACgH,YAAWE,eAE1BF,EAAY,EAAKlH,MAAMkH,UACvBE,EAAW,EAAKpH,MAAMoH,UAXT,SAcOoD,YAAiBzK,EAAQmH,EAAWE,EAAU,EAAKpH,MAAMyK,QAdhE,OAcXmH,EAdW,OAef,EAAK1R,SAAS,CAAC0R,cAfA,yCAnEE,0DAqFnBC,aAAe,SAAClS,GACV,EAAKK,MAAM+Q,mBACb,EAAK7Q,SAAS,CACZ6Q,mBAAmB,EACnBK,aAAc,QAtFlB,EAAKpR,MAAQ,CACXD,OAAQJ,EAAMI,OACdqP,MAAO,GACPwC,UAAW,GACXb,mBAAmB,EACnBI,cAAe,GACfxC,oBAAqB,GACrBlE,OAAQ,MAVO,EAFrB,iFAiBI/H,KAAKxB,cAjBT,kCAgGcd,GACV,IAAKA,EAAI0R,QAAgC,IAAtB1R,EAAI0R,OAAO7D,OAAc,MAAO,SAGnD,OAFY7N,EAAI0R,OAAO,GAETtL,QACd,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,MACf,QAAS,MAAO,YAxGpB,+BA4GY,IAAD,OACHuL,EAAW,GADR,EAE8BrP,KAAK1C,MAAlC4R,EAFD,EAECA,UAAWT,EAFZ,EAEYA,cAEfa,EAAWpL,YAAiBlE,KAAK/C,OACrC,OAAKqS,EAAS/K,KAAQ+K,EAAS7K,KAE/BzE,KAAK1C,MAAMoP,MAAMpN,QAAQ,SAACQ,GACpBA,EAAEyP,UACJC,2BAAiBrO,KAAK4E,MAAMjG,EAAEyP,WAAWjQ,QAAQ,SAACoJ,GAAD,OAAO2G,EAAS7P,KAAK,CAACiB,KAAMX,EAAEW,KAAMgP,QAAS/G,QAIhG,kBAAC,IAAD,CAAY3D,KAAM/E,KAAK1C,MAAMwB,QAASoG,KAAM,kBAAM,EAAKgJ,mBAErD,yBAAKjO,MAAO,CAACC,QAAS,SAAtB,mCAEE,kBAAC,IAAD,CACET,MAAOO,KAAK1C,MAAM2O,oBAClBnL,SAAUd,KAAKgM,kBACfjL,QAASf,KAAK1C,MAAM+O,YACpBpL,cAAc,EACdC,YAAY,UAIhB,kBAAC,MAAD,CACEwO,OAAQ1P,KAAK/C,MAAMyS,OACnBC,KAAM,GACNC,cAAeN,EACfO,QAAS7P,KAAKkO,eACd4B,UAAW9P,KAAKkO,eAChBjJ,QAASjF,KAAKmP,cACbD,EAAUrN,IAAI,SAACzE,EAAG2N,GAAJ,OACb,kBAAC,SAAD,CACEnL,IAAKmL,EACL9F,QAAS,EAAKkJ,cACdK,MAAOpR,EAAEkR,QAAQyB,OAAO,KAAK3S,EAAEkR,QAAQ0B,KAAK,KAAK5S,EAAEkR,QAAQhR,MAAM,KAAKF,EAAEkR,QAAQ2B,IAChF7P,KAAM,CACJ8P,IAAK,4CAA4C,EAAKC,YAAY/S,GAAG,YAEvEkR,QAASlR,EAAEkR,QACX9I,SAAU,CAACjB,IAAKnH,EAAEkR,QAAQ9J,UAAWC,IAAKrH,EAAEkR,QAAQ5J,cAEvD2K,EAASxN,IAAI,SAAC6G,EAAGqC,GAAJ,OACZ,kBAAC,UAAD,CACEnL,IAAKmL,EACL+D,MAAOpG,EAAE+G,QACThP,KAAMiI,EAAEjI,KACRwE,QAAS,EAAK0J,YACdyB,YAAY,UACZC,aAAc,EACdC,UAAU,UACVC,YAAa,MAEjB,kBAAC,aAAD,CACEnC,OAAQpO,KAAK1C,MAAMoR,aACnB8B,QAASxQ,KAAK1C,MAAM+Q,mBACpB,kBAACoC,EAAD,CAAalC,MAAOE,KAEtB,kBAAC,aAAD,CAAYjJ,SAAUxF,KAAK1C,MAAMuR,aAAc2B,UAAUxQ,KAAK1C,MAAMyR,YAClE,qCAAW/O,KAAK1C,MAAMyR,gBAxDc,mDAjHhD,GAAyBnO,aAiLnB6P,EAAc,SAAAxT,GAClB,IAAIyT,EAASzT,EAAMsR,MAAMmC,OACrBC,EAAQ1T,EAAMsR,MAAMoC,MAKxB,OAHKD,IAAQA,EAAS,IACjBC,IAAOA,EAAQ,IAGlB,6BACE,4BAAK1T,EAAMsR,MAAMC,OACfmC,EAAMpF,OAAO,qCAAqCoF,EAAMpF,OAAO,UAAU,GAC1EmF,EAAO7O,IAAI,SAAC6G,GAAD,OAAO,kBAACkI,EAAD,CAAaC,OAAQnI,QAKxCkI,EAAc,SAAA3T,GAClB,IAAI6T,EAAQ7T,EAAM4T,OAAOC,MACpBA,IAAOA,EAAQ,IACpB,IAAIrQ,EAAO,GACPsQ,EAAQ,GAOZ,OALAD,EAAMxR,QAAQ,SAAAlC,GACG,SAAXA,EAAEqD,OAAiBA,EAAOrD,EAAEqC,OACjB,sBAAXrC,EAAEqD,OAA8BsQ,EAAQ3T,EAAEqC,SAI9C,6BACE,oCAAUgB,GAAS,6BACnB,qCAAWsQ,KAKFC,+BAAiB,SAAC/T,GAAD,MAAY,CAACgU,OAAQhU,EAAMgU,SAA5CD,CAAsDE,qBAAW,CAC9EC,gBAAiB,CACfC,oBAAoB,GAEtBC,oBAAqB,KAJ8CH,CAKlEjD,M,0YCvMH9E,IAAQC,OAAOC,K,IAEM4E,E,YACnB,WAAYhR,GAAQ,IAAD,uBACjB,4CAAMA,KAoCRqU,kBAAoB,WAClB,EAAK9T,SAAS,CAAE+T,YAAY,KAtCX,EAyCnBC,kBAAoB,WAClB,EAAKhU,SAAS,CAAE+T,YAAY,KA1CX,EA6DnBE,YA7DmB,sCA6DL,WAAOxT,GAAP,eAAAb,EAAA,4DACJC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEC,QAAQ,EAAM8T,YAAY,IAH9B,kBAKJzT,YAAOT,EAAQ,eAAgB,OAAQ,CAC3CU,OAAQE,IANA,OAQVE,YAAe,0BARL,gDAUVC,YAAa,EAAD,GAAI,2BAVN,QAYZ,EAAKZ,SAAS,CAAEC,QAAQ,IAExBiU,OAAOpC,SAAS3B,KAAO,yBACvB,EAAKnP,YAfO,uDA7DK,wDA+EnBmT,YA/EmB,qBA+EL,8BAAAvU,EAAA,wDACJC,EAAW,EAAKC,MAAhBD,OAGK,QADT4G,EAAO,EAAK2N,YAAYC,YAHhB,wDAMZ,EAAKrU,SAAS,CAAEC,QAAQ,IANZ,kBASJK,YAAOT,EAAQ,eAAgB,OAAQ,CAC3CoD,KAAMwD,EAAKxD,OAVH,OAYVtC,YAAe,0BAZL,kDAcVC,YAAa,EAAD,GAAI,0BAdN,QAgBZ,EAAKZ,SAAS,CAAEC,QAAQ,IAExBiU,OAAOpC,SAAS3B,KAAO,yBACvB,EAAKnP,YAnBO,wDA/EK,EAqGnBA,UArGmB,qBAqGP,8BAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEsB,SAAS,EAAMyK,OAAQ,KACnC3K,EAAQ,GAJF,kBAOMO,YAAW9B,GAPjB,OAORuB,EAPQ,uDASRR,YAAa,EAAD,GAAI,8BATR,QAYV,EAAKZ,SAAS,CAAEsB,SAAS,EAAOF,UAZtB,uDArGO,EAoHnB4K,gBAAkB,SAAAnD,GAChB,EAAK7I,SAAS,CAAEiM,QAASpD,EAAKqD,SAAW,KAlHzC,IAAIC,EAAUC,aAAaC,QAAQ,gBAHlB,OAIZF,IAASA,EAAU,GAExB,EAAKrM,MAAQ,CACXD,OAAQJ,EAAMI,OACdyB,SAAS,EACTF,MAAO,GACP2K,OAAQ,GACRI,QAASA,EACTF,QAAS,EACT8H,YAAY,GAGd,EAAKO,gBAAkBvS,IAAEwS,OAAO,CAC9BtR,KAAMlB,IAAEyS,SAGV,EAAKC,kBAAoB,CACvBC,OAAQ,CACN7O,OAAQ,CACN1D,MAAO,YACPoD,MAAO,iCAKb,EAAKgH,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBA9BV,E,iFAkCjBhK,KAAKxB,c,mCAWMoT,GACX5R,KAAKxC,SAAS,CAAEoU,kB,0CAGElU,GAClBkM,aAAaM,QAAQ,eAAgBxM,EAAI+B,OACzCO,KAAKxC,SAAS,CAAEiM,QAAS,EAAGE,QAASjM,EAAI+B,U,mCAG9B0K,GACXnK,KAAKxC,SAAS,CACZ+L,OAAQY,EAAMC,OAAO3K,MAAMyG,cAC3BuD,QAAS,M,+BA+DH,IAAD,OACCpM,EAAW2C,KAAK1C,MAAhBD,OAEJyN,EAAO,GAQX,OANA9K,KAAK1C,MAAMsB,MAAMU,QAAQ,SAAAC,GACnB,EAAKjC,MAAMiM,SAAW7J,YAAiBH,GAAG8K,SAAS,EAAK/M,MAAMiM,SAElEuB,EAAKtL,KAAKD,KAIV,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CACEgL,OAAO,EACPC,KAAK,UACLC,OAAQ,kBACN,kBAAC,IAAD,CAAY1F,KAAM,EAAKzH,MAAMwB,QAASoG,KAAM,EAAK1G,WAAjD,UACU,IACR,2BACE8L,KAAK,OACL7K,MAAO,EAAKnC,MAAMmC,MAClBqB,SAAU,EAAKiJ,aACfnF,WAAS,8CAEX,kBAACuN,EAAD,CAAW9U,OAAQA,EAAQE,MAAO,EAAMqB,MAAOkM,QAIrD,kBAAC,IAAD,CACEP,OAAO,EACPC,KAAK,aACLC,OAAQ,kBACN,6BACE,kBAAC,IAAElD,KAAK6K,KAAR,CACEC,IAAK,SAAAA,GAAG,OAAK,EAAKT,YAAcS,GAChC/H,KAAM,EAAKwH,gBACX/Q,QAAS,EAAKkR,kBACdnR,SAAU,SAAAgC,GAAC,OAAI,EAAKwP,aAAaxP,IACjCrD,MAAO,EAAKnC,MAAMsU,cAEpB,4BAAQ3M,QAAS,kBAAM,EAAK0M,gBAA5B,cAIN,kBAAC,IAAD,CACEnH,KAAK,kBACLC,OAAQ,SAAAxN,GAAK,OACX,6BACE,kBAACsV,EAAD,CACElV,OAAQA,EACRuC,IAAK3C,EAAMuG,MAAM/B,OAAOxD,GACxBA,GAAIhB,EAAMuG,MAAM/B,OAAOxD,GACvByC,MAAM,EACNnD,MAAO,IAET,6BACA,6BACA,6BACA,kBAAC,IAAD,CAAQ0H,QAAS,EAAKqM,kBAAmB9Q,MAAM,WAA/C,eAGA,kBAAC,IAAD,CACE+E,KAAM,EAAKjI,MAAMiU,WACjB3G,QAAS,EAAK4G,kBACdnM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC,IAAD,CAAarH,GAAG,sBAAhB,8CAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEgH,QAAS,EAAKuM,kBACdhR,MAAM,UACNgS,WAAS,GAHX,MAOA,kBAAC,IAAD,CACEvN,QAAS,kBAAM,EAAKwM,YAAYxU,EAAMuG,MAAM/B,OAAOxD,KACnDuC,MAAM,WAFR,aAWV,kBAAC,IAAD,CAAcuE,KAAM/E,KAAK1C,MAAMG,e,GApNRmD,aA2N3BuR,EAAY,SAAAlV,GAChB,IAAM0M,EAAU1M,EAAMM,MAAMD,MAAMqM,QAC9BkB,EAAW,8BACXC,EAAO,GAyCX,OAvCA7N,EAAM2B,MAAMU,QAAQ,SAACC,EAAGwL,GACbC,KAAKC,MAAMF,EAAMpB,GAAW,IAC1B1M,EAAMM,MAAMD,MAAMmM,SAC7BqB,EAAKtL,KAAK,kBAAC+S,EAAD,CAAUlV,OAAQJ,EAAMI,OAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAON,EAAMM,WAG7EsN,EACE,yBAAK5K,MAAO,CAAEC,QAAS,SACrB,kBAAC,IAAD,CACEgL,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWrO,EAAM2B,MAAM2M,OAAS5B,EAChC6B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAczO,EAAMM,MAAMiM,gBAC1BmC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,WAZrB,eAeE,yBAAK5L,MAAO,CAAEK,MAAO,KAArB,aACa,IACX,kBAAC,IAAD,CACEb,MAAO,CAAEA,MAAOkK,EAAShK,MAAOgK,GAChC7I,SAAU7D,EAAMM,MAAM0M,oBACtBlJ,QAAS,CACP,CAAEtB,MAAO,EAAGE,MAAO,GACnB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,IAAKE,MAAO,UAQ7B,6BACE,4BACG1C,EAAMqN,KADT,UACsBrN,EAAM2B,MAAM2M,OADlC,KAGA,kBAAC,IAAD,CAAM5K,GAAI,cACR,6CAEDkK,EACAC,EACAD,IAKM0H,EAAb,YACE,WAAYtV,GAAQ,IAAD,8BACjB,4CAAMA,KAeRoB,oBAhBmB,sCAgBG,WAAMC,GAAN,uBAAAlB,EAAA,qDACZC,EAAW,EAAKC,MAAhBD,OAEHiB,IAAuBA,EAAwB,IACpD,EAAKrB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJhB,SAMdC,EAAMC,YACR,EAAKL,MAAMgB,sBACXA,GARgB,OAAAlB,EAAA,KAWJM,EAAIE,KAXA,qDAWTC,EAXS,qBAYVC,YACJT,EACA,oBACA,OACA,CAAEU,OAAQ,EAAKd,MAAMgB,GAAIM,IAAKb,EAAIE,IAAIC,KAhBxB,sCAAAT,EAAA,KAoBJM,EAAIQ,IApBA,sDAoBTL,EApBS,qBAqBVC,YACJT,EACA,uBACA,OACA,CAAEU,OAAQ,EAAKd,MAAMgB,GAAIM,IAAKb,EAAIQ,GAAGL,KAzBvB,iDA8BDwJ,YAAUhK,EAAQ,EAAKJ,MAAMgB,IA9B5B,QA8Bd4B,EA9Bc,OA+BlB1B,YAAe,2BACf,EAAKX,SAAS,CAAEc,wBAAuBuB,SAhCrB,kDAkClBzB,YAAa,EAAD,GAAI,sCAlCE,QAoCpB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IApChB,wDAhBH,wDAuDnBuO,kBAvDmB,sCAuDC,WAAMC,GAAN,uBAAA7O,EAAA,qDACVC,EAAW,EAAKC,MAAhBD,OAEH4O,IAAqBA,EAAsB,IAChD,EAAKhP,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJlB,SAMZC,EAAMC,YACR,EAAKL,MAAM2O,oBACXA,GARc,OAAA7O,EAAA,KAWFM,EAAIE,KAXF,qDAWPC,EAXO,qBAYRC,YACJT,EACA,0BACA,OACA,CAAE0K,OAAQrK,EAAIE,IAAIC,GAAIE,OAAQ,EAAKd,MAAMgB,KAhB7B,sCAAAb,EAAA,KAoBFM,EAAIQ,IApBF,sDAoBPL,EApBO,qBAqBRC,YACJT,EACA,6BACA,OACA,CAAE0K,OAAQrK,EAAIQ,GAAGL,GAAIE,OAAQ,EAAKd,MAAMgB,KAzB5B,iDA8BEoJ,YAAUhK,EAAQ,EAAKJ,MAAMgB,IA9B/B,QA8BZwU,EA9BY,OA+BhBtU,YAAe,yBACf,EAAKX,SAAS,CAAEiV,QAAOxG,wBAhCP,kDAkChB7N,YAAa,EAAD,GAAI,8BAlCA,QAoClB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IApClB,wDAvDD,wDA8FnByO,iBA9FmB,sCA8FA,WAAMC,GAAN,uBAAA/O,EAAA,qDACTC,EAAW,EAAKC,MAAhBD,OAEH8O,IAAoBA,EAAqB,IAC9C,EAAKlP,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJnB,SAMXC,EAAMC,YACR,EAAKL,MAAM6O,mBACXA,GARa,OAAA/O,EAAA,KAWDM,EAAIE,KAXH,qDAWNC,EAXM,qBAYPC,YACJT,EACA,0BACA,OACA,CAAEW,OAAQN,EAAIE,IAAIC,GAAIE,OAAQ,EAAKd,MAAMgB,KAhB9B,sCAAAb,EAAA,KAoBDM,EAAIQ,IApBH,sDAoBNL,EApBM,qBAqBPC,YACJT,EACA,6BACA,OACA,CAAEW,OAAQN,EAAIQ,GAAGL,GAAIE,OAAQ,EAAKd,MAAMgB,KAzB7B,iDA8BEoJ,YAAUhK,EAAQ,EAAKJ,MAAMgB,IA9B/B,QA8BX4B,EA9BW,OA+Bf1B,YAAe,yBACf,EAAKX,SAAS,CAAEqC,OAAMsM,uBAhCP,kDAkCf/N,YAAa,EAAD,GAAI,8BAlCD,QAoCjB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IApCnB,wDA9FA,wDAqInBe,UArImB,qBAqIP,0DAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJwC,EAAO,GACTnB,EAAa,GACbC,EAAU,GACV+T,EAAe,GACfhG,EAAQ,GACRiG,EAAe,GACflL,EAAQ,GACV,EAAKjK,SAAS,CAAEsB,SAAS,IAVf,kBAqBEC,QAAQC,IAAI,CACpBqI,YAAUhK,EAAQ,EAAKJ,MAAMgB,IAC7BiB,YAAgB7B,GAChB6B,YAAgB7B,EAAQ,OAAQ,EAAKJ,MAAMgB,IAC3CiJ,YAAW7J,EAAQ,EAAKJ,MAAMgB,IAC9BiJ,YAAW7J,GACXmK,YAAWnK,EAAQ,EAAKJ,MAAMgB,IAC9BuJ,YAAWnK,KA5BL,mCAcNwC,EAdM,KAeNnB,EAfM,KAgBNC,EAhBM,KAiBN+T,EAjBM,KAkBNhG,EAlBM,KAmBNiG,EAnBM,KAoBNlL,EApBM,8DA+BRrJ,YAAa,EAAD,GAAI,6BA/BR,kBAgCD,EAAKZ,SAAS,CAAEsB,SAAS,KAhCxB,QAmCN8T,EAAgB,GAChBvG,EAAc,GACdC,EAAc,GACdhO,EAAwB,GACxB6N,EAAqB,GACrBF,EAAsB,GAE1BvN,EAAWY,QAAQ,SAAAQ,GACjB8S,EAAcpT,KAAK,CACjBC,MAAOC,YAAiBI,GACxB7B,GAAI6B,EAAE7B,GACN0B,MAAO,kBAAC,IAAD,CAAetC,OAAQA,EAAQuC,IAAKE,EAAE7B,GAAI8B,UAAWD,EAAGvC,MAAK,qBAIxEoB,EAAQW,QAAQ,SAAAQ,GACdxB,EAAsBkB,KAAK,CACzBC,MAAOC,YAAiBI,GACxB7B,GAAI6B,EAAE7B,GACN0B,MAAO,kBAAC,IAAD,CAAetC,OAAQA,EAAQuC,IAAKE,EAAE7B,GAAI8B,UAAWD,EAAGvC,MAAK,qBAMxEmP,EAAMpN,QAAQ,SAAAC,GACZ+M,EAAY9M,KAAK,CACfC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAIQ,KAAMc,EAAGhC,MAAK,qBAI9DmV,EAAapT,QAAQ,SAAAC,GACnB4M,EAAmB3M,KAAK,CACtBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAIQ,KAAMc,EAAGhC,MAAK,qBAI9DkK,EAAMnI,QAAQ,SAAAkN,GACZH,EAAY7M,KAAK,CACfC,MAAOC,YAAiB8M,GACxBvO,GAAIuO,EAAEvO,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAK,qBAI9DoV,EAAarT,QAAQ,SAAAkN,GACnBP,EAAoBzM,KAAK,CACvBC,MAAOC,YAAiB8M,GACxBvO,GAAIuO,EAAEvO,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAK,qBAI9D,EAAKC,SAAS,CACZqC,OACA+S,gBACAtG,cACAD,cACA/N,wBACA6N,qBACAF,sBACAnN,SAAS,IApGD,wDAlIV,EAAKxB,MAAQ,CACXD,OAAQJ,EAAMI,OACdwC,KAAM,EAAK5C,MAAM4C,KACjBvB,sBAAuB,GACvB2N,oBAAqB,GACrBE,mBAAoB,IARL,EADrB,iFAcSnM,KAAK1C,MAAMuC,MAAMG,KAAKxB,cAd/B,+BA8OY,IACAqB,EAASG,KAAK1C,MAAduC,KAER,OAAKA,GAAQG,KAAK1C,MAAMwB,QACf,kBAAC,IAAD,MAIP,6BACE,yBAAKmB,MAAO,CAAEC,QAAS,OAAQC,QAAS,SACtC,yBAAKF,MAAO,CAAE4S,KAAM,EAAGC,SAAU,OAAQ3S,QAAS,aAChD,kBAAC,IAAD,CACEC,KAAM2S,IACN9S,MAAO,CAAEK,MAAO,GAAIC,OAAQ,GAAIC,MAAO,UACtC,IACFX,EAAKY,KAAM,IACXT,KAAK/C,MAAMyD,KACV,GAEA,kBAAC,IAAD,CAAMC,GAAI,eAAiBd,EAAK5B,IAAhC,UAIL+B,KAAK/C,MAAMyD,KAAO,kBAACsS,EAAD,CAAc3V,OAAQA,EAAQwC,KAAMA,EAAMtC,MAAOyC,OAAW,QArQvF,GAA8BY,aA2QjBoS,EAAe,SAAA/V,GAAK,OAC/B,6BACE,6BACA,qDAEE,kBAAC,IAAD,CACEwC,MAAOxC,EAAMM,MAAMD,MAAMgB,sBACzBwC,SAAU7D,EAAMM,MAAMc,oBACtB0C,QAAS9D,EAAMM,MAAMD,MAAMsV,cAC3B5R,SAAS,EACTC,cAAc,EACdC,YAAY,UAGhB,6BACA,8DAEE,kBAAC,IAAD,CACEzB,MAAOxC,EAAMM,MAAMD,MAAM2O,oBACzBnL,SAAU7D,EAAMM,MAAMyO,kBACtBjL,QAAS9D,EAAMM,MAAMD,MAAM+O,YAC3BrL,SAAS,EACTC,cAAc,EACdC,YAAY,SAEd,6BAVF,8BAYE,kBAAC,IAAD,CACEzB,MAAOxC,EAAMM,MAAMD,MAAM6O,mBACzBrL,SAAU7D,EAAMM,MAAM2O,iBACtBnL,QAAS9D,EAAMM,MAAMD,MAAMgP,YAC3BtL,SAAS,EACTC,cAAc,EACdC,YAAY,c,yHCjmBP+R,EAAW,SAAAhW,GACtB,IAAM0M,EAAU1M,EAAMM,MAAMD,MAAMqM,QAC9BkB,EAAW,8BACXC,EAAO,GAyCX,OAvCA7N,EAAMwB,KAAKa,QAAQ,SAACC,EAAGwL,GACZC,KAAKC,MAAMF,EAAMpB,GAAW,IAC1B1M,EAAMM,MAAMD,MAAMmM,SAC7BqB,EAAKtL,KAAK,kBAACxC,EAAA,EAAD,CAAUK,OAAQJ,EAAMI,OAAQuC,IAAKL,EAAEtB,GAAIQ,KAAMc,EAAGhC,MAAON,EAAMM,WAG7EsN,EACE,yBAAK5K,MAAO,CAAEC,QAAS,SACrB,kBAAC,IAAD,CACEgL,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWrO,EAAMwB,KAAK8M,OAAS5B,EAC/B6B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAczO,EAAMM,MAAMiM,gBAC1BmC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,WAZrB,eAeE,yBAAK5L,MAAO,CAAEK,MAAO,KAArB,aACa,IACX,kBAAC,IAAD,CACEb,MAAO,CAAEA,MAAOkK,EAAShK,MAAOgK,GAChC7I,SAAU7D,EAAMM,MAAM0M,oBACtBlJ,QAAS,CACP,CAAEtB,MAAO,EAAGE,MAAO,GACnB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,IAAKE,MAAO,UAQ7B,6BACE,4BACG1C,EAAMqN,KADT,SACqBrN,EAAMwB,KAAK8M,OADhC,KAGA,kBAAC,IAAD,CAAM5K,GAAI,aACR,6CAEDkK,EACAC,EACAD,I,gEClDMqI,EAAb,2MACEC,kBAAoB,SAAAC,GACbA,IAAqBA,EAAsB,IAChD,EAAK5V,SAAS,CACZ6V,YAAa,CACX,CAAE5T,MAAO,QAASE,MAAO,SACzB,CAAEF,MAAO,KAAME,MAAO,iBACtB,CAAEF,MAAO,OAAQE,MAAO2T,YAAUF,EAAoB3T,OAAO8T,MAC7D,CAAE9T,MAAO,OAAQE,MAAO2T,YAAUF,EAAoB3T,OAAO+T,SAGjE,EAAKvW,MAAMM,MAAM4V,kBAAkBC,IAXvC,wEAcY,IAAD,OACP,IAAKpT,KAAK/C,MAAMM,MAAMD,MAAMmW,mBAAoB,OAAO,6BAEvD,IAAIC,EAAe,GAKnB,OAJA/R,OAAOC,KAAK0R,aAAWzR,IAAI,SAAAC,GAAC,OAC1B4R,EAAalU,KAAK,CAAEC,MAAOqC,EAAGnC,MAAO2T,YAAUxR,GAAGrB,SAG5CT,KAAK/C,MAAMM,MAAMD,MAAMmW,mBAAmBhU,OAClD,IAAK,SACH,OACE,6BACE,6BACE,6BADF,mBAGE,kBAAC,IAAD,CACEA,MAAOO,KAAK/C,MAAMM,MAAMD,MAAM8V,oBAC9BtS,SAAUd,KAAKmT,kBACfpS,QAAS2S,EACTzS,cAAc,EACdC,YAAY,4BAGflB,KAAK/C,MAAMM,MAAMD,MAAM8V,oBACtB,6BACE,6BADF,iBAGE,kBAAC,IAAD,CACE3T,MAAOO,KAAK/C,MAAMM,MAAMD,MAAMqW,mBAC9B7S,SAAUd,KAAK/C,MAAMM,MAAMqW,iBAC3BC,YAAa7T,KAAK/C,MAAMM,MAAMuW,kBAC9B/S,QAASf,KAAK1C,MAAM+V,YACpBpS,cAAc,EACdC,YAAY,mCAIhB,GAGDlB,KAAK/C,MAAMM,MAAMwW,sBAChB,6BACE,6BADF,mBAGG/T,KAAK/C,MAAMM,MAAMD,MAAM0W,gBAAgBzI,OACtC,kBAAC,IAAD,CACE9L,MAAOO,KAAK/C,MAAMM,MAAMD,MAAM2W,uBAC9BnT,SAAUd,KAAK/C,MAAMM,MAAM2W,qBAC3BnT,QAASf,KAAK/C,MAAMM,MAAMD,MAAM0W,gBAChC/S,cAAc,EACdC,YAAY,kCAGd,kBAACiT,EAAA,EAAD,OAIJ,IAIR,IAAK,SACH,OACE,6BACE,6BACA,2BACE7J,KAAK,OACL8J,OAAO,iBACPtT,SAAU,SAAAgC,GAAC,OAAI,EAAK7F,MAAMM,MAAM8W,kBAAkBvR,EAAEsH,OAAOkK,WAInE,IAAK,SACH,OACE,6BACE,6BADF,oBAGE,kBAAC,IAAD,CACEC,SAAU,IACV9U,MAAOO,KAAK/C,MAAMM,MAAMD,MAAMgR,QAC9BxN,SAAUd,KAAK/C,MAAMM,MAAMiX,cAC3BC,SAAUzU,KAAK/C,MAAMM,MAAMmX,iBAInC,IAAK,OACH,OACE,6BACE,6BADF,QAEU,IACR,uBACEtK,OAAO,SACPsD,IAAI,sBACJC,KAAK,2EAHP,qBAHF,4EAcJ,QACE,OAAO,gEApHb,GAAiC/M,a,sHCaZqN,E,YACnB,WAAYhR,GAAQ,IAAD,8BACjB,4CAAMA,KA8CRqU,kBAAoB,WAClB,EAAK9T,SAAS,CAAE+T,YAAY,KAhDX,EAmDnBC,kBAAoB,WAClB,EAAKhU,SAAS,CAAE+T,YAAY,KApDX,EA4DnB/H,gBAAkB,SAAAnD,GAChB,EAAK7I,SAAS,CAAEiM,QAASpD,EAAKqD,SAAW,KA7DxB,EAuEnBgL,cAvEmB,sCAuEH,WAAMpG,GAAN,iBAAAlR,EAAA,4DACd,EAAKI,SAAS,CAAE8Q,UAAS7Q,QAAQ,IADnB,kBAGIkX,2BAAiBrG,GAHrB,cAGRzK,EAHQ,gBAII+Q,oBAAU/Q,EAAI,IAJlB,OAIRgR,EAJQ,OAKZ,EAAKrX,SAAS,CAAEsX,cAAeD,IALnB,kDAOZzW,YAAa,EAAD,GAAI,wCAPJ,QASd,EAAKZ,SAAS,CAAEC,QAAQ,IATV,wDAvEG,wDAuFnBsX,iBAAmB,SAAAtB,GAEjB,EAAKjW,SAAS,CACZiW,qBACAL,oBAAqB,KACrBO,mBAAoB,KACpBM,uBAAwB,KACxBe,eAAgB,KAChBF,cAAe,KACfxG,QAAS,MAhGM,EAoGnB6E,kBAAoB,SAAAC,GAClB,EAAK5V,SAAS,CAAE4V,yBArGC,EAwGnBQ,iBAAmB,SAAAD,GACjB,EAAKnW,SAAS,CAAEmW,wBAzGC,EA4GnBO,qBAAuB,SAAAD,GACrB,EAAKzW,SAAS,CAAEyW,4BA7GC,EAgHnBI,kBAAoB,SAAAC,GAClB,EAAK9W,SAAS,CAAEC,QAAQ,IACxB,IAAIwX,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAAhL,GACd,EAAK3M,SAAS,CAAEwX,eAAgB7K,EAAMC,OAAOgL,OAAQ3X,QAAQ,KAE/DwX,EAAOI,WAAWf,EAAM,KAtHP,EAoJnBgB,YApJmB,sCAoJL,WAAMrX,GAAN,eAAAb,EAAA,4DACJC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEC,QAAQ,EAAM8T,YAAY,IAH9B,kBAKJzT,YAAOT,EAAQ,eAAgB,OAAQ,CAC3CW,OAAQC,IANA,OAQVE,YAAe,0BARL,gDAUVC,YAAa,EAAD,GAAI,0BAVN,QAYZ,EAAKZ,SAAS,CAAEC,QAAQ,IAExB,EAAKe,YACLkT,OAAOpC,SAAS3B,KAAO,wBAfX,uDApJK,wDAsKnB4H,YAtKmB,qBAsKL,kDAAAnY,EAAA,wDACJC,EAAW,EAAKC,MAAhBD,OAGK,QADT4G,EAAO,EAAKuR,YAAY3D,YAHhB,oDAMZ,EAAKrU,SAAS,CAAEC,QAAQ,IAEpBgY,EAAO,GAEuB,OAA9B,EAAKnY,MAAM0X,eAVH,0BAYRS,EAAKjW,KAAK2B,KAAK4E,MAAM,EAAKzI,MAAM0X,iBAZxB,yDAcR5W,YAAa,EAAD,GAAI,qCAdR,kBAeD,EAAKZ,SAAS,CAAEC,QAAQ,KAfvB,mCAiBuC,WAAxC,EAAKH,MAAMmW,mBAAmBhU,MAjB7B,iBAkBVgW,EAAKjW,KACHkW,IACE,CAAC,EAAKpY,MAAMwX,cAAcvQ,IAAK,EAAKjH,MAAMwX,cAAcrQ,KACxD,MArBM,2BAyBNnH,EAAQ,EAAKA,MAAM8V,oBAAoB3T,MAzBjC,WA6BN,EAAKnC,MAAM2W,wBACiC,QAA5C,EAAK3W,MAAM2W,uBAAuBxU,MA9B5B,wBAAArC,EAAA,KAgCQ,EAAKE,MAAM0W,iBAhCnB,kDAgCGnW,EAhCH,WAiCwC,QAAxC,EAAKP,MAAM0W,gBAAgBnW,GAAG4B,MAjC9B,yEAkCYgE,MACd,EAAKkS,YACHrY,EACA,EAAKA,MAAMqW,mBAAmBlU,MAC9B,EAAKnC,MAAM0W,gBAAgBnW,GAAG4B,QAtC9B,eAkCAoE,EAlCA,iBAyCYA,EAAII,OAzChB,SAyCAvG,EAzCA,QA0CA+C,KAAO,EAAKnD,MAAM0W,gBAAgBnW,GAAG4B,MACzCgW,EAAKjW,KAAK9B,GA3CN,iEA8CU+F,MACd,EAAKkS,YACHrY,EACA,EAAKA,MAAMqW,mBAAmBlU,MAC9B,EAAKnC,MAAM2W,uBACP,EAAK3W,MAAM2W,uBAAuBxU,MAClC,OApDF,eA8CFoE,EA9CE,YAuDN4R,EAvDM,UAuDU5R,EAAII,OAvDd,yBAuDDzE,KAvDC,kFA0DRpB,YAAa,EAAD,GAAI,uCA1DR,kBA2DD,EAAKZ,SAAS,CAAEC,QAAQ,KA3DvB,yBAAAL,EAAA,KAgEIqY,GAhEJ,sDAgED5X,EAhEC,WAiEJH,EAAM+X,EAAK5X,GACX0R,OAlEI,EAmEJ9O,OAnEI,EAqEU8O,EAAd7R,EAAI6R,SAAqB7R,EAAI6R,SACjB7R,EAMd+C,EAHA,EAAKnD,MAAM2W,wBACiC,QAA5C,EAAK3W,MAAM2W,uBAAuBxU,MAE3BwE,EAAKxD,KAAO,IAAM/C,EAAI+C,KACnBwD,EAAKxD,KA7ET,UA+EF3C,YAAOT,EAAQ,eAAgB,OAAQ,CAC3CoD,KAAMA,EACN8O,SAAUA,IAjFJ,gCAoFVpR,YAAe,0BApFL,mDAsFVC,YAAa,EAAD,GAAI,0BAtFN,QAwFZ,EAAKZ,SAAS,CAAEC,QAAQ,IAExBiU,OAAOpC,SAAS3B,KAAO,wBACvB,EAAKnP,YA3FO,wEAtKK,EAkSnBsV,kBAlSmB,qBAkSC,oCAAA1W,EAAA,wDAGb,EAAKE,MAAMqW,mBAHE,iDAKlB,EAAKnW,SAAS,CAAEwW,gBAAiB,KAE7B1W,EAAQ,EAAKA,MAAM8V,oBAAoB3T,MAPzB,KASV,EAAKnC,MAAMqW,mBAAmBlU,MATpB,OAUb,OAVa,OAcb,SAda,OAiBb,SAjBa,+BAYhByD,EAAM,YAZU,mCAehBA,EAAM,UAAY5F,EAAQ,SAfV,oCAkBhB4F,EAAM,UAAY5F,EAAQ,SAlBV,gFAwBFmG,MACd,+DAAiEP,GAzBjD,eAwBdW,EAxBc,OA4BduD,EAAO,CAAC,CAAE3H,MAAO,MAAOE,MAAO,wBA5BjB,UA6BDkE,EAAII,OA7BH,QA6BdwR,EA7Bc,YA+BV,EAAKnY,MAAMqW,mBAAmBlU,MA/BpB,OAgCb,OAhCa,gCAiChBgW,EAAKnW,QAAQ,SAAAwG,GACPA,EAAErF,KAAK4J,SAAS,EAAK/M,MAAM8V,oBAAoB3T,QACjD2H,EAAK5H,KAAK,CAAEC,MAAOqG,EAAErF,KAAMd,MAAOmG,EAAErF,SAnCxB,6BAwChBgV,EAAKnW,QAAQ,SAAAwG,GACX,IAAI+G,EAAM/G,EAAErF,KAAKmV,QAAQ,WAAY,IACrCxO,EAAK5H,KAAK,CAAEC,MAAOoN,EAAKlN,MAAOkN,MA1CjB,QA8ClB,EAAKrP,SAAS,CAAEwW,gBAAiB5M,IA9Cf,0CAlSD,EAmVnB5I,UAnVmB,qBAmVP,8BAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEsB,SAAS,EAAMyK,OAAQ,KACnC9K,EAAO,GAJD,kBAOKyI,YAAW7J,GAPhB,OAORoB,EAPQ,uDASRL,YAAa,EAAD,GAAI,wBATR,QAWV,EAAKZ,SAAS,EAAKqY,aACnB,EAAKrY,SAAS,CAAEsB,SAAS,EAAOL,SAZtB,uDAhVV,EAAKnB,MAAQ,EAAKuY,UAAU5Y,GAC5B,EAAKK,MAAMD,OAASJ,EAAMI,OAE1B,EAAKyU,gBAAkBvS,IAAEwS,OAAO,CAC9BtR,KAAMlB,IAAEyS,SAGV,EAAKC,kBAAoB,CACvBC,OAAQ,CACNzR,KAAM,CACJd,MAAO,YACPoD,MAAO,iCAKb,EAAKyR,cAAgB,SAAAlG,GAAO,OAAI,EAAK9Q,SAAS,CAAE8Q,aAChD,EAAKvE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBArBV,E,uEAwBT/M,GACR,IAAI0M,EAAUC,aAAaC,QAAQ,eAGnC,OAFKF,IAASA,EAAU,GAEjB,CACL7K,SAAS,EACT2U,mBAAoB,KACpBL,oBAAqB,KACrBO,mBAAoB,KACpBM,uBAAwB,KACxBD,gBAAiB,GACjBvV,KAAM,GACNqX,SAAU,GACVd,eAAgB,KAChB1G,QAAS,GACTwG,cAAe,KACfvL,OAAQ,GACRI,QAASA,EACTF,QAAS,EACT8H,YAAY,K,0CAYI7T,GAClBkM,aAAaM,QAAQ,oBAAqBxM,EAAI+B,OAC9CO,KAAKxC,SAAS,CAAEiM,QAAS,EAAGE,QAASjM,EAAI+B,U,mCAO9B0K,GACXnK,KAAKxC,SAAS,CACZ+L,OAAQY,EAAMC,OAAO3K,MAAMyG,cAC3BuD,QAAS,M,mCAgBA+L,GACXxV,KAAKxC,SAAS,CAAEgY,kB,4CAsChB,IAAKxV,KAAK1C,MAAMqW,mBAAoB,OAAO,EAC3C,OAAQ3T,KAAK1C,MAAMqW,mBAAmBlU,OACtC,IAAK,KACL,IAAK,OACL,IAAK,OACH,OAAO,EACT,QACE,OAAO,K,0CAKT,OAAIO,KAAK1C,MAAMG,WACVuC,KAAK1C,MAAMmW,wBAEdzT,KAAK1C,MAAMqW,oBAC6B,UAAxC3T,KAAK1C,MAAMqW,mBAAmBlU,YAG5BO,KAAK+T,wBAAyB/T,KAAK1C,MAAM2W,0BAEX,OAA9BjU,KAAK1C,MAAM0X,gBACkB,OAA7BhV,KAAK1C,MAAMwX,oB,kCAoHLxX,EAAOgN,EAAM7K,GACvB,IAAIyD,EAEJ,OAAQoH,GACR,IAAK,QACHpH,EAAM,UAAY5F,EAAQ,iBAC1B,MACF,IAAK,KAEH4F,EAAM,YAAczD,EAAQ,iBAC5B,MACF,IAAK,OACHyD,EAAM,UAAY5F,EAAQ,SAAWmC,EAAQ,WAC7C,MACF,IAAK,OACHyD,EAAM,UAAY5F,EAAQ,SAAWmC,EAAQ,WAC7C,MACF,QACE,MAAM,IAAIsE,MAAM,8BAGlB,MACE,oEAAsEb,I,0CAKxElD,KAAKxB,c,+BAmEG,IAAD,OACCnB,EAAW2C,KAAK1C,MAAhBD,OAEJ0Y,EAAc,CAChB,CAAEtW,MAAO,SAAUE,MAAO,oCAC1B,CAAEF,MAAO,SAAUE,MAAO,6BAC1B,CAAEF,MAAO,SAAUE,MAAO,+BAC1B,CAAEF,MAAO,OAAQE,MAAO,kCAGtBmL,EAAO,GAQX,OANA9K,KAAK1C,MAAMmB,KAAKa,QAAQ,SAAAC,GAClB,EAAKjC,MAAMiM,SAAW7J,YAAiBH,GAAG8K,SAAS,EAAK/M,MAAMiM,SAElEuB,EAAKtL,KAAKD,KAIV,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CACEgL,OAAO,EACPC,KAAK,SACLC,OAAQ,kBACN,kBAAC,IAAD,CAAY1F,KAAM,EAAKzH,MAAMwB,QAASoG,KAAM,EAAK1G,WAAjD,UACU,IACR,2BACE8L,KAAK,OACL7K,MAAO,EAAKnC,MAAMmC,MAClBqB,SAAU,EAAKiJ,aACfnF,WAAS,8CAEX,6BACA,kBAAC,EAAD,CAAUvH,OAAQA,EAAQoB,KAAMqM,EAAMvN,MAAO,QAInD,kBAAC,IAAD,CACEgN,OAAO,EACPC,KAAK,YACLC,OAAQ,kBACN,6BACE,kBAAC,IAAElD,KAAK6K,KAAR,CACEC,IAAK,SAAAA,GAAG,OAAK,EAAKmD,YAAcnD,GAChC/H,KAAM,EAAKwH,gBACX/Q,QAAS,EAAKkR,kBACdnR,SAAU,SAAAgC,GAAC,OAAI,EAAKkT,aAAalT,IACjCrD,MAAO,EAAKnC,MAAMkY,cAEpB,6BARF,6BAUE,kBAAC,IAAD,CACE/V,MAAO,EAAKnC,MAAMmW,mBAClB3S,SAAU,EAAKiU,iBACfhU,QAASgV,EACT9U,cAAc,EACdC,YAAY,kBAEd,kBAAC,EAAD,CAAa3D,MAAO,IACnB,EAAK0Y,oBACJ,6BACE,6BACA,4BAAQhR,QAAS,kBAAM,EAAKsQ,gBAA5B,WAGF,OAKR,kBAAC,IAAD,CACE/K,KAAK,iBACLC,OAAQ,SAAAxN,GAAK,OACX,6BACE,kBAACD,EAAA,EAAD,CACEK,OAAQA,EACRuC,IAAK3C,EAAMuG,MAAM/B,OAAOxD,GACxBA,GAAIhB,EAAMuG,MAAM/B,OAAOxD,GACvByC,MAAM,EACNnD,MAAO,IAET,6BACA,6BACA,6BACA,kBAAC2Y,EAAA,EAAD,CAAQjR,QAAS,EAAKqM,kBAAmB9Q,MAAM,WAA/C,eAGA,kBAAC2V,EAAA,EAAD,CACE5Q,KAAM,EAAKjI,MAAMiU,WACjB3G,QAAS,EAAK4G,kBACdnM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC8Q,EAAA,EAAD,CAAanY,GAAG,sBAAhB,8CAGA,kBAACoY,EAAA,EAAD,KACE,kBAACH,EAAA,EAAD,CACEjR,QAAS,EAAKuM,kBACdhR,MAAM,UACNgS,WAAS,GAHX,MAOA,kBAAC0D,EAAA,EAAD,CACEjR,QAAS,kBAAM,EAAKqQ,YAAYrY,EAAMuG,MAAM/B,OAAOxD,KACnDuC,MAAM,WAFR,aAWV,kBAAC,IAAD,CAAcuE,KAAM/E,KAAK1C,MAAMG,e,GAvdRmD,aCzBjC,mI,mmBCwCA,IAAM0V,EAAU,SAACxL,EAAMyL,EAAYC,GAC/B,IAAMpB,EAASqB,MAAMC,KAAK5L,GADkB,EAE1BsK,EAAOuB,OAAOJ,EAAY,GAArCK,EAFqC,oBAK5C,OAFAxB,EAAOuB,OAAOH,EAAU,EAAGI,GAEpBxB,GAMLyB,EAAO,SAACC,EAAQC,EAAaC,EAAiBC,GAChD,IAAMC,EAAcT,MAAMC,KAAKI,GACzBK,EAAYV,MAAMC,KAAKK,GAF4C,EAGvDG,EAAYP,OAAOK,EAAgBI,MAAO,GAArDR,EAHkE,oBAKzEO,EAAUR,OAAOM,EAAqBG,MAAO,EAAGR,GAEhD,IAAMxB,EAAS,GAIf,OAHAA,EAAO4B,EAAgBK,aAAeH,EACtC9B,EAAO6B,EAAqBI,aAAeF,EAEpC/B,GAKLkC,EAAe,SAACC,EAAYC,GAAb,O,qVAAA,EAEjBC,WAAY,OACZtX,QAASuX,GACTC,OAAO,OAAD,OANG,EAMH,QAGNC,WAAYL,EAAa,aAAe,QAGrCC,IAGDK,EAAe,SAAAC,GAAc,MAAK,CACpCF,WAAYE,EAAiB,YAAc,YAC3C3X,QAjBS,EAkBTG,MAAO,MAGUyX,E,YACnB,WAAY9a,GAAQ,IAAD,uBACjB,4CAAMA,KA6CR+a,QAAU,SAAA/Z,GAAE,OAAI,EAAKX,MAAM,EAAK2a,QAAQha,KA9CrB,EAgDnBia,UAAY,SAAA9C,GAAW,IACX0B,EAAwB1B,EAAxB0B,OAAQC,EAAgB3B,EAAhB2B,YAGhB,GAAKA,EAIL,GAAID,EAAOO,cAAgBN,EAAYM,YAAa,CAChD,IAAMxP,EAAayO,EACf,EAAK0B,QAAQlB,EAAOO,aACpBP,EAAOM,MACPL,EAAYK,OAGZ9Z,EAAQ,CAAEuK,cAEa,eAAvBiP,EAAOO,cACP/Z,EAAQ,CAAE6a,oBAAqBtQ,IAGnC,EAAKrK,SAASF,OACX,CACH,IAAM8X,EAASyB,EACX,EAAKmB,QAAQlB,EAAOO,aACpB,EAAKW,QAAQjB,EAAYM,aACzBP,EACAC,GAGJ,EAAKvZ,SAAS,CACVqK,WAAYuN,EAAOgD,UACnBD,oBAAqB/C,EAAOiD,eAhFrB,EAqFnB/G,kBAAoB,WAClB,EAAK9T,SAAS,CAAE+T,YAAY,KAtFX,EAyFnBC,kBAAoB,WAClB,EAAKhU,SAAS,CAAE+T,YAAY,KA1FX,EAkGnB/H,gBAAkB,SAAAnD,GAChB,EAAK7I,SAAS,CAAEiM,QAASpD,EAAKqD,SAAW,KAnGxB,EAwInBlL,UAxImB,qBAwIP,oCAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEsB,SAAS,IACrB2I,EAAQ,GACRI,EAAa,GAAIsQ,EAAsB,GACvCjG,EAAS,GANH,kBASM1K,YAAWnK,GATjB,cASRoK,EATQ,iBAUWG,YAAgBvK,GAV3B,SAURwK,EAVQ,QAaGvI,QAAQ,SAAAlC,GACjB8U,EAAO9U,EAAEa,IAAM,CAAE0B,MAAOvC,EAAEqD,KAAM6J,KAAMlN,EAAEkN,KAAMgO,UAAU,EAAMvX,QAAS3D,EAAEmb,UAdnE,kDAiBRna,YAAa,EAAD,GAAI,yBAjBR,QAmBV,EAAKZ,SAAS,CAAEiK,QAAOI,aAAYsQ,sBAAqBjG,SAAQpT,SAAS,IAnB/D,wDAxIO,EA8JnB0Z,YA9JmB,sCA8JL,WAAMva,GAAN,eAAAb,EAAA,4DACJC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEC,QAAQ,EAAM8T,YAAY,IAH9B,kBAKJzT,YAAOT,EAAQ,eAAgB,OAAQ,CAC3C0K,OAAQ9J,IANA,OAQVE,YAAe,0BARL,gDAUVC,YAAa,EAAD,GAAI,0BAVN,QAYZ,EAAKZ,SAAS,CAAEC,QAAQ,IAExBiU,OAAOpC,SAAS3B,KAAO,yBACvB,EAAKnP,YAfO,uDA9JK,wDAgLnBia,YAhLmB,qBAgLL,kCAAArb,EAAA,wDACJC,EAAW,EAAKC,MAAhBD,OAGK,QADT4G,EAAO,EAAKyU,YAAY7G,YAHhB,qDAOR8G,EAAW1U,EAAKxD,KAAKmY,QAGXpV,MAAM,sBAVR,uBAWVpF,YACE,GACA,8EAbQ,+BAmBRua,EAASpN,OAAS,KAnBV,wBAoBVnN,YAAa,GAAI,mDApBP,kCAwBZ,EAAKZ,SAAS,CAAEC,QAAQ,IAxBZ,UA8BVC,EAAM,CACJ+C,KAAMkY,EACN9Q,WAAYlG,OAAOC,KAAK,EAAKtE,MAAM4U,SAhC3B,UAmCJpU,YAAOT,EAAQ,eAAgB,OAAQK,GAnCnC,QAoCVS,YAAe,0BApCL,mDAsCVC,YAAa,EAAD,GAAI,0BAtCN,QAwCZ,EAAKZ,SAAS,CAAEC,QAAQ,IAExBiU,OAAOpC,SAAS3B,KAAO,yBACvB,EAAKnP,YA3CO,yDA7KZ,IAAImL,EAAUC,aAAaC,QAAQ,gBAC9BF,IAASA,EAAU,GAGxB,IAAIuI,EAAS,GACT2G,EAAQlX,OAAOC,KAAKsQ,GARP,OAUjB,EAAK5U,MAAQ,CACXD,OAAQJ,EAAMI,OACdyB,SAAS,EACT2I,MAAO,GACPI,WAAY,GACZsQ,oBAAqB,GACrBjG,OAAQA,EACR2G,MAAOA,EACPtP,OAAQ,GACRI,QAASA,EACTF,QAAS,EACT8H,YAAY,GAGd,EAAK0G,QAAU,CACXG,UAAW,aACXC,WAAY,uBAGhB,EAAKvG,gBAAkBvS,IAAEwS,OAAO,CAC9BtR,KAAMlB,IAAEyS,SAGV,EAAKC,kBAAoB,CACvBC,OAAQ,CACNzR,KAAM,CACJd,MAAO,YACPoD,MAAO,iCAKb,EAAKgH,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBA3CV,E,iFA6FCtM,GAClBkM,aAAaM,QAAQ,oBAAqBxM,EAAI+B,OAC9CO,KAAKxC,SAAS,CAAEiM,QAAS,EAAGE,QAASjM,EAAI+B,U,mCAO9B0K,GACXnK,KAAKxC,SAAS,CACZ+L,OAAQY,EAAMC,OAAO3K,MAAMyG,cAC3BuD,QAAS,M,0CAIOa,GAClB,OAAQA,GACR,IAAK,SACH,MAAO,aACT,IAAK,UACH,MAAO,WACT,IAAK,SACH,MAAO,SACT,IAAK,UACH,MAAO,gBACT,IAAK,OACH,MAAO,iBACT,IAAK,OACH,MAAO,mBACT,QACE,OAAOA,K,mCAIEoO,GACX1Y,KAAKxC,SAAS,CAAEkb,kB,0CAIhB1Y,KAAKxB,c,+BAyFG,IAAD,OACCnB,EAAW2C,KAAK1C,MAAhBD,OAEJyN,EAAO,GAQX,OANA9K,KAAK1C,MAAMmK,MAAMnI,QAAQ,SAAAkN,GACnB,EAAKlP,MAAMiM,SAAW7J,YAAiB8M,GAAGnC,SAAS,EAAK/M,MAAMiM,SAElEuB,EAAKtL,KAAKgN,KAIV,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CACEjC,OAAO,EACPC,KAAK,UACLC,OAAQ,kBACN,kBAAC,IAAD,CACE1F,KAAM,EAAKzH,MAAMwB,QACjBoG,KAAM,kBAAM,EAAK1G,cAFnB,UAIU,IACR,2BACE8L,KAAK,OACL7K,MAAO,EAAKnC,MAAMmC,MAClBqB,SAAU,EAAKiJ,aACfnF,WAAS,8CAEX,6BACA,kBAACkU,EAAD,CAAWzb,OAAQA,EAAQoK,MAAOqD,EAAMvN,MAAO,QAIrD,kBAAC,IAAD,CACEiN,KAAK,aACLC,OAAQ,SAAAxN,GAAK,OACX,6BACE,kBAAC,IAAEsK,KAAK6K,KAAR,CACEC,IAAK,SAAAA,GAAG,OAAK,EAAKqG,YAAcrG,GAChC/H,KAAM,EAAKwH,gBACX/Q,QAAS,EAAKkR,kBACdnR,SAAU,SAAAgC,GAAC,OAAI,EAAKiW,aAAajW,IACjCrD,MAAO,EAAKnC,MAAMob,cAGpB,yBAAKzY,MAAO,CAACC,QAAS,OAAQ8Y,cAAe,QAC3C,kBAAC,IAAD,CAAiBd,UAAW,EAAKA,WAC7B,kBAAC,IAAD,CAAWb,YAAY,aAClB,SAAC4B,EAAUC,GAAX,OACG,yBACI7G,IAAK4G,EAASE,SACdlZ,MAAO4X,EAAaqB,EAASpB,iBAC5B,EAAKxa,MAAMuK,WAAWhG,IAAI,SAACuX,EAAMhC,GAAP,OACvB,kBAAC,IAAD,CACIxX,IAAKwZ,EAAKnb,GACVob,YAAaD,EAAKnb,GAClBmZ,MAAOA,GACN,SAAC6B,EAAUC,GAAX,OACG,uCACI7G,IAAK4G,EAASE,UACVF,EAASK,eACTL,EAASM,gBAHjB,CAIItZ,MAAOqX,EACH4B,EAAS3B,WACT0B,EAASK,eAAerZ,SAE3BmZ,EAAKzZ,OAASyZ,EAAKI,SAAW,KAAO,IAR1C,KAQiD,IAC5C,EAAKC,oBAAoBL,EAAK9O,MAAO,SAKrD2O,EAAS/X,eA1B1B,2BAiCI,kBAAC,IAAD,CAAWmW,YAAY,cAClB,SAAC4B,EAAUC,GAAX,OACG,yBACI7G,IAAK4G,EAASE,SACdlZ,MAAO4X,EAAaqB,EAASpB,iBAC5B,EAAKxa,MAAM6a,oBAAoBtW,IAAI,SAACuX,EAAMhC,GAAP,OAChC,kBAAC,IAAD,CACIxX,IAAKwZ,EAAKnb,GACVob,YAAaD,EAAKnb,GAClBmZ,MAAOA,GACN,SAAC6B,EAAUC,GAAX,OACG,uCACI7G,IAAK4G,EAASE,UACVF,EAASK,eACTL,EAASM,gBAHjB,CAIItZ,MAAOqX,EACH4B,EAAS3B,WACT0B,EAASK,eAAerZ,SAE3BmZ,EAAKzZ,OAASyZ,EAAKI,SAAW,KAAO,IAR1C,KAQiD,IAC5C,EAAKC,oBAAoBL,EAAK9O,MAAO,IACtC,kBAAC,IAAD,CAAU7K,MAAM,MAAMe,MAAM,YAVhC,iBAeXyY,EAAS/X,iBAO5B,4BACEjB,MAAO,CAAE0X,OAAQ,IACjB1S,QAAS,kBAAM,EAAKwT,gBAFtB,mBAUN,kBAAC,IAAD,CACEjO,KAAK,kBACLC,OAAQ,SAAAxN,GAAK,OACX,6BACE,kBAACyc,EAAD,CACErc,OAAQA,EACRuC,IAAK3C,EAAMuG,MAAM/B,OAAOxD,GACxBA,GAAIhB,EAAMuG,MAAM/B,OAAOxD,GACvByC,MAAM,EACNnD,MAAO,IAET,6BACA,6BACA,6BACA,kBAAC,IAAD,CAAQ0H,QAAS,EAAKqM,kBAAmB9Q,MAAM,WAA/C,eAGA,kBAAC,IAAD,CACE+E,KAAM,EAAKjI,MAAMiU,WACjB3G,QAAS,EAAK4G,kBACdnM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC,IAAD,CAAarH,GAAG,sBAAhB,8CAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEgH,QAAS,EAAKuM,kBACdhR,MAAM,UACNgS,WAAS,GAHX,MAOA,kBAAC,IAAD,CACEvN,QAAS,kBAAM,EAAKuT,YAAYvb,EAAMuG,MAAM/B,OAAOxD,KACnDuC,MAAM,WAFR,aAWV,kBAAC,IAAD,CAAcuE,KAAM/E,KAAK1C,MAAMG,e,GAvYNmD,aA8Y7BkY,EAAY,SAAA7b,GAChB,IAAM0M,EAAU1M,EAAMM,MAAMD,MAAMqM,QAC9BkB,EAAW,8BACXC,EAAO,GAyCX,OAvCA7N,EAAMwK,MAAMnI,QAAQ,SAACkN,EAAGzB,GACbC,KAAKC,MAAMF,EAAMpB,GAAW,IAC1B1M,EAAMM,MAAMD,MAAMmM,SAC7BqB,EAAKtL,KAAK,kBAACka,EAAD,CAAUrc,OAAQJ,EAAMI,OAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAON,EAAMM,WAG7EsN,EACE,yBAAK5K,MAAO,CAAEC,QAAS,SACrB,kBAAC,IAAD,CACEgL,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWrO,EAAMwK,MAAM8D,OAAS5B,EAChC6B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAczO,EAAMM,MAAMiM,gBAC1BmC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,WAZrB,eAeE,yBAAK5L,MAAO,CAAEK,MAAO,KAArB,aACa,IACX,kBAAC,IAAD,CACEb,MAAO,CAAEA,MAAOkK,EAAShK,MAAOgK,GAChC7I,SAAU7D,EAAMM,MAAM0M,oBACtBlJ,QAAS,CACP,CAAEtB,MAAO,EAAGE,MAAO,GACnB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,IAAKE,MAAO,UAQ7B,6BACE,4BACG1C,EAAMqN,KADT,UACsBrN,EAAMwK,MAAM8D,OADlC,KAGA,kBAAC,IAAD,CAAM5K,GAAI,cACR,6CAEDkK,EACAC,EACAD,IAKM6O,EAAb,YACE,WAAYzc,GAAQ,IAAD,8BACjB,4CAAMA,KAcRC,kBAfmB,sCAeC,WAAMC,GAAN,qBAAAC,EAAA,qDACVC,EAAW,EAAKC,MAAhBD,OAEHF,IAAqBA,EAAsB,IAChD,EAAKF,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJlB,SAMZC,EAAMC,YACR,EAAKL,MAAMH,oBACXA,GARc,OAAAC,EAAA,KAWFM,EAAIE,KAXF,qDAWPC,EAXO,qBAYRC,YACJT,EACA,0BACA,OACA,CAAEU,OAAQL,EAAIE,IAAIC,GAAIkK,OAAQ,EAAK9K,MAAMgB,KAhB7B,sCAAAb,EAAA,KAoBFM,EAAIQ,IApBF,sDAoBPL,EApBO,qBAqBRC,YACJT,EACA,6BACA,OACA,CAAEU,OAAQL,EAAIQ,GAAGL,GAAIkK,OAAQ,EAAK9K,MAAMgB,KAzB5B,gCA6BhBE,YAAe,2BACf,EAAKX,SAAS,CAAEL,wBA9BA,kDAgChBiB,YAAa,EAAD,GAAI,+BAhCA,QAkClB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAlClB,wDAfD,wDAoDnBY,oBApDmB,sCAoDG,WAAMC,GAAN,qBAAAlB,EAAA,qDACZC,EAAW,EAAKC,MAAhBD,OAEHiB,IAAuBA,EAAwB,IACpD,EAAKrB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJhB,SAMdC,EAAMC,YACR,EAAKL,MAAMgB,sBACXA,GARgB,OAAAlB,EAAA,KAWJM,EAAIE,KAXA,qDAWTC,EAXS,qBAYVC,YACJT,EACA,+BACA,OACA,CAAEkB,IAAKb,EAAIE,IAAIC,GAAIkK,OAAQ,EAAK9K,MAAMgB,KAhBxB,sCAAAb,EAAA,KAoBJM,EAAIQ,IApBA,sDAoBTL,EApBS,qBAqBVC,YACJT,EACA,kCACA,OACA,CAAEkB,IAAKb,EAAIQ,GAAGL,GAAIkK,OAAQ,EAAK9K,MAAMgB,KAzBvB,gCA6BlBE,YAAe,gCACf,EAAKX,SAAS,CAAEc,0BA9BE,kDAgClBF,YAAa,EAAD,GAAI,+BAhCE,QAkCpB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAlChB,wDApDH,wDAyFnBe,UAzFmB,qBAyFP,kDAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJkK,EAAO,GACT7I,EAAa,GACbC,EAAU,GACVC,EAAQ,GACRC,EAAgB,GAElB,EAAKrB,SAAS,CAAEsB,SAAS,IATf,kBAYkDC,QAAQC,IAAI,CACpEsI,YAAUjK,EAAQ,EAAKJ,MAAMgB,IAAI,GACjCiB,YAAgB7B,GAChB6B,YAAgB7B,EAAQ,OAAQ,EAAKJ,MAAMgB,IAC3CkB,YAAW9B,GACX8B,YAAW9B,EAAQ,OAAQ,EAAKJ,MAAMgB,MAjBhC,mCAYPsJ,EAZO,KAYD7I,EAZC,KAYWC,EAZX,KAYoBC,EAZpB,KAY2BC,EAZ3B,8DAoBRT,YAAa,EAAD,GAAI,6BApBR,kBAqBD,EAAKZ,SAAS,CAAEsB,SAAS,KArBxB,QAwBNM,EAAc,GACdC,EAAgB,GAChBlC,EAAsB,GACtBmB,EAAwB,GAE5BM,EAAMU,QAAQ,SAAAC,GACZH,EAAYI,KAAK,CACfC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,qBAI9DsB,EAAcS,QAAQ,SAAAC,GACpBpC,EAAoBqC,KAAK,CACvBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,qBAI9DmB,EAAWY,QAAQ,SAAAQ,GACjBT,EAAcG,KAAK,CACjBC,MAAOC,YAAiBI,GACxB7B,GAAI6B,EAAE7B,GACN0B,MAAO,kBAAC,IAAD,CAAetC,OAAQA,EAAQuC,IAAKE,EAAE7B,GAAI8B,UAAWD,EAAGvC,MAAK,qBAIxEoB,EAAQW,QAAQ,SAAAQ,GACdxB,EAAsBkB,KAAK,CACzBC,MAAOC,YAAiBI,GACxB7B,GAAI6B,EAAE7B,GACN0B,MAAO,kBAAC,IAAD,CAAetC,OAAQA,EAAQuC,IAAKE,EAAE7B,GAAI8B,UAAWD,EAAGvC,MAAK,qBAIxE,EAAKC,SAAS,CACZ+J,OACA7I,aACAU,cACAC,gBACAlC,sBACAmB,wBACAQ,SAAS,IApED,wDAtFV,EAAKxB,MAAQ,CACXD,OAAQJ,EAAMI,OACdkK,KAAM,EAAKtK,MAAMsK,KACjBpK,oBAAqB,GACrBmB,sBAAuB,IAPR,EADrB,iFAaS0B,KAAK1C,MAAMiK,MAAMvH,KAAKxB,cAb/B,+BAkKY,IAAD,EACkBwB,KAAK1C,MAAtBD,EADD,EACCA,OAAQkK,EADT,EACSA,KAEhB,OAAKA,GAAQvH,KAAK1C,MAAMwB,QACf,kBAAC,IAAD,MAIP,6BACE,yBAAKmB,MAAO,CAAEC,QAAS,OAAQC,QAAS,SACtC,yBAAKF,MAAO,CAAEE,QAAS,aACrB,kBAAC,IAAD,CACEC,KAAMuZ,IACN1Z,MAAO,CAAEK,MAAO,GAAIC,OAAQ,GAAIC,MAAO,UACtC,IACF+G,EAAK9G,KAAM,IACXT,KAAK/C,MAAMyD,KACV,GAEA,kBAAC,IAAD,CAAMC,GAAI,eAAiB4G,EAAKtJ,IAAhC,UAIL+B,KAAK/C,MAAMyD,KAAO,kBAACkZ,EAAD,CAAcvc,OAAQA,EAAQkK,KAAMA,EAAMhK,MAAOyC,OAAW,QAzLvF,GAA8BY,aA+LjBgZ,EAAe,SAAA3c,GAAK,OAC/B,6BACE,6BACE,6BADF,+BAGE,kBAAC,IAAD,CACEwC,MAAOxC,EAAMM,MAAMD,MAAMH,oBACzB2D,SAAU7D,EAAMM,MAAML,kBACtB6D,QAAS9D,EAAMM,MAAMD,MAAM8B,YAC3B4B,SAAS,EACTC,cAAc,EACdC,YAAY,SAEd,6BAXF,6CAaE,kBAAC,IAAD,CACEzB,MAAOxC,EAAMM,MAAMD,MAAMgB,sBACzBwC,SAAU7D,EAAMM,MAAMc,oBACtB0C,QAAS9D,EAAMM,MAAMD,MAAM+B,cAC3B2B,SAAS,EACTC,cAAc,EACdC,YAAY,a,mgBCjsBpBiI,IAAQC,OAAOC,KAEf,IAAMwQ,EAAc,GAECC,E,YACnB,WAAY7c,GAAQ,IAAD,uBACjB,4CAAMA,KAmCRuB,UApCmB,qBAoCP,8BAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJqB,EAAa,GACjB,EAAKlB,SAAS,CAAEsB,SAAS,EAAMyK,OAAQ,KAJ7B,kBAMWrK,YAAgB7B,GAN3B,OAMRqB,EANQ,uDAQRN,YAAa,EAAD,GAAI,8BARR,QAUV,EAAKZ,SAAS,CAAEsB,SAAS,EAAOJ,eAVtB,uDApCO,EAiDnB8K,gBAAkB,SAAAnD,GAChB,EAAK7I,SAAS,CAAEiM,QAASpD,EAAKqD,SAAW,KA/CzC,IAAIC,EAAUC,aAAaC,QAAQ,qBAHlB,OAIZF,IAASA,EAAU,GAExB,EAAKrM,MAAQ,CACXD,OAAQJ,EAAMI,OACdyB,SAAS,EACTib,cAAe,GACfrb,WAAY,GACZ6K,OAAQ,GACRI,QAASA,EACTF,QAAS,GAGX,EAAKM,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAjBV,E,iFAqBjBhK,KAAKxB,c,0CAGad,GAClBkM,aAAaM,QAAQ,oBAAqBxM,EAAI+B,OAC9CO,KAAKxC,SAAS,CAAEiM,QAAS,EAAGE,QAASjM,EAAI+B,U,mCAG9B0K,GACXnK,KAAKxC,SAAS,CACZ+L,OAAQY,EAAMC,OAAO3K,MAAMyG,cAC3BuD,QAAS,M,+BAqBH,IAAD,OACCpM,EAAW2C,KAAK1C,MAAhBD,OAEJ2c,EAAQ,GACRC,EAAa,GACbC,EAAS,GACTC,EAAU,GAYd,OAVAna,KAAK1C,MAAMoB,WAAWY,QAAQ,SAAAQ,GACxB,EAAKxC,MAAMiM,SAAW7J,YAAiBI,GAAGuK,SAAS,EAAK/M,MAAMiM,UAE9DzJ,EAAEsa,OACJF,EAAO1a,KAAKM,GACHA,EAAEqa,QAASA,EAAQ3a,KAAKM,GAC1BA,EAAEyM,IAAIyN,OAASla,EAAEyM,IAAI3N,MAAM2M,OAAQyO,EAAMxa,KAAKM,GAClDma,EAAWza,KAAKM,MAIrB,kBAAC,IAAD,CAAYiF,KAAM/E,KAAK1C,MAAMwB,QAASoG,KAAM,kBAAM,EAAK1G,cACrD,kBAAC,IAAD,KACE,uCACU,IACR,2BACE8L,KAAK,OACL7K,MAAOO,KAAK1C,MAAMmC,MAClBqB,SAAUd,KAAK+J,aACfnF,WAAS,8CAEX,6BACA,kBAAC,IAAD,CACEjE,GAAI,eACJsE,QAAS,kBAAM,EAAKzH,SAAS,CAAEiM,QAAS,MAF1C,eAIeuQ,EAAMzO,OAJrB,KATF,YAgBE,kBAAC,IAAD,CACE5K,GAAI,yBACJsE,QAAS,kBAAM,EAAKzH,SAAS,CAAEiM,QAAS,MAF1C,eAIewQ,EAAW1O,OAJ1B,KAhBF,YAuBE,kBAAC,IAAD,CACE5K,GAAI,qBACJsE,QAAS,kBAAM,EAAKzH,SAAS,CAAEiM,QAAS,MAF1C,WAIWyQ,EAAO3O,OAJlB,KAMA,kBAAC,IAAD,CACEhB,OAAO,EACPC,KAAK,eACLC,OAAQ,kBAAM,kBAAC4P,EAAD,CAAgBhd,OAAQA,EAAQE,MAAO,EAAMmB,WAAYsb,OAEzE,kBAAC,IAAD,CACEzP,OAAO,EACPC,KAAK,yBACLC,OAAQ,kBACN,kBAAC4P,EAAD,CACEhd,OAAQA,EACRE,MAAO,EACP+M,KAAK,aACL5L,WAAYub,OAIlB,kBAAC,IAAD,CACE1P,OAAO,EACPC,KAAK,sBACLC,OAAQ,kBACN,6BACE,kBAAC4P,EAAD,CACEhd,OAAQA,EACRE,MAAO,EACP+M,KAAK,UACL5L,WAAYyb,IAEd,kBAAC,IAAD,CAAQlV,QAAO,qBAAE,4BAAA7H,EAAA,qEACCU,YACdT,EACA,oBACA,QAJa,QACXK,EADW,QAMP4F,MACN,EAAK9F,SAAS,CAAEuc,cAAe,CAAC9b,GAAI,UAAUP,EAAI4F,SAElDlF,YAAa,GAAI,kBATJ,yCAWdoC,MAAM,WAXT,sBAiBN,kBAAC,IAAD,CACE+J,OAAO,EACPC,KAAK,qBACLC,OAAQ,kBACN,kBAAC4P,EAAD,CACEhd,OAAQA,EACRE,MAAO,EACP+M,KAAK,SACL5L,WAAYwb,OAIlB,kBAAC,IAAD,CACE1P,KAAK,uBACLC,OAAQ,SAAAxN,GAAK,OACX,kBAACqd,EAAD,CACEjd,OAAQA,EACRuC,IAAK3C,EAAMuG,MAAM/B,OAAOxD,GACxBA,GAAIhB,EAAMuG,MAAM/B,OAAOxD,GACvByC,MAAM,OAIZ,kBAAC,IAAD,CACE2E,kBAAgB,qBAChBC,mBAAiB,2BACjBC,OAAMvF,KAAK1C,MAAMyc,cAAc9b,GAC/B2M,QAAS,kBAAM,EAAKpN,SAAS,CAAEuc,cAAe,OAE9C,yBACE9Z,MAAO,CACLuF,SAAU,WACVC,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,gBAAiB,QACjBzF,QAAS,KAGX,kBAACma,EAAD,CACEjd,OAAQA,EACRuC,IAAKI,KAAK1C,MAAMyc,cAAc9b,GAC9BA,GAAI+B,KAAK1C,MAAMyc,cAAc9b,GAC7ByC,MAAM,EACNnD,MAAOyC,SAIb,kBAAC,IAAD,CAAc+E,KAAM/E,KAAK1C,MAAMG,gB,GArMHmD,aA6MlCyZ,EAAiB,SAAApd,GACrB,IAAM0M,EAAU1M,EAAMM,MAAMD,MAAMqM,QAC9BkB,EAAW,8BACXC,EAAO,GAyCX,OAvCA7N,EAAMyB,WAAWY,QAAQ,SAACQ,EAAGiL,GAClBC,KAAKC,MAAMF,EAAMpB,GAAW,IAC1B1M,EAAMM,MAAMD,MAAMmM,SAC7BqB,EAAKtL,KAAK,kBAAC8a,EAAD,CAAejd,OAAQA,EAAQuC,IAAKE,EAAE7B,GAAI8B,UAAWD,EAAGvC,MAAON,EAAMM,WAGjFsN,EACE,yBAAK5K,MAAO,CAAEC,QAAS,SACrB,kBAAC,IAAD,CACEgL,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWrO,EAAMyB,WAAW6M,OAAS5B,EACrC6B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAczO,EAAMM,MAAMiM,gBAC1BmC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,WAZrB,eAeE,yBAAK5L,MAAO,CAAEK,MAAO,KAArB,aACa,IACX,kBAAC,IAAD,CACEb,MAAO,CAAEA,MAAOkK,EAAShK,MAAOgK,GAChC7I,SAAU7D,EAAMM,MAAM0M,oBACtBlJ,QAAS,CACP,CAAEtB,MAAO,EAAGE,MAAO,GACnB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,IAAKE,MAAO,UAQ7B,6BACE,4BACG1C,EAAMqN,KADT,eAC2BrN,EAAMyB,WAAW6M,OAD5C,KAGCV,EACD,kBAAC,IAAD,CAAMiB,UAAU,OAAOhB,GACtBD,IAKMyP,EAAb,YACE,WAAYrd,GAAQ,IAAD,8BACjB,4CAAMA,KAuBRC,kBAxBmB,sCAwBC,WAAMC,GAAN,uBAAAC,EAAA,qDACVC,EAAW,EAAKC,MAAhBD,OAEHF,IAAqBA,EAAsB,IAChD,EAAKF,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJlB,SAMZC,EAAMC,YACR,EAAKL,MAAMH,oBACXA,GARc,OAAAC,EAAA,KAWFM,EAAIE,KAXF,qDAWPC,EAXO,qBAYRC,YACJT,EACA,oBACA,OACA,CAAEU,OAAQL,EAAIE,IAAIC,GAAIU,IAAK,EAAKtB,MAAMgB,KAhB1B,sCAAAb,EAAA,KAoBFM,EAAIQ,IApBF,sDAoBPL,EApBO,qBAqBRC,YACJT,EACA,uBACA,OACA,CAAEU,OAAQL,EAAIQ,GAAGL,GAAIU,IAAK,EAAKtB,MAAMgB,KAzBzB,iDA8BM8I,YAAe1J,EAAQ,EAAKJ,MAAMgB,IA9BxC,QA8BZ8B,EA9BY,OA+BhB5B,YAAe,2BACf,EAAKX,SAAS,CACZL,sBACA4C,cAlCc,kDAqChB3B,YAAa,EAAD,GAAI,+BArCA,QAuClB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAvClB,wDAxBD,wDAkEnB8c,mBAlEmB,sCAkEE,WAAMC,GAAN,uBAAApd,EAAA,qDACXC,EAAW,EAAKC,MAAhBD,OAEHmd,IAAsBA,EAAuB,IAClD,EAAKvd,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJjB,SAMbC,EAAMC,YACR,EAAKL,MAAMkd,qBACXA,GARe,OAAApd,EAAA,KAWHM,EAAIE,KAXD,qDAWRC,EAXQ,qBAYTC,YACJT,EACA,wBACA,OACA,CAAEU,OAAQL,EAAIE,IAAIC,GAAIU,IAAK,EAAKtB,MAAMgB,KAhBzB,sCAAAb,EAAA,KAoBHM,EAAIQ,IApBD,sDAoBRL,EApBQ,qBAqBTC,YACJT,EACA,uBACA,OACA,CAAEU,OAAQL,EAAIQ,GAAGL,GAAIU,IAAK,EAAKtB,MAAMgB,KAzBxB,iDA8BK8I,YAAe1J,EAAQ,EAAKJ,MAAMgB,IA9BvC,QA8Bb8B,EA9Ba,OA+BjB5B,YAAe,uBACf,EAAKX,SAAS,CAAEgd,uBAAsBza,cAhCrB,kDAkCjB3B,YAAa,EAAD,GAAI,mCAlCC,QAoCnB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IApCjB,wDAlEF,wDAyGnBuO,kBAzGmB,sCAyGC,WAAMC,GAAN,uBAAA7O,EAAA,qDACVC,EAAW,EAAKC,MAAhBD,OAEH4O,IAAqBA,EAAsB,IAChD,EAAKhP,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJlB,SAMZC,EAAMC,YACR,EAAKL,MAAM2O,oBACXA,GARc,OAAA7O,EAAA,KAWFM,EAAIE,KAXF,qDAWPC,EAXO,qBAYRC,YACJT,EACA,+BACA,OACA,CAAE0K,OAAQrK,EAAIE,IAAIC,GAAIU,IAAK,EAAKtB,MAAMgB,KAhB1B,sCAAAb,EAAA,KAoBFM,EAAIQ,IApBF,sDAoBPL,EApBO,qBAqBRC,YACJT,EACA,kCACA,OACA,CAAE0K,OAAQrK,EAAIQ,GAAGL,GAAIU,IAAK,EAAKtB,MAAMgB,KAzBzB,iDA8BM8I,YAAe1J,EAAQ,EAAKJ,MAAMgB,IA9BxC,QA8BZ8B,EA9BY,OA+BhB5B,YAAe,yBACf,EAAKX,SAAS,CAAEyO,sBAAqBlM,cAhCrB,kDAkChB3B,YAAa,EAAD,GAAI,8BAlCA,QAoClB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IApClB,wDAzGD,wDAgJnByO,iBAhJmB,sCAgJA,WAAMC,GAAN,uBAAA/O,EAAA,qDACTC,EAAW,EAAKC,MAAhBD,OAEH8O,IAAoBA,EAAqB,IAC9C,EAAKlP,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJnB,SAMXC,EAAMC,YACR,EAAKL,MAAM6O,mBACXA,GARa,OAAA/O,EAAA,KAWDM,EAAIE,KAXH,qDAWNC,EAXM,qBAYPC,YACJT,EACA,+BACA,OACA,CAAEW,OAAQN,EAAIE,IAAIC,GAAIU,IAAK,EAAKtB,MAAMgB,KAhB3B,sCAAAb,EAAA,KAoBDM,EAAIQ,IApBH,sDAoBNL,EApBM,qBAqBPC,YACJT,EACA,kCACA,OACA,CAAEW,OAAQN,EAAIQ,GAAGL,GAAIU,IAAK,EAAKtB,MAAMgB,KAzB1B,iDA8BO8I,YAAe1J,EAAQ,EAAKJ,MAAMgB,IA9BzC,QA8BX8B,EA9BW,OA+Bf5B,YAAe,yBACf,EAAKX,SAAS,CAAE2O,qBAAoBpM,cAhCrB,kDAkCf3B,YAAa,EAAD,GAAI,8BAlCD,QAoCjB,EAAKnB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IApCnB,wDAhJA,wDAuLnBe,UAvLmB,qBAuLP,4DAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJ0C,EAAY,GACd0H,EAAQ,GACRhJ,EAAO,GACPG,EAAQ,GACR6b,EAAW,GACXC,EAAa,GAEf,EAAKld,SAAS,CAAEsB,SAAS,IAVf,kBAagCC,QAAQC,IAAI,CAClD+H,YAAe1J,EAAQ,EAAKJ,MAAMgB,IAClCuJ,YAAWnK,GACX6J,YAAW7J,GACX8B,YAAW9B,KAjBL,mCAaP0C,EAbO,KAaI0H,EAbJ,KAaWhJ,EAbX,KAaiBG,EAbjB,8DAoBRR,YAAa,EAAD,GAAI,mCApBR,kBAqBD,EAAKZ,SAAS,CAAEsB,SAAS,KArBxB,YAwBNiB,EAAUuP,SAxBJ,kCAyBSnI,YAAiB9J,EAAQ0C,EAAUuP,SAASqL,EAAG5a,EAAUuP,SAASsL,EAAG,GAzB9E,eAyBRH,EAzBQ,iBA0BWtT,YAAiB9J,EAAQ0C,EAAUuP,SAASqL,EAAG5a,EAAUuP,SAASsL,EAAGf,GA1BhF,QA0BRa,EA1BQ,eA6BNtb,EAAc,GACdgN,EAAgB,GAChBjP,EAAsB,GACtBqd,EAAuB,GACvBvO,EAAsB,GACtBE,EAAqB,GAErBE,EAAc,CAAC,CAAE5M,MAAO,GAAIE,MAAO,SAEnC2M,EAAc,CAChB,CAAE7M,MAAO,GAAIE,MAAO,QACpB,CACEF,MAAO,OACPxB,GAAI,OACJ0B,MACE,kBAAC,IAAD,CACEtC,OAAQA,EACRuC,IAAI,OACJnB,KAAM,CACJR,GAAI,OACJwC,KAAM,mDAERlD,MAAK,eACL6C,KAAMya,QAMdjc,EAAMU,QAAQ,SAAAC,GACZH,EAAYI,KAAK,CACfC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,mBAE5DwC,EAAUwM,IAAI3N,MAAMU,QAAQ,SAAClC,EAAG2N,GAC1B3N,EAAEa,KAAOsB,EAAEtB,KACbd,EAAoBqC,KAAK,CACvBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,mBAE5D6O,EAAc5M,KAAK,CACjBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,mBAExDH,EAAE0d,QACJN,EAAqBhb,KAAK,CACxBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAI4B,KAAMN,EAAGhC,MAAK,wBAOpEkK,EAAMnI,QAAQ,SAAAkN,GACZH,EAAY7M,KAAK,CACfC,MAAOC,YAAiB8M,GACxBvO,GAAIuO,EAAEvO,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAK,qBAI9DwC,EAAUwM,IAAI9E,MAAMnI,QAAQ,SAAAkN,GACtBA,EAAEC,QACJR,EAAoBzM,KAAK,CACvBC,MAAOC,YAAiB8M,GACxBvO,GAAIuO,EAAEvO,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAK,qBAKhEkB,EAAKa,QAAQ,SAAAC,GACX+M,EAAY9M,KAAK,CACfC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAIQ,KAAMc,EAAGhC,MAAK,qBAI9DwC,EAAUwM,IAAIG,MAAMpN,QAAQ,SAAAC,GACtBA,EAAEkN,QACJN,EAAmB3M,KAAK,CACtBC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MACE,kBAAC,IAAD,CACEtC,OAAQA,EACRuC,IAAKL,EAAEtB,GACPQ,KAAMc,EACNhC,MAAK,eACL6C,KAAML,EAAUgb,SAAWF,IAAS,WAO9C,EAAKrd,SAAS,CACZsB,SAAS,EACTiB,YACAX,cACAgN,gBACAC,cACAC,cACAnP,sBACAqd,uBACAvO,sBACAE,qBACAsO,WACAC,eA/IQ,wDAvLO,EA0UnBM,eA1UmB,sCA0UF,WAAOjb,EAAWgF,GAAlB,iBAAA3H,EAAA,4DACPC,EAAW,EAAKC,MAAhBD,OAEJ4d,EAAOlW,EAAO,OAAS,SAC3B,EAAK9H,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJrB,kBAMPK,YACJT,EACA,cAAgB4d,EAChB,OACA,CAAEhd,GAAI8B,EAAU9B,KAVL,OAYbE,YAAe,uBAAyB8c,EAAO,OAZlC,gDAcb7c,YAAa,EAAD,GAAI,aAAe6c,EAAO,eAdzB,QAgBf,EAAKhe,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAEpC,EAAKe,YAlBU,uDA1UE,wDAGjB,EAAKlB,MAAQ,CACXD,OAAQJ,EAAMI,OACdE,MAAO,EAAKN,MAAMM,MAAMN,MAAMM,MAC9BwC,UAAW,EAAK9C,MAAM8C,UACtB5C,oBAAqB,GACrBqd,qBAAsB,GACtBvO,oBAAqB,GACrBE,mBAAoB,IAVL,EADrB,iFAgBSnM,KAAK1C,MAAMyC,WAAWC,KAAKxB,YAEhCsO,IAAaC,YAlBjB,2CAsBID,IAAaC,YAtBjB,+BAgWY,IAAD,SACuB/M,KAAK1C,MAA3BD,EADD,EACCA,OAAQ0C,EADT,EACSA,UAEhB,OAAKA,GAAaC,KAAK1C,MAAMwB,QACpB,kBAAC,IAAD,MAGLkB,KAAK/C,MAAMyD,KAEX,6BACE,kBAAC,IAAD,CAAUsM,WAAW,aAAa/M,MAAO,CAAEK,MAAO,MAChD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ2M,IAAKlN,EAAUU,KAAMyM,IAAKnN,EAAUmb,UAE9C,kBAAC,IAAD,CACE1N,QAASzN,EAAUU,KACnBgN,UACE1N,EAAUob,YACNC,EAAarb,EAAUob,aACvB,QAGR,kBAACE,EAAD,CAAiBtb,UAAWA,KAE9B,kBAACub,EAAD,CAAmBje,OAAQA,EAAQ0C,UAAWA,EAAWxC,MAAOyC,QAKpE,kBAAC,IAAD,CACEqN,QAAM,EACNpN,MAAO,CAAEK,MAAO,KAChB0M,WAAW,aACX/H,QAAS,kBAAM,EAAKhI,MAAMM,MAAMC,SAAS,CAAEuc,cAAeha,MAE1D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQkN,IAAKlN,EAAUU,KAAMyM,IAAKnN,EAAUmb,UAE9C,kBAAC,IAAD,CACE1N,QAASzN,EAAUU,KACnBgN,UACE1N,EAAUob,YAAcC,EAAarb,EAAUob,aAAe,QAGlE,kBAACE,EAAD,CAAiBtb,UAAWA,SA5YpC,GAAmCa,aAkZtB0a,EAAoB,SAAAre,GAAK,OACpC,6BACE,6BACCA,EAAM8C,UAAUqa,OACf,kBAAC,IAAD,CACEnV,QAAS,kBAAMhI,EAAMM,MAAMyd,eAAe/d,EAAM8C,WAAW,KAD7D,kBAMA,kBAAC,IAAD,CAAQkF,QAAS,kBAAMhI,EAAMM,MAAMyd,eAAe/d,EAAM8C,WAAW,KAAnE,eAIF,6BAbF,aAca,IACV,IAAIoJ,IAAQ,SAAS0E,OAAO,IAAIpL,KAAKxF,EAAM8C,UAAUiG,UAAY,MAClE,6BAhBF,UAiBU/I,EAAM8C,UAAUwb,MAAQte,EAAM8C,UAAUwb,MAAQ,MACxD,6BAlBF,UAmBUte,EAAM8C,UAAUyb,MAAQve,EAAM8C,UAAUyb,MAAQ,MACxD,6BApBF,WAqBW,IACT,kBAACC,EAAD,CAAkBpe,OAAQA,EAAQE,MAAON,EAAMM,MAAOwC,UAAW9C,EAAM8C,YACvE,6BACC9C,EAAMM,MAAMD,MAAMmd,SAASlP,OAC1B,yEAEGtO,EAAMM,MAAMD,MAAMmd,SAAS5Y,IAAI,SAAAtC,GAAC,OAAI,6BAAMA,EAAEkB,SAG/C,iFAEF,6BACCxD,EAAMM,MAAMD,MAAMod,WAAWnP,OAC5B,8EAEGtO,EAAMM,MAAMD,MAAMod,WAAWgB,MAAM,EAAE,GAAG7Z,IAAI,SAAAtC,GAAC,OAAI,6BAAMA,EAAEkB,SAG5D,oDAA0BoZ,EAA1B,yBAEF,6BAzCF,0BA2CE,6BACA,6BACA,oEAEE,kBAAC,IAAD,CACEpa,MAAOxC,EAAMM,MAAMD,MAAMH,oBACzB2D,SAAU7D,EAAMM,MAAML,kBACtB6D,QAAS9D,EAAMM,MAAMD,MAAM8B,YAC3B4B,SAAS,EACTC,cAAc,EACdC,YAAY,SAEd,6BAVF,uCAYE,kBAAC,IAAD,CACEzB,MAAOxC,EAAMM,MAAMD,MAAMkd,qBACzB1Z,SAAU7D,EAAMM,MAAMgd,mBACtBxZ,QAAS9D,EAAMM,MAAMD,MAAMH,oBAC3B6D,SAAS,EACTC,cAAc,EACdC,YAAY,UAIhB,6BACCjE,EAAMM,MAAMD,MAAMH,oBAAoBoO,OACrC,wFAEE,6BACCtO,EAAM8C,UAAUwM,IAAI9E,MAAMsG,OAAO,SAAAvB,GAAC,OAAKA,EAAEC,SAAQ5K,IAAI,SAAA2K,GAAC,OACrD,kBAAC,IAAD,CAAUnP,OAAQA,EAAQuC,IAAK4M,EAAEvO,GAAIsJ,KAAMiF,EAAGjP,MAAON,EAAMM,UAE5DN,EAAM8C,UAAUwM,IAAIG,MAAMqB,OAAO,SAAAxO,GAAC,OAAKA,EAAEkN,SAAQ5K,IAAI,SAAAtC,GAAC,OACrD,kBAAC,IAAD,CAAUlC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAIQ,KAAMc,EAAGhC,MAAON,EAAMM,WAG/D,GAEF,6EAEE,kBAAC,IAAD,CACEkC,MAAOxC,EAAMM,MAAMD,MAAM2O,oBACzBnL,SAAU7D,EAAMM,MAAMyO,kBACtBjL,QAAS9D,EAAMM,MAAMD,MAAM+O,YAC3BrL,SAAS,EACTC,cAAc,EACdC,YAAY,SAEd,6BAVF,+CAYE,kBAAC,IAAD,CACEzB,MAAOxC,EAAMM,MAAMD,MAAM6O,mBACzBrL,SAAU7D,EAAMM,MAAM2O,iBACtBnL,QAAS9D,EAAMM,MAAMD,MAAMgP,YAC3BtL,SAAS,EACTC,cAAc,EACdC,YAAY,YAMPua,EAAb,YACE,WAAYxe,GAAQ,IAAD,8BACjB,4CAAMA,KAWRyX,cAZmB,sCAYH,WAAMpG,GAAN,mBAAAlR,EAAA,4DACNC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAE8Q,YAHF,kBAKIqG,2BAAiBrG,GALrB,cAKRzK,EALQ,gBAMI+Q,oBAAU/Q,EAAI,IANlB,cAMRgR,EANQ,iBAON/W,YACJT,EACA,oBACA,OACA,CACEY,GAAI,EAAKhB,MAAM8C,UAAU9B,GACzBqQ,QAASA,EACT7J,IAAKoQ,EAAIpQ,IACTF,IAAKsQ,EAAItQ,MAfD,QAkBZ,EAAKtH,MAAMM,MAAMiB,YACjBL,YAAe,4BAnBH,kDAqBZC,YAAa,EAAD,GAAI,kCArBJ,wDAZG,sDAEjB,EAAKd,MAAQ,CACXD,OAAQJ,EAAMI,OACdqD,MAAM,EACN4N,QAAS,EAAKrR,MAAM8C,UAAUob,YAC1B,EAAKle,MAAM8C,UAAUob,YACrB,IAEN,EAAK3G,cAAgB,SAAAlG,GAAO,OAAI,EAAK9Q,SAAS,CAAE8Q,aAT/B,EADrB,sEAsCY,IAAD,OACP,OAAItO,KAAK1C,MAAMoD,KAEX,kBAAC,IAAD,CACE6T,SAAU,IACV9U,MAAOO,KAAK1C,MAAMgR,QAClBxN,SAAUd,KAAKwU,cACfC,SAAUzU,KAAK0U,gBAKnB,6BACG1U,KAAK1C,MAAMgR,QAAS,IACrB,kBAAC,IAAD,CAAQrJ,QAAS,kBAAM,EAAKzH,SAAS,CAAEkD,MAAM,MAA7C,sBApDR,GAAsCE,aA4DzBya,EAAkB,SAAApe,GAC7B,IAAI0e,EAAS,GACT1d,EAAKhB,EAAM8C,UAAU9B,GA2DzB,OAzDIhB,EAAM8C,UAAU6b,OAClBD,EAAOnc,KACL,kBAAC,IAAD,CACEY,KAAMyb,IACNrb,MAAM,OACNZ,IAAK3B,EAAK,QACV2G,WAAS,mBAGX3H,EAAM8C,UAAUwM,IAAIuO,QACtBa,EAAOnc,KACL,kBAAC,IAAD,CACEY,KAAM0b,IACNtb,MAAM,QACNZ,IAAK3B,EAAK,SACV2G,WAAS,iBAGX3H,EAAM8C,UAAUqa,OAClBuB,EAAOnc,KACL,kBAAC,IAAD,CACEY,KAAM2b,IACNvb,MAAM,MACNZ,IAAK3B,EAAK,SACV2G,WAAS,oBAIT3H,EAAM8C,UAAUwM,IAAIyN,MACtB2B,EAAOnc,KACL,kBAAC,IAAD,CACEY,KAAM4b,IACNxb,MAAM,QACNZ,IAAK3B,EAAK,QACV2G,WAAS,sBAIb+W,EAAOnc,KACL,kBAAC,IAAD,CACEY,KAAM6b,IACNzb,MAAM,MACNZ,IAAK3B,EAAK,WACV2G,WAAS,+CAGV3H,EAAM8C,UAAUob,aACnBQ,EAAOnc,KACL,kBAAC,IAAD,CACEY,KAAMya,IACNra,MAAM,MACNZ,IAAK3B,EAAK,OACV2G,WAAS,8BAKV+W,GAGT,SAASP,EAAac,GACpB,IAAIC,EAAMD,EAAKE,MAAM,MACrB,OAAID,EAAI5Q,OAAS,EAAU2Q,GAC3BC,EAAIE,QACGF,EAAIG,KAAK,U,sICl7BLC,G,OAAb,2MACEjf,MAAQ,CACNkf,QAAS,EAAKvf,MAAMuf,UAAW,EAC/Bxb,QAAS,EAAK/D,MAAM+D,UAAW,EAC/BvB,MAAO,EAAKxC,MAAMwC,MAClBgd,KAAM,CAAEhd,MAAO,IAAKE,MAAO,sBAC3B+c,KAAM,CAAEjd,MAAO,EAAGE,MAAO,cAN7B,EASEgd,aAAe,WAAO,IAAD,EACc,EAAK1f,MAA9B2f,EADW,EACXA,cAAejd,EADJ,EACIA,MACvB,EAAKnC,SACH,CACEgf,SAAU,EAAKlf,MAAMkf,QACrBxb,SAAU,EAAK1D,MAAM0D,QACrBvB,MAAO,GACPgd,KAAM,CAAEhd,MAAO,IAAKE,MAAO,sBAC3B+c,KAAM,CAAEjd,MAAO,EAAGE,MAAO,cAE3B,kBAAMid,GAAiBA,EAAcjd,EAAO,EAAKrC,UAnBvD,EAuBEuf,UAAY,SAAApd,GAAU,IAAD,EACc,EAAKxC,MAA9B2f,EADW,EACXA,cAAejd,EADJ,EACIA,MACvB,OAAO,EAAKnC,SACV,CAAEiC,SACF,kBAAMmd,GAAiBA,EAAcjd,EAAO,EAAKrC,UA3BvD,EA+BEwf,aAAe,SAACC,EAAMtd,GAAW,IAAD,EACG,EAAKxC,MAA9B2f,EADsB,EACtBA,cAAejd,EADO,EACPA,MACvB,EAAKnC,SAAL,eACKuf,EAAOtd,GACV,kBAAMmd,GAAiBA,EAAcjd,EAAO,EAAKrC,UAnCvD,EAyEE0f,gBAAkB,gBAAGR,EAAH,EAAGA,QAAH,OAChB,kBAACS,EAAA,EAAD,CACEjU,UAAU,QACVlI,SAAU,kBAAM,EAAK6b,gBACrB1X,QAAS,kBAAM,EAAK0X,gBACpBld,MAAM,MACNe,MAAM,UACNgc,QAASA,KAhFf,EAoFEU,kBAAoB,oBAAGT,YAAH,MAAU,GAAV,MAAcC,YAAd,MAAqB,GAArB,IAAyBjd,MAAzB,OAClB,kBAAC,IAAM0d,SAAP,KACE,yBAAKld,MAAO,CAAEK,MAAO,MACnB,kBAAC,IAAD,CACE0I,UAAU,eACVlI,SAAU,SAAAgC,GAAC,OAAI,EAAKga,aAAa,OAAQha,IACzCrD,MAAOgd,EACP1b,QAAS,CACP,CAAEtB,MAAO,IAAKE,MAAO,sBACrB,CAAEF,MAAO,IAAKE,MAAO,uBAEvBuB,YAAY,UAGhB,yBAAKjB,MAAO,CAAEK,MAAO,MACnB,kBAAC,IAAD,CACE0I,UAAU,eACVlI,SAAU,SAAAgC,GAAC,OAAI,EAAKga,aAAa,OAAQha,IACzCrD,MAAOid,EACP3b,QAAS,CACP,CAAEtB,MAAO,EAAGE,MAAO,aACnB,CAAEF,MAAO,EAAGE,MAAO,aACnB,CAAEF,MAAO,EAAGE,MAAO,eAErBuB,YAAY,YA5GtB,wEAuCY,IAAD,SAMHlB,KAAK/C,MANF,IAEL0C,aAFK,MAEG,GAFH,MAGLoB,eAHK,MAGK,GAHL,MAILqc,gBAJK,aAKLC,WAAc/c,GALT,aAK+B,CAAEA,MAAO,IAAKgd,WAAY,KALzD,GAKShd,MAAOgd,EALhB,EAKgBA,WALhB,EAOyCtd,KAAK1C,MAA7Ckf,EAPD,EAOCA,QAASxb,EAPV,EAOUA,QAASvB,EAPnB,EAOmBA,MAAOgd,EAP1B,EAO0BA,KAAMC,EAPhC,EAOgCA,KAEvC,OACE,yBAAK1T,UAAU,aACb,yBAAK/I,MAAO,CAAEK,MAAOgd,IAAe3d,EAApC,KAAkD,IAClD,yBAAKM,MAAO,CAAEK,UACZ,kBAAC,IAAD,CACE0I,UAAU,mBACVvJ,MAAOA,EACPsB,QAASA,EACTD,SAAU,SAAAgC,GAAC,OAAI,EAAK+Z,UAAU/Z,IAC9B9B,QAASA,EACTE,YAAY,UAGfkc,EAAWpd,KAAKgd,gBAAgB,CAAER,YAAa,GAC/CA,EACGxc,KAAKkd,kBAAkB,CACvBT,OACAC,OACAjd,UAEA,QApEZ,GAA+B8d,IAAM3c,Y,mLCa/B4c,EAAU,SAACC,EAAKnc,GACpB,OAAIA,EAAK4D,KACH5D,EAAKG,OACAH,EAAK4D,KAAKuY,EAAInc,EAAKG,OAAO,IAAKgc,EAAInc,EAAKG,OAAO,KAE/CH,EAAK4D,KAAKuY,GAGZA,EAAInc,EAAKG,OAAO,KAYrBic,E,2MACJC,2BAA6B,SAAAxT,GAC3B,EAAKlN,MAAM2gB,aAAazT,EAAO,I,EAGjC0T,sBAAwB,SAAA1T,GACtB,EAAKlN,MAAM2gB,aAAazT,EAAO,EAAKlN,MAAM6gB,KAAO,I,EAGnDC,sBAAwB,SAAA5T,GACtB,EAAKlN,MAAM2gB,aAAazT,EAAO,EAAKlN,MAAM6gB,KAAO,I,EAGnDE,0BAA4B,SAAA7T,GAC1B,EAAKlN,MAAM2gB,aACTzT,EACAa,KAAKiT,IAAI,EAAGjT,KAAKkT,KAAK,EAAKjhB,MAAMkhB,MAAQ,EAAKlhB,MAAMmhB,aAAe,K,wEAI7D,IAAD,EAC8Cpe,KAAK/C,MAAlDohB,EADD,EACCA,QAASF,EADV,EACUA,MAAOL,EADjB,EACiBA,KAAMM,EADvB,EACuBA,YAAaE,EADpC,EACoCA,MAE3C,OACE,yBAAKtV,UAAWqV,EAAQE,MACtB,kBAACC,EAAA,EAAD,CACEvZ,QAASjF,KAAK2d,2BACd3P,SAAmB,IAAT8P,EACVW,aAAW,cAEU,QAApBH,EAAMI,UAAsB,kBAAC,IAAD,MAAmB,kBAAC,IAAD,OAElD,kBAACF,EAAA,EAAD,CACEvZ,QAASjF,KAAK6d,sBACd7P,SAAmB,IAAT8P,EACVW,aAAW,iBAEU,QAApBH,EAAMI,UAAsB,kBAAC,IAAD,MAAyB,kBAAC,IAAD,OAExD,kBAACF,EAAA,EAAD,CACEvZ,QAASjF,KAAK+d,sBACd/P,SAAU8P,GAAQ9S,KAAKkT,KAAKC,EAAQC,GAAe,EACnDK,aAAW,aAEU,QAApBH,EAAMI,UAAsB,kBAAC,IAAD,MAAwB,kBAAC,IAAD,OAEvD,kBAACF,EAAA,EAAD,CACEvZ,QAASjF,KAAKge,0BACdhQ,SAAU8P,GAAQ9S,KAAKkT,KAAKC,EAAQC,GAAe,EACnDK,aAAW,aAEU,QAApBH,EAAMI,UAAsB,kBAAC,IAAD,MAAoB,kBAAC,IAAD,Y,GAnDtB9d,aAmE/B+d,EAAgCC,YA3EhB,SAAAN,GAAK,MAAK,CAC9BC,KAAM,CACJM,WAAY,EACZre,MAAO8d,EAAMQ,QAAQ9a,KAAKyJ,UAC1BsR,WAAiC,IAArBT,EAAMU,QAAQC,QAuEkC,CAAEC,WAAW,GAAvCN,CACpClB,GAgBIyB,E,YAEJ,WAAYliB,GAAQ,IAAD,8BACjB,4CAAMA,KAURmiB,iBAAmB,SAACjV,EAAO2T,GACzB,EAAKtgB,SAAS,CAAEsgB,UAZC,EAenBuB,wBAA0B,SAAAlV,GACxB,EAAK3M,SAAS,CAAE4gB,YAAajU,EAAMC,OAAO3K,SAb1C,EAAKnC,MAAQ,CACXgE,KAAM,EAAKrE,MAAMqE,KACjBI,KAAM,EAAKzE,MAAMyE,KACjBoc,KAAM,EACNM,YAAa,GAPE,E,sEAmBT,IACAC,EAAYre,KAAK/C,MAAjBohB,QADD,EAEmCre,KAAK1C,MAAvCoE,EAFD,EAECA,KAAMJ,EAFP,EAEOA,KAAM8c,EAFb,EAEaA,YAAaN,EAF1B,EAE0BA,KAC3BwB,EAAYlB,EAAcpT,KAAKuU,IAAInB,EAAa1c,EAAK6J,OAASuS,EAAOM,GAE3E,OACE,kBAACoB,EAAA,EAAD,CAAOxW,UAAWqV,EAAQE,MACxB,yBAAKvV,UAAWqV,EAAQoB,cACtB,kBAACC,EAAA,EAAD,CAAO1W,UAAWqV,EAAQsB,OACxB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGve,EAAKO,IAAI,SAAAP,GAAI,OACZ,kBAACwe,EAAA,EAAD,CAAStR,MAAOlN,EAAKE,SACnB,kBAACue,EAAA,EAAD,KAAYze,EAAKC,aAKzB,kBAACye,EAAA,EAAD,KACGte,EAAKga,MAAMoC,EAAOM,EAAaN,EAAOM,EAAcA,GAAavc,IAAI,SAAA4b,GAAG,OACvE,kBAACoC,EAAA,EAAD,CAAUjgB,IAAK6d,EAAIxf,IAChBqD,EAAKO,IAAI,SAAAoe,GACR,OAAIA,EAAEC,iBAAmBD,EAAEC,gBAAgBzC,GAEvC,kBAACqC,EAAA,EAAD,CAAStR,MAAOiP,EAAI1a,OAClB,kBAACgd,EAAA,EAAD,KAAYvC,EAAQC,EAAKwC,KAIrB,kBAACF,EAAA,EAAD,KAAYvC,EAAQC,EAAKwC,SAKxCX,EAAY,GACX,kBAACO,EAAA,EAAD,CAAU5f,MAAO,CAAEM,OAAQ,GAAK+e,IAC9B,kBAACS,EAAA,EAAD,CAAWI,QAAS,MAI1B,kBAACC,EAAA,EAAD,KACE,kBAACP,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BH,QAAS,EACThC,MAAOzc,EAAK6J,OACZ6S,YAAaA,EACbN,KAAMA,EACNyC,YAAa,CACXC,QAAQ,GAEV5C,aAAc5d,KAAKof,iBACnBqB,oBAAqBzgB,KAAKqf,wBAC1BqB,iBAAkB/B,a,GA1EX/d,aAyFVge,cAtGA,SAAAN,GAAK,MAAK,CACvBC,KAAM,CACJje,MAAO,OACPqgB,UAAgC,EAArBrC,EAAMU,QAAQC,MAE3BU,MAAO,CACLiB,SAAU,KAEZnB,aAAc,CACZoB,UAAW,UA6FAjC,CAAmBO,G,oBC/KnBP,G,OAAAA,YA9BA,CACbL,KAAM,CACJuC,SAAU,IA4BClC,CAxBK,SAAC,GAAD,IAAGpQ,EAAH,EAAGA,MAAOuS,EAAV,EAAUA,UAAV,OAClB,yBACE/X,UAAS,oCACO,IAAd+X,EAAkB,SAAW,WAGhB,IAAdA,EACC,yBAAK/X,UAAU,qBACb,kBAACgY,EAAA,EAAD,MADF,YAKA,kBAAC,IAAM7D,SAAP,KACE,wBAAIld,MAAO,CAAE0gB,UAAW,QAAUnS,GAClC,kBAACyS,EAAA,EAAD,CACEhhB,MAAO,CAAEK,MAAO,MAAO4gB,WAAY,QACnCC,QAAQ,cACR1hB,MAAOshB,SC7BjB,iG,iVCaqB9S,E,YACnB,WAAYhR,GAAQ,IAAD,8BACjB,4CAAMA,KASRmkB,kBAVmB,qBAUC,8BAAAhkB,EAAA,4DACVC,EAAW,EAAKC,MAAhBD,OAEJgJ,EAAO,GAHO,kBAKHvI,YAAOT,EAAQ,cALZ,OAKhBgJ,EALgB,uDAOhBjI,YAAa,EAAD,GAAI,kCAPA,QAUlB,EAAKZ,SAAS,CACZ6jB,WAAYhb,EAAKib,QAAUjb,EAAKib,QAAU,UAC1CC,cAAelb,EAAKkb,cAAgBlb,EAAKkb,cAAgB,YAZzC,uDAPlB,EAAKjkB,MAAQ,CACXD,OAAQJ,EAAMI,OACdgkB,WAAY,KACZE,cAAe,MANA,E,sEA2BjB,OACE,6BACE,6BACGC,eADH,YACwCA,SAExC,6BACGxhB,KAAK1C,MAAM+jB,WACV,yBAA2BrhB,KAAK1C,MAAM+jB,WAEtC,kBAAClN,EAAA,EAAD,CAAkB5T,OAAQ,MAG9B,6BACGP,KAAK1C,MAAMikB,cACV,iBAAmBvhB,KAAK1C,MAAMikB,cAE9B,kBAACpN,EAAA,EAAD,CAAkB5T,OAAQ,MAG9B,yIAIA,2EAC8C,IAC5C,uBACE6J,OAAO,SACPsD,IAAI,sBACJC,KAAK,mEAHP,WAMK,IARP,qBAWA,6BACE,uBACEvD,OAAO,SACPsD,IAAI,sBACJC,KAAK,mCAEL,kBAAC,IAAD,CAAMvN,KAAMqhB,MALd,kBAQF,6BACE,uBACErX,OAAO,SACPsD,IAAI,sBACJC,KAAK,wCAEL,kBAAC,IAAD,CAAMvN,KAAMshB,MALd,kBAQF,6BACE,uBACEtX,OAAO,SACPsD,IAAI,sBACJC,KAAK,4BAEL,kBAAC,IAAD,CAAMvN,KAAMuhB,MALd,0B,GAjFuB/gB,a,yCCI3BghB,EAAqB,SAAC3kB,GAAW,IAC7BwC,EAAmCxC,EAAnCwC,MAAOoiB,EAA4B5kB,EAA5B4kB,QAASlH,EAAmB1d,EAAnB0d,EAAGC,EAAgB3d,EAAhB2d,EAAGkH,EAAa7kB,EAAb6kB,SAE9B,OACE,uBAAGC,UAAS,oBAAepH,EAAf,aAAqBC,EAArB,KAA2BoH,WAAcF,GAAY,IAAMA,GAAY,GAAM,MAAQ,SAC/F,0BAAMnH,EAAG,EAAGC,EAAG,GAAf,iBAA6Bnb,IAC7B,0BAAMkb,EAAG,EAAGC,EAAG,IAAf,qBAA4C,IAAViH,GAAeI,QAAQ,GAAzD,SAKehU,E,YAEnB,WAAYhR,GAAQ,IAAD,8BACjB,4CAAMA,KAeRilB,MAhBmB,qBAgBX,oCAAA9kB,EAAA,4DACEC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEsB,SAAS,IAErBwN,EAAc,GALZ,SAMYpF,YAAW7J,GANvB,cAMFqP,EANE,OAOFyV,EAAmB,GAPjB,SAQiBva,YAAgBvK,GARjC,OAQFwK,EARE,OAUN6E,EAAMpN,QAAQ,SAAAC,GACZ+M,EAAY9M,KAAK,CACfC,MAAOC,YAAiBH,GACxBtB,GAAIsB,EAAEtB,GACN0B,MAAO,kBAAC,IAAD,CAAUtC,OAAQA,EAAQuC,IAAKL,EAAEtB,GAAIQ,KAAMc,EAAGhC,MAAK,qBAI9DsK,EAAWvI,QAAQ,SAAAlC,GACjB+kB,EAAiB3iB,KAAK,CACpBC,MAAOC,YAAiBtC,GACxBa,GAAIb,EAAEa,GACN0B,MAAOvC,EAAEqD,SAIb,EAAKjD,SAAS,CAACsB,SAAS,EAAOqjB,mBAAkB7V,gBA1B3C,0CAhBW,EA6CnB8V,QA7CmB,qBA6CT,kCAAAhlB,EAAA,wDACAC,EAAW,EAAKC,MAAhBD,OAEH,EAAKC,MAAM+kB,wBAHR,wDAKR,EAAK7kB,SAAS,CAAEsB,SAAS,IAErBwjB,EAAiB,GAEjBpf,EAAM,0BACN,EAAK5F,MAAM6O,oBAAsB,EAAK7O,MAAM6O,mBAAmBlO,KAAIiF,GAAO,EAAK5F,MAAM6O,mBAAmBlO,IACxG,EAAKX,MAAM+kB,yBAA2B,EAAK/kB,MAAM+kB,wBAAwBpkB,KAAIiF,GAAO,QAAQ,EAAK5F,MAAM+kB,wBAAwBpkB,IAC/H,EAAKX,MAAMilB,eAAcrf,GAAO,sBAZ5B,UAcSpF,YAAOT,EAAQ6F,GAdxB,QAqBR,KAPImD,EAdI,SAgBIA,EAAKA,MACfA,EAAKA,KAAKxE,IAAI,SAAA2gB,GAAC,OAAIF,EAAe9iB,KAAK,CAACiB,KAAO+hB,EAAE,GAAGA,EAAE,GAAG,UAAY/iB,MAAO+iB,EAAE,OAIzEF,EAAe/W,OAAS,GAC7B+W,EAAe,GAAK,CAAC7hB,KAAM,QAAShB,MAAO6iB,EAAe,GAAG7iB,MAAM6iB,EAAeG,MAAMhjB,OAG1F,EAAKjC,SAAS,CAAE8kB,iBAAgBxjB,SAAS,IAzBjC,0CA7CS,EAyEnBoN,iBAAmB,SAAAC,GACZA,IAAoBA,EAAqB,IAC9C,EAAK3O,SAAS,CAAC2O,sBAAqB,kBAAM,EAAKiW,aA3E9B,EA8EnBM,sBAAwB,SAAAL,GACjBA,IAAyBA,EAA0B,IACxD,EAAK7kB,SAAS,CAAC6kB,2BAA0B,kBAAM,EAAKD,aA7EpD,EAAK9kB,MAAQ,CACXD,OAAQJ,EAAMI,OACdiP,YAAa,GACbH,mBAAoB,KACpBmW,eAAgB,GAChBK,WAAW,GARI,E,iFAajB3iB,KAAKkiB,U,+BAsEG,IAAD,OACP,OACE,kBAAC,IAAD,CAAYnd,KAAM/E,KAAK1C,MAAMwB,QAASoG,KAAM,kBAAM,EAAKkd,YACrD,yCACA,kBAAC,IAAD,CACE3iB,MAAOO,KAAK1C,MAAM+kB,wBAClBvhB,SAAUd,KAAK0iB,sBACf3hB,QAASf,KAAK1C,MAAM6kB,iBACpBnhB,SAAS,EACTC,cAAc,EACdC,YAAY,0CAEd,6BACA,kBAAC,IAAD,CACEzB,MAAOO,KAAK1C,MAAM6O,mBAClBrL,SAAUd,KAAKkM,iBACfnL,QAASf,KAAK1C,MAAMgP,YACpBtL,SAAS,EACTC,cAAc,EACdC,YAAY,2DAEd,kBAAC+b,EAAA,EAAD,CAAUzc,MAAM,UAAUgc,QAASxc,KAAK1C,MAAMilB,aAAczhB,SAAU,SAACgC,EAAGhD,GACxE,EAAKtC,SAAS,CAAC+kB,aAAcziB,GAA7B,qBAAiC,sBAAA1C,EAAA,qEAAkB,EAAKglB,UAAvB,qFApBrC,kCAsBGpiB,KAAK1C,MAAMglB,eAAe/W,OAC3B,kBAAC,IAAD,CAAUjL,MAAO,IAAKC,OAAQ,KAC5B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE8F,KAAMrG,KAAK1C,MAAMglB,eACjBM,QAAQ,QACRC,WAAY,IACZC,UAAW,IACXC,YAAa,GACbC,YAAa,GACbrjB,MAAOiiB,EACPqB,aAAc,EACdC,kBAAmBljB,KAAK1C,MAAMqlB,WAG5B3iB,KAAK1C,MAAMglB,eAAezgB,IAAI,SAACshB,EAAO/L,GAAR,OAC5B,kBAAC,IAAD,CAAMxX,IAAG,gBAAWwX,GAASgM,KAAM,CAAC,MAAM,OAAO,SAAS,QAAQ,QAAQhM,OAG9E,kBAAC,IAAD,CAAO9W,MAAO,GAAIkF,SAAS,UACxBxF,KAAK1C,MAAM+kB,wBAAwB1iB,SAK1C,4C,GAtIyBiB,a,6CCLpByiB,G,OAAgBC,YAhBN,SAAArmB,GAAK,OAC1B,yBAAKgD,MAAO,CAAEC,QAAS,OAAQC,QAAS,QAAU6I,UAAU,kBAC1D,yBAAK/I,MAAO,CAAEE,QAAS,aACrB,kBAAC,IAAD,CACEF,MAAO,CAAEK,MAAO,GAAIC,OAAQ,GAAIC,MAAO,QACvCJ,KAAMnD,EAAMmD,KAAOnD,EAAMmD,KAAOmjB,OAGpC,yBAAKtjB,MAAO,CAAE4S,KAAM,EAAGC,SAAU,SAC/B,4BACG7V,EAAMwD,KADT,KACiBxD,EAAMumB,WCQhBC,EAAQC,YAnBN,SAAAzmB,GACb,OACE,yBAAK+L,UAAU,uBACZ/L,EAAM0mB,KAAK9hB,IAAI,SAACuX,EAAMhC,GACrB,IAAMwM,EAAO3mB,EAAM4mB,MAAMzK,IAAS,GAClC,OACE,kBAACiK,EAAD,CACEzjB,IAAKgkB,EAAKnjB,KACVA,KAAMmjB,EAAKnjB,KACX+iB,KAAMI,EAAKJ,KACXpjB,KAAMwjB,EAAKxjB,KACXgX,MAAOA,SChBJ0M,E,YC0Bb,WAAY7mB,GAAQ,IAAD,uBACjB,4CAAMA,KAkBR8mB,UAAY,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACjBN,EAAOO,YAAU,EAAK5mB,MAAMqmB,KAAMK,EAAUC,GAClDra,aAAaM,QAAQ,OAAQyZ,EAAK9hB,IAAI,SAAA0G,GAAC,OAAIA,KAC3C,EAAK/K,SAAS,iBAAO,CACnBmmB,WAvBe,EA2BnBnlB,UA3BmB,qBA2BP,gCAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJgJ,EAAO,GACPwd,EAAQ,GAEZ,EAAKrmB,SAAS,CAAEsB,SAAS,IANf,kBASKhB,YAAOT,EAAQ,cATpB,OAWY,KAFpBgJ,EATQ,QAWC8d,QAAc,EAAK3mB,SAAS,CAAC4mB,UAAU,IAEhDP,EAAQ,CACNQ,IAAK,CACH5jB,KAAM,aACN+iB,KAAMnd,EAAK3H,WACX0B,KAAMkkB,KAERzkB,KAAM,CACJY,KAAM,QACN+iB,KAAMnd,EAAKzH,MACXwB,KAAM2S,KAERtU,KAAM,CACJgC,KAAM,QACN+iB,KAAMnd,EAAKqG,MACXtM,KAAMmkB,KAERhd,KAAM,CACJ9G,KAAM,QACN+iB,KAAMnd,EAAKoB,MACXrH,KAAMuZ,KAER9R,WAAY,CACVpH,KAAM,aACN+iB,KAAMnd,EAAKwB,WACXzH,KAAMokB,KAERtI,KAAM,CACJzb,KAAM,YACN+iB,KACE,kBAAC,IAAD,CACE/jB,MAAO4G,EAAK6I,UACZuV,YAAa,OACbC,mBAAmB,IAGvBtkB,KAAMukB,KAERC,KAAM,CACJnkB,KAAM,gBACN+iB,KAAMqB,IAASxe,EAAKye,OAASze,EAAKye,OAAS,EAAG,CAC5CC,MAAO,IAET3kB,KAAM4kB,MAvDF,kDA2DR5mB,YAAa,EAAD,GAAI,kCA3DR,QA8DV,EAAKZ,SAAS,CAAEqmB,QAAOxd,OAAMvH,SAAS,IA9D5B,wDAxBV,IAAM6kB,GAAQ/Z,aAAaC,QAAQ,SAAW,2CAA2CuS,MAAM,KAH9E,OAKjB,EAAK9e,MAAQ,CACXD,OAAQJ,EAAMI,OACdyB,SAAS,EACTslB,UAAU,EACV/d,KAAM,GACNwd,MAAO,GACPF,QAXe,E,iFAgBjB3jB,KAAKxB,c,+BA4EG,IAAD,OACCnB,EAAW2C,KAAK1C,MAAhBD,OAER,OACE,kBAAC,IAAD,CAAY0H,KAAM/E,KAAK1C,MAAMwB,QAASoG,KAAMlF,KAAKxB,WAC/C,kBAACilB,EAAD,CACEnmB,MAAO0C,KAAK1C,MACZ2nB,KAAK,KACLlB,UAAW/jB,KAAK+jB,UAChBF,MAAO7jB,KAAK1C,MAAMumB,MAClBF,KAAM3jB,KAAK1C,MAAMqmB,OAGnB,kBAACuB,EAAA,EAAD,CACE7f,kBAAgB,qBAChBC,mBAAiB,2BACjBC,KAAMvF,KAAK1C,MAAM8mB,SACjBxZ,QAAS,kBAAM,EAAKpN,SAAS,CAAE4mB,UAAU,MAEzC,yBACEnkB,MAAO,CACLuF,SAAU,WACVC,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,gBAAiB,QACjBzF,QAAS,KAPb,mMAaE,6BACA,6BACA,qDAA2B9C,EAAO8nB,YAAY,c,GA/HzBvkB,a,uICGjC,SAASwkB,GAAavY,GACpB,MAAO,CAACpN,MAAOoN,EAAKlN,MAAO0lB,kBAAQxY,IAGrC,IAAMwG,GAAc,CAClB+R,GAAa,UACbA,GAAa,WACbA,GAAa,UACbA,GAAa,YAGMnX,G,YACnB,WAAYhR,GAAQ,IAAD,uBACjB,4CAAMA,KAoCRqU,kBAAoB,WAClB,EAAK9T,SAAS,CAAE+T,YAAY,KAtCX,EAyCnBC,kBAAoB,WAClB,EAAKhU,SAAS,CAAE+T,YAAY,KA1CX,EA6DnB+T,iBA7DmB,sCA6DA,WAAOrnB,GAAP,eAAAb,EAAA,4DACTC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEC,QAAQ,EAAM8T,YAAY,IAHzB,kBAKTzT,YAAOT,EAAQ,oBAAqB,OAAQ,CAChDY,GAAIA,IANS,OAQfE,YAAe,+BARA,gDAUfC,YAAa,EAAD,GAAI,gCAVD,QAYjB,EAAKZ,SAAS,CAAEC,QAAQ,IAExBiU,OAAOpC,SAAS3B,KAAO,8BACvB,EAAKnP,YAfY,uDA7DA,wDA+EnB+mB,iBA/EmB,qBA+EA,8BAAAnoB,EAAA,wDACTC,EAAW,EAAKC,MAAhBD,OAGK,QADT4G,EAAO,EAAKuhB,iBAAiB3T,YAHhB,wDAMjB,EAAKrU,SAAS,CAAEC,QAAQ,IANP,kBASTK,YAAOT,EAAQ,oBAAqB,OAAQ,CAChDoD,KAAMwD,EAAKxD,OAVE,OAYftC,YAAe,+BAZA,kDAcfC,YAAa,EAAD,GAAI,+BAdD,QAgBjB,EAAKZ,SAAS,CAAEC,QAAQ,IAExBiU,OAAOpC,SAAS3B,KAAO,8BACvB,EAAKnP,YAnBY,wDA/EA,EAqGnBA,UArGmB,qBAqGP,8BAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAER,EAAKG,SAAS,CAAEsB,SAAS,EAAMyK,OAAQ,KACnC1B,EAAa,GAJP,kBAOWD,YAAgBvK,GAP3B,OAORwK,EAPQ,uDASRzJ,YAAa,EAAD,GAAI,8BATR,QAYV,EAAKZ,SAAS,CAAEsB,SAAS,EAAO+I,eAZtB,uDArGO,EAoHnB2B,gBAAkB,SAAAnD,GAChB,EAAK7I,SAAS,CAAEiM,QAASpD,EAAKqD,SAAW,KAlHzC,IAAIC,EAAUC,aAAaC,QAAQ,qBAHlB,OAIZF,IAASA,EAAU,GAExB,EAAKrM,MAAQ,CACXD,OAAQJ,EAAMI,OACdyB,SAAS,EACT+I,WAAY,GACZ0B,OAAQ,GACRI,QAASA,EACTF,QAAS,EACT8H,YAAY,GAGd,EAAKO,gBAAkBvS,IAAEwS,OAAO,CAC9BtR,KAAMlB,IAAEyS,SAGV,EAAKC,kBAAoB,CACvBC,OAAQ,CACN7O,OAAQ,CACN1D,MAAO,iBACPoD,MAAO,uCAKb,EAAKgH,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBA9BV,E,iFAkCjBhK,KAAKxB,c,wCAWWgnB,GAChBxlB,KAAKxC,SAAS,CAAEgoB,uB,0CAGE9nB,GAClBkM,aAAaM,QAAQ,oBAAqBxM,EAAI+B,OAC9CO,KAAKxC,SAAS,CAAEiM,QAAS,EAAGE,QAASjM,EAAI+B,U,mCAG9B0K,GACXnK,KAAKxC,SAAS,CACZ+L,OAAQY,EAAMC,OAAO3K,MAAMyG,cAC3BuD,QAAS,M,+BA+DH,IAAD,OACCpM,EAAW2C,KAAK1C,MAAhBD,OAEJyN,EAAO,GAQX,OANA9K,KAAK1C,MAAMuK,WAAWvI,QAAQ,SAAAC,GACxB,EAAKjC,MAAMiM,SAAW7J,YAAiBH,GAAG8K,SAAS,EAAK/M,MAAMiM,SAElEuB,EAAKtL,KAAKD,KAIV,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CACEgL,OAAO,EACPC,KAAK,eACLC,OAAQ,kBACN,kBAAC,IAAD,CAAY1F,KAAM,EAAKzH,MAAMwB,QAASoG,KAAM,EAAK1G,WAAjD,UACU,IACR,2BACE8L,KAAK,OACL7K,MAAO,EAAKnC,MAAMmC,MAClBqB,SAAU,EAAKiJ,aACfnF,WAAS,8CAEX,kBAAC,GAAD,CAAgBvH,OAAQA,EAAQE,MAAO,EAAMsK,WAAYiD,QAI/D,kBAAC,IAAD,CACEP,OAAO,EACPC,KAAK,kBACLC,OAAQ,kBACN,6BACE,kBAAC,IAAElD,KAAK6K,KAAR,CACEC,IAAK,SAAAA,GAAG,OAAK,EAAKoT,iBAAmBpT,GACrC/H,KAAM,EAAKwH,gBACX/Q,QAAS,EAAKkR,kBACdnR,SAAU,SAAAgC,GAAC,OAAI,EAAK4iB,kBAAkB5iB,IACtCrD,MAAO,EAAKnC,MAAMmoB,mBAEpB,4BAAQxgB,QAAS,kBAAM,EAAKsgB,qBAA5B,cAIN,kBAAC,IAAD,CACE/a,KAAK,uBACLC,OAAQ,SAAAxN,GAAK,OACX,6BACE,kBAAC,GAAD,CACEI,OAAQA,EACRuC,IAAK3C,EAAMuG,MAAM/B,OAAOxD,GACxBA,GAAIhB,EAAMuG,MAAM/B,OAAOxD,GACvByC,MAAM,EACNnD,MAAO,IAET,6BACA,6BACA,6BACA,kBAAC2Y,EAAA,EAAD,CAAQjR,QAAS,EAAKqM,kBAAmB9Q,MAAM,WAA/C,oBAGA,kBAAC2V,GAAA,EAAD,CACE5Q,KAAM,EAAKjI,MAAMiU,WACjB3G,QAAS,EAAK4G,kBACdnM,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC8Q,GAAA,EAAD,CAAanY,GAAG,sBAAhB,mDAGA,kBAACoY,GAAA,EAAD,KACE,kBAACH,EAAA,EAAD,CACEjR,QAAS,EAAKuM,kBACdhR,MAAM,UACNgS,WAAS,GAHX,MAOA,kBAAC0D,EAAA,EAAD,CACEjR,QAAS,kBAAM,EAAKqgB,iBAAiBroB,EAAMuG,MAAM/B,OAAOxD,KACxDuC,MAAM,WAFR,aAWV,kBAAC,IAAD,CAAcuE,KAAM/E,KAAK1C,MAAMG,e,GApNRmD,aA2N3B+kB,GAAiB,SAAA1oB,GACrB,IAAM0M,EAAU1M,EAAMM,MAAMD,MAAMqM,QAC9BkB,EAAW,8BACXC,EAAO,GAyCX,OAvCA7N,EAAM4K,WAAWvI,QAAQ,SAACC,EAAGwL,GAClBC,KAAKC,MAAMF,EAAMpB,GAAW,IAC1B1M,EAAMM,MAAMD,MAAMmM,SAC7BqB,EAAKtL,KAAK,kBAAC,GAAD,CAAenC,OAAQJ,EAAMI,OAAQuC,IAAKL,EAAEtB,GAAI0J,UAAWpI,EAAGhC,MAAON,EAAMM,WAGvFsN,EACE,yBAAK5K,MAAO,CAAEC,QAAS,SACrB,kBAAC,IAAD,CACEgL,cAAe,WACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBC,UAAWrO,EAAM4K,WAAW0D,OAAS5B,EACrC6B,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAczO,EAAMM,MAAMiM,gBAC1BmC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,WAZrB,eAeE,yBAAK5L,MAAO,CAAEK,MAAO,KAArB,aACa,IACX,kBAAC,IAAD,CACEb,MAAO,CAAEA,MAAOkK,EAAShK,MAAOgK,GAChC7I,SAAU7D,EAAMM,MAAM0M,oBACtBlJ,QAAS,CACP,CAAEtB,MAAO,EAAGE,MAAO,GACnB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,GAAIE,MAAO,IACpB,CAAEF,MAAO,IAAKE,MAAO,UAQ7B,6BACE,4BACG1C,EAAMqN,KADT,eAC2BrN,EAAM4K,WAAW0D,OAD5C,KAGA,kBAAC,IAAD,CAAM5K,GAAI,mBACR,kDAEDkK,EACAC,EACAD,IAKM+a,GAAb,YACE,WAAY3oB,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRoB,oBAjBmB,sCAiBG,WAAMC,GAAN,SAAAlB,EAAA,qDACD,EAAKE,MAAhBD,OAEHiB,IAAuBA,EAAwB,IACpD,EAAKrB,MAAMM,MAAMC,SAAS,CAAEC,QAAQ,IAJhB,yCAjBH,wDAyBnBe,UAzBmB,qBAyBP,kCAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJsK,EAAY,GAChB,EAAKnK,SAAS,CAAEsB,SAAS,IAJf,kBASEC,QAAQC,IAAI,CACpB0I,YAAerK,EAAQ,EAAKJ,MAAMgB,MAV5B,mCAQN0J,EARM,8DAaRvJ,YAAa,EAAD,GAAI,kCAbR,kBAcD,EAAKZ,SAAS,CAAEsB,SAAS,KAdxB,QAiBV,EAAKtB,SAAS,CACZmK,YACA7I,SAAS,IAnBD,wDAzBO,EAgDnB8N,OAhDmB,sCAgDV,WAAOtC,EAAMuC,GAAb,qBAAAzP,EAAA,8DACuB,EAAKE,MAA3BD,EADD,EACCA,OAAQsK,EADT,EACSA,UAEhB,EAAKnK,SAAS,CAAEC,QAAQ,KAEpBC,EAAM,CAACO,GAAI0J,EAAU1J,KACrBqM,GAAQuC,EANL,kBASC/O,YACJT,EACA,oBACA,OACAK,GAbG,OAeLS,YAAe,+BAfV,kDAiBLC,YAAa,EAAD,GAAI,+BAjBX,QAoBP,EAAKI,YApBE,wDAhDU,wDAGjB,EAAKlB,MAAQ,CACXD,OAAQJ,EAAMI,OACdsK,UAAW,EAAK1K,MAAM0K,UACtBrJ,sBAAuB,IAGzB,EAAKunB,WAAa,EAAKA,WAAW7b,KAAhB,gBAClB,EAAK8b,WAAa,EAAKA,WAAW9b,KAAhB,gBAVD,EADrB,iFAeShK,KAAK1C,MAAMqK,WAAW3H,KAAKxB,cAfpC,iCAwEaqO,GACT7M,KAAK4M,OAAO,OAAQC,KAzExB,iCA4EaA,GACT7M,KAAK4M,OAAO,OAAQC,KA7ExB,+BAgFY,IACAlF,EAAc3H,KAAK1C,MAAnBqK,UAER,OAAKA,GAAa3H,KAAK1C,MAAMwB,QACpB,kBAACqV,EAAA,EAAD,MAIP,6BACE,yBAAKlU,MAAO,CAAEC,QAAS,OAAQC,QAAS,SACtC,yBAAKF,MAAO,CAAE4S,KAAM,EAAGC,SAAU,OAAQ3S,QAAS,aAChD,kBAAC,KAAD,MAAkB,IACjBwH,EAAUlH,KAAM,IAChBT,KAAK/C,MAAMyD,KACV,GAEA,kBAAC,IAAD,CAAMC,GAAI,oBAAsBgH,EAAU1J,IAA1C,UAIL+B,KAAK/C,MAAMyD,KAAO,kBAAC,GAAD,CAAmBiH,UAAWA,EAAWke,WAAY7lB,KAAK6lB,WAAYC,WAAY9lB,KAAK8lB,aAAiB,QApGnI,GAAmCllB,aA0GtBmlB,GAAoB,SAAC,GAAD,IAAEpe,EAAF,EAAEA,UAAWke,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,WAAzB,OAC/B,6BACE,4BAAI,kBAAC,IAAD,CAASxb,KAAK,OAAO7K,MAAOkI,EAAUlH,KAAMmM,OAAQiZ,EAAYC,WAAYA,KAChF,kBAAC,IAAD,CACErmB,MAAO2lB,GAAazd,EAAU2C,MAC9BxJ,SAAUglB,EACV/kB,QAASsS,GACTrS,SAAS,EACTC,cAAc,EACdC,YAAY,6BAEbC,KAAKC,UAAUuG,K,sCCnbPuK,GAAS,CACpB,mBACA,iBACA,OACA,OACA,QACA,MACA,YACA,WACA,OACA,qBCRW8T,GAAQ,SAACxZ,EAAGyZ,GAAJ,OAAU,kBAAaA,EAAEzZ,EAAC,WAAD,gBACjC0Z,GAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAYA,EAAIC,OAAOJ,KAE9BK,GAAmB,CAC9B,CACE9kB,OAAQ,cACRC,QAAS,sCACTC,OAAQ,CAAC,aAEX,CACEF,OAAQ,cACRC,QACE,8EACF0D,KAAMnD,IACNN,OAAQ,CAAC,UAAW,cAEtB,CACEF,OAAQ,cACRC,QACE,sEACF0D,KAAMnD,IACNN,OAAQ,CAAC,YAAa,gBAExB,CACEF,OAAQ,aACRC,QACE,uFACF0D,KAAMnD,IACNN,OAAQ,CAAC,cAAe,cAE1B,CACEF,OAAQ,eACRC,QAAS,6DACT0D,KAAM/C,IACNV,OAAQ,CAAC,gBAEX,CACEF,OAAQ,eACRC,QACE,2EACF0D,KAAMnD,IACNN,OAAQ,CAAC,gBAAiB,gBAE5B,CACEF,OAAQ,cACRC,QACE,4FACF0D,KAAMnD,IACNN,OAAQ,CAAC,eAAgB,eAE3B,CACEF,OAAQ,kBACRC,QACE,4EACF0D,KAAMnD,IACNN,OAAQ,CAAC,gBAAiB,gBAE5B,CACEF,OAAQ,qBACRC,QACE,wEACF0D,KAAMnD,IACNN,OAAQ,CAAC,cAAe,cAE1B,CACEF,OAAQ,aACRC,QACE,4EACF0D,KAAMnD,IACNN,OAAQ,CAAC,UAAW,e,wjBCjEjB,IAAM6kB,GAAb,2MACEhpB,MAAQ,CACN+I,KAAM,EAAKpJ,MAAMoJ,MAAQ,GACzB1C,QAAS,EAAK1G,MAAM0G,SAAW,GAC/BuO,OAAQA,GACRqU,QAAS,GACTC,OAAQ,IANZ,EASEC,cAAgB,SAAA9iB,GAAO,OACrBA,EAAQ9B,IAAI,SAAAhE,GAAC,MAAK,CAChB4B,MAAO5B,EACP8B,MAAO9B,MAZb,EAeE+e,cAAgB,SAAC8J,EAAOhpB,GAAR,OACd,EAAKF,SAAS,CAAE+oB,QAAQ,GAAD,GAAO,EAAKjpB,MAAMipB,QAAlB,gBAA4BG,EAAQhpB,KAAS,kBAClE,EAAKipB,kBAjBX,EAoBEA,aAAe,kBACb,EAAKnpB,SACH,CACEgpB,OAAQ,EAAKI,QAAQ,EAAKtpB,QAAU,IAEtC,kBAAM,EAAKL,MAAM4pB,WAAa,EAAK5pB,MAAM4pB,UAAU,EAAKvpB,MAAMkpB,WAzBpE,EA4BEI,QAAU,YAA0B,IAAvBL,EAAsB,EAAtBA,QAASrU,EAAa,EAAbA,OAAa,iBACzB4U,EADyB,EACzBA,gBAAiBC,EADQ,EACRA,cAAeC,EADP,EACOA,UACxC,OAAOd,GACLY,EACAC,EACAC,EAHKd,CAILK,EAASrU,IAlCf,EAqCE4U,gBAAkB,SAACP,EAASrU,GAC1B,OAAOrQ,KAAIqQ,EAAQ,SAAAkH,GACjB,OAAImN,EAAQnN,GACH,CACL3Y,KAAM2Y,EACNvL,OAAQ0Y,EAAQnN,IAIb,CACL3Y,KAAM2Y,EACNvL,OAAQ,SAhDhB,EAqDEkZ,cAAgB,SAAA5K,GAAG,OACjBta,KAAIsa,EAAK,YAAuB,IAApB1b,EAAmB,EAAnBA,KAAMoN,EAAa,EAAbA,OAChB,GAAIA,GAAU4I,MAAMwQ,QAAQpZ,EAAOpO,OAAQ,CACzC,IAAMynB,EAAUrZ,EAAOpO,MAAMoC,IAAI,SAAA2K,GAAC,OAChC,EAAKlP,MAAMqG,QAAQwjB,UAAU,SAAAtpB,GAAC,OAAIA,IAAM2O,EAAE/M,UAE5C,MAAO,CAAEgB,OAAMoN,SAAQqZ,WAClB,GAAIrZ,EAAQ,CACjB,IAAMqZ,EAAU,EAAK5pB,MAAMqG,QAAQwjB,UACjC,SAAAtpB,GAAC,OAAIgQ,EAAOpO,OAAS5B,IAAMgQ,EAAOpO,MAAMA,QAE1C,MAAO,CACLgB,OACAoN,SACAqZ,WAIJ,MAAO,CAAEzmB,OAAMoN,SAAQqZ,QAAS,SAvEtC,EA0EEF,UAAY,SAAA7K,GAAQ,IACV9V,EAAS,EAAK/I,MAAd+I,KACR,OAAOxE,KAAIwE,EAAM,SAAA+S,GACf,OAAOvX,KAAIsa,EAAK,YAA0B,IAAvB+K,EAAsB,EAAtBA,QAASrZ,EAAa,EAAbA,OAC1B,OAAIqZ,GAAWzQ,MAAMwQ,QAAQC,GACpBA,EACJd,OAAO,SAACgB,EAAOC,GAAR,gBAAoBD,EAAMxO,OAA1B,YAAoCQ,EAAKiO,GAAMzO,SAAU,IAChEA,OACMsO,GACF9N,EAAK8N,GACR9N,EAAK8N,GAAS9K,MAAMvO,EAAO4O,KAAKhd,OAAOoO,EAAO6O,KAAKjd,OAIlD,QAxFf,wEA6FY,IAAD,EAGHO,KADF4c,qBAFK,MAEW,kBAAM5Z,QAAQC,KAAK,wCAF9B,IAIiBjD,KAAK/C,MAArBiV,cAJD,MAIU,GAJV,IAKkBlS,KAAK1C,MAAtBqG,eALD,MAKW,GALX,EAMD5C,EAAUf,KAAKymB,cAAc9iB,GAEnC,OACE,kBAAC,IAAMwZ,SAAP,KACGjL,EAAOrQ,IAAI,SAAA6kB,GAAK,OACf,kBAAC,KAAD,CACE9mB,IAAK8mB,EACL/mB,MAAO+mB,EACP9J,cAAeA,EACf7b,QAASA,EACTqc,UAAQ,EACRpc,SAAO,WA9GnB,GAA+Buc,IAAM3c,WCJxB0mB,GAAc,SAAC,GAAD,IAAGjhB,EAAH,EAAGA,KAAMmI,EAAT,EAASA,MAAT,OACzB,yBAAKxF,UAAU,mBACZ3C,EAAKxE,IAAI,SAAAuX,GAAI,OACZ,yBACEpQ,UAAS,wBAAmBwF,EAAQ,iBAAmB,IACvD5O,IAAG,UAAKwZ,GAAL,OAA4B,KAAhBpO,KAAKuc,WAEpB,yBAAKtnB,MAAO,CAAEK,MAAO,MAAiB,KAAT8Y,EAAcA,EAAO,a,OCL1D,SAASoO,KACP,OAAOC,SAAyB,IAAhBzc,KAAKuc,UAGhB,IAAMG,GAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OAC3B,kBAAC,IAAMzK,SAAP,KACE,iEACA,yBAAKvd,IAAG,UAAK+nB,GAAL,OAAcC,GAAW3nB,MAAO,CAAEC,QAAS,SACjD,kBAAC,GAAD,CAAaN,IAAG,UAAK+nB,GAAL,OAAcH,MAAqBnhB,KAAMshB,EAAQnZ,OAAK,IACrEoZ,EAAQ/lB,IAAI,SAAAgmB,GAAM,OACjB,kBAAC,GAAD,CAAajoB,IAAG,UAAKioB,GAAL,OAAcL,MAAqBnhB,KAAMwhB,S,6mBCMjE,IAAMC,GAAe,CACnBhpB,SAAS,EACTipB,SAAS,EACT1hB,KAAM,KACN1C,QAAS,GACT6iB,OAAQ,GACR7c,QAASC,aAAaC,QAAQ,mBAAqB,EACnDJ,QAAS,EACTue,YAAY,EACZjH,UAAW,GAGQkH,G,YAEnB,WAAYhrB,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRirB,WAnBmB,sCAmBN,WAAO7hB,EAAM8hB,GAAb,eAAA/qB,EAAA,qDACPuG,EAAU0C,EAAKgW,QACnBhW,EAAKoc,MAEL,EAAKjlB,SAAS,CAAE6I,OAAM1C,UAASwkB,aAJpB,yCAnBM,0DA0BnBC,SA1BmB,qBA0BR,oDAAAhrB,EAAA,8DACkC,EAAKE,MAAxCD,EADC,EACDA,OAAgBgJ,EADf,EACOmgB,OAAc2B,EADrB,EACqBA,SACxBf,EAAQ/gB,EAAKkF,OAEnB,EAAK/N,SAAS,CAACuqB,SAAS,EAAMhH,UAAW,IAJhC,SAKHjjB,YAAOT,EAAQ,gBAAiB,OAAQ,CAC5C8qB,SAAUA,EACVtgB,WAAY,CAAC,OAAQ,uBAPd,OAWLwgB,GADAC,EAAO,CAAC,IAAK,MAAO,OAAQ,MAAO,QACvBzmB,IAAI,SAAChE,GAAD,OAAW,IAAI0qB,OAAO,MAAM1qB,EAAE,IAAK,OACnD2qB,EAAOF,EAAKzmB,IAAI,SAAChE,GAAD,OAAW,IAAI0qB,OAAO,IAAI1qB,EAAE,MAAO,OAZ9C,WAcFwI,EAAKkF,OAdH,iBAeH4Q,EAAM,GACDte,EAAI,EAhBN,aAgBSA,EAAI,KAhBb,qBAiBDwI,EAAKkF,OAjBJ,qBAkBCkS,EAAMpX,EAAKoc,OAEN,GApBN,wBAAArlB,EAAA,KAqBakrB,GArBb,kDAqBQxlB,EArBR,YAsBK2a,EAAI,GAAGja,MAAM6kB,EAAKvlB,IAtBvB,wBAuBG2a,EAAI,GAAKA,EAAI,GAAG7H,QAAQyS,EAAKvlB,GAAI,IAAI8V,OACrC6E,EAAI,GAAKA,EAAI,GAAG7H,QAAQ4S,EAAK1lB,GAAI,IAAI8V,OAxBxC,qDA6BHuD,EAAI3c,KAAKie,GA7BN,QAgBmB5f,IAhBnB,yCAiCDC,YAAOT,EAAQ,cAAe,OAAQ,CAC1C8qB,SAAUA,EACV9hB,KAAM8V,IAnCD,QAqCDsM,EAAazd,KAAKkT,MAAOkJ,EAAQ/gB,EAAKkF,QAAU6b,EAAS,KAC/D,EAAK5pB,SAAS,CAAEujB,UAAW0H,IAtCpB,wCAwCH3qB,YAAOT,EAAQ,cAAe,OAAQ,CAC1C8qB,SAAUA,IAzCH,QA4CT,EAAK3qB,SAAS,CAAEujB,WAAW,IAC3B5iB,YAAe,yEAEfuqB,WAAW,WACT,EAAKlrB,SAAS,CAAEuqB,SAAS,IACzB,EAAKvpB,aACJ,KAlDM,0CA1BQ,EAgFnBA,UAhFmB,qBAgFP,8BAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJ+I,EAAU,GACd,EAAK5I,SAAS,CAAEsB,SAAS,IAJf,kBAMQqH,YAAa9I,GANrB,OAMR+I,EANQ,uDAQRhI,YAAa,EAAD,GAAI,+BARR,QAUV,EAAKZ,SAAS,CAAEsB,SAAS,EAAOsH,WAAW,WACzC,EAAKuiB,gBAXG,uDAhFO,EA+FnBA,YAAc,kBAAM,EAAKnrB,SAAL,MAAmBsqB,MA/FpB,EAiGnBjB,UAAY,SAAAL,GAAM,OAAI,EAAKhpB,SAAS,CAAEgpB,YAjGnB,EAmGnBhd,gBAAkB,SAAAnD,GAChB,EAAK7I,SAAS,CAAEiM,QAASpD,EAAKqD,SAAW,KAjGzC,EAAKpM,MAAL,IACED,OAAQJ,EAAMI,OACd+I,QAAS,IACN0hB,IANY,E,iFAWjB9nB,KAAKxB,c,sCAISsE,GACd1E,YAAa0E,EAAG,2C,+BAoGR,IAAD,SAUH9C,KAAK1C,MAVF,IAELkpB,cAFK,MAEI,GAFJ,MAGLngB,YAHK,MAGE,GAHF,MAIL1C,eAJK,MAIK,GAJL,EAKLgG,EALK,EAKLA,QACAF,EANK,EAMLA,QACArD,EAPK,EAOLA,QACAtH,EARK,EAQLA,QACAiiB,EATK,EASLA,UAEF,OAAIjiB,EAAgB,kBAACqV,EAAA,EAAD,MAEfxQ,EAAQ4H,OA0BX,6BACE,kBAAC,KAAD,CAAaiD,MAAM,2BAA2BuS,UAAWA,IACzD,yBAAK9gB,MAAO,CAAEC,QAAS,SACrB,2CADF,gBAEE,kBAAC,IAAD,CAAME,KAAMwoB,IAAWrb,KAAK,QAE9B,kBAAC,GAAD,CACE5J,QAASA,EACTuO,OAAQA,GACR7L,KAAMA,EACNwgB,UAAW7mB,KAAK6mB,YAElB,kBAACgC,GAAA,EAAD,CAAS1H,QAAQ,WACjB,6BACA,kBAAC,KAAD,CACEnT,SAAUhO,KAAK1C,MAAMyqB,QACrB5G,QAAQ,YACR3gB,MAAM,UACNyE,QAAS,kBAAM,EAAKmjB,aAJtB,UAQA,6BACA,6BACA,kBAACS,GAAA,EAAD,CAAS1H,QAAQ,WACjB,kBAAC,GAAD,CACEvhB,IAAKI,KACL2nB,OAAQzV,GACR0V,QAASpB,EAAO9K,MAAM,EAAG,MApD3B,6BACE,kBAAC,KAAD,CACE/b,MAAM,eACNmpB,QAAS9oB,KAAK+oB,gBACdC,aAAchpB,KAAKkoB,aAErB,6BACA,0EACA,6BACA,6BACA,kBAAC,IAAD,CAAYnjB,KAAM/E,KAAK1C,MAAMwB,QAASoG,KAAM,kBAAM,EAAK1G,cACrD,kBAAC,KAAD,CACEmL,QAASA,EACTF,QAASA,EACTnI,KAAM+kB,GACN3kB,KAAM0E,EACNoD,gBAAiBxJ,KAAKwJ,gBACtBS,oBAAqBjK,KAAKiK,4B,GAtJArJ,aCtBlCqoB,GAAY,SAAAC,GAChB,MAA2B,mBAAhBA,EAAIrmB,QACTqmB,EAAIrmB,QAAgB,aACZ,SAERqmB,EAAIC,QAAgB,UACZ,WAIVC,GAAmB,SAAAF,GACvB,OAAIA,EAAInmB,MAAcmmB,EAAInmB,MACd,MAGRsmB,GAAmB,SAAC/e,EAAM5M,GAC9B,OAAQ4M,GACN,IAAK,aACH,MAAO,eAAiB5M,EAAIyqB,SAC9B,IAAK,OACH,MAAO,QAAUzqB,EAAI+C,KACvB,QACE,MAAO,YAIQ6oB,G,YACnB,WAAYrsB,GAAQ,IAAD,8BACjB,4CAAMA,KAYRuB,UAbmB,qBAaP,gCAAApB,EAAA,4DACFC,EAAW,EAAKC,MAAhBD,OAEJqE,EAAO,GAEX,EAAKlE,SAAS,CAAEsB,SAAS,IALf,SAOMhB,YAAOT,EAAQ,eAPrB,QAONK,EAPM,QAQF2I,OACN3E,EAAOhE,EAAI2I,KAAKxE,IAAI,SAAA0nB,GAClB,IAAIC,EAAID,EAAE,GAGV,OAFAC,EAAElf,KAAOif,EAAE,GACXC,EAAE9rB,IAAM6rB,EAAE,GACHC,KAGX,EAAKhsB,SAAS,CAAEkE,OAAM5C,SAAS,IAhBrB,yCAVV,EAAKxB,MAAQ,CACXoE,KAAM,GACNrE,OAAQJ,EAAMI,QALC,E,iFAUjB2C,KAAKxB,c,+BAsBG,IAAD,OACCkD,EAAS1B,KAAK1C,MAAdoE,KAER,OACE,kBAAC,IAAD,CAAYqD,KAAM/E,KAAK1C,MAAMwB,QAASoG,KAAM,kBAAM,EAAK1G,cACrD,kBAAC,KAAD,CACE8C,KAAM,CACJ,CACEC,OAAQ,cACRC,QAAS,iDACT0D,KAAM3C,IACNd,OAAQ,CAAC,YAEX,CACEF,OAAQ,OACRC,QAAS,yCACTC,OAAQ,CAAC,SAEX,CACEF,OAAQ,cACRC,QACE,oEACF0D,KAAMnD,IACNN,OAAQ,CAAC,UAAW,YAEtB,CACEF,OAAQ,UACRC,QAAS,8CACT0D,KAAMnD,IACNN,OAAQ,CAAC,UAAW,cAEtB,CACEF,OAAQ,SACRC,QAAS,sCACT0D,KAAM+jB,GACN/I,gBAAiBkJ,IAEnB,CACE7nB,OAAQ,iBACRC,QAAS,uDACT0D,KAAMmkB,GACN5nB,OAAQ,CAAC,OAAQ,SAGrBC,KAAMA,S,GA7EmBd,a,4mBCpCnC,IA2Ge6oB,GA1GO,SAAAnL,GAAK,MAAK,CAC9BoL,KAAK,cACHppB,MAAO,OACPJ,QAAS,QACT6e,WAAiC,EAArBT,EAAMU,QAAQC,KAC1B0K,YAAkC,EAArBrL,EAAMU,QAAQC,MAC1BX,EAAMsL,YAAYC,GAAG,IAA2B,EAArBvL,EAAMU,QAAQC,KAAW,GAAK,CACxD3e,MAAO,IACPye,WAAY,OACZ4K,YAAa,SAGjBG,MAAO,CACLnJ,UAAgC,EAArBrC,EAAMU,QAAQC,KACzB/e,QAAS,OACT8Y,cAAe,SACfhM,WAAY,SACZ7M,QAAQ,GAAD,OAA0B,EAArBme,EAAMU,QAAQC,KAAnB,cAAsD,EAArBX,EAAMU,QAAQC,KAA/C,cAAkF,EAArBX,EAAMU,QAAQC,KAA3E,OAET/D,OAAQ,CACNvD,OAAQ2G,EAAMU,QAAQC,KACtBrZ,gBAAiB0Y,EAAMQ,QAAQrR,UAAUic,MAE3CniB,KAAM,CACJjH,MAAO,OACPqgB,UAAWrC,EAAMU,QAAQC,MAE3B8K,OAAQ,CACNpJ,UAAgC,EAArBrC,EAAMU,QAAQC,MAE3BV,KAAM,CACJre,QAAS,QAEX8pB,QAAS,CACPC,aAAc,IAEhBC,YAAY,IACVhqB,QAAS,OACT8M,WAAY,SACZmd,eAAgB,WAChBhqB,QAAS,SACNme,EAAM8L,OAAOJ,SAElBK,OAAQ,CACNC,OAAQhM,EAAMgM,OAAOC,OAAS,EAC9BC,WAAYlM,EAAMmM,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQrM,EAAMmM,YAAYE,OAAOC,MACjCC,SAAUvM,EAAMmM,YAAYI,SAASC,iBAGzCC,YAAa,CACXhM,WApDgB,IAqDhBze,MAAM,eAAD,OArDW,IAqDX,OACLkqB,WAAYlM,EAAMmM,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQrM,EAAMmM,YAAYE,OAAOC,MACjCC,SAAUvM,EAAMmM,YAAYI,SAASG,kBAGzCC,WAAY,CACVlM,WAAY,GACZ4K,YAAa,IAEfuB,iBAAkB,CAChBhrB,QAAS,QAEXsO,MAAO,CACLsS,SAAU,GAEZqK,YAAa,CACX3lB,SAAU,WACV4lB,WAAY,SACZ9qB,MAxEgB,IAyEhBkqB,WAAYlM,EAAMmM,YAAYC,OAAO,QAAS,CAC5CC,OAAQrM,EAAMmM,YAAYE,OAAOC,MACjCC,SAAUvM,EAAMmM,YAAYI,SAASG,kBAGzCK,iBAAiB,cACfxK,UAAW,SACX2J,WAAYlM,EAAMmM,YAAYC,OAAO,QAAS,CAC5CC,OAAQrM,EAAMmM,YAAYE,OAAOC,MACjCC,SAAUvM,EAAMmM,YAAYI,SAASC,gBAEvCxqB,MAA4B,EAArBge,EAAMU,QAAQC,MACpBX,EAAMsL,YAAYC,GAAG,MAAQ,CAC5BvpB,MAA4B,EAArBge,EAAMU,QAAQC,OAGzBqM,aAAchN,EAAM8L,OAAOJ,QAC3BuB,QAAS,CACPzK,SAAU,EACV3gB,QAA8B,EAArBme,EAAMU,QAAQC,KACvB1e,OAAQ,QACRuS,SAAU,QAEZ0Y,eAAgB,CACdzM,YAAa,IAEf0M,eAAgB,CACdlrB,OAAQ,KAEVmrB,GAAI,CACFC,aAAmC,EAArBrN,EAAMU,QAAQC,QC7F1B2M,G,YAEJ,WAAY3uB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDK,MAAQ,CACX+gB,QAASphB,EAAMohB,SAJA,E,sEAST,IACAA,EAAYre,KAAK1C,MAAjB+gB,QAER,OACE,0BAAMrV,UAAWqV,EAAQqL,MACvB,kBAACmC,GAAA,EAAD,MACA,kBAACrM,GAAA,EAAD,CAAOxW,UAAWqV,EAAQyL,OACxB,kBAACgC,GAAA,EAAD,CAAYhgB,UAAU,KAAKqV,QAAQ,MAAnC,8BAGA,kBAAChN,EAAA,EAAD,CAAkB5T,OAAQ,MAE5B,6BACA,8CAAmB,0BAAMwrB,KAAK,MAAMtN,aAAW,QAA5B,gBAAnB,0B,GAxBc7d,aA8BPge,QAAW6K,GAAX7K,CAAmBgN,I,2ECnB5BI,G,YAEJ,WAAY/uB,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IAGIqG,EAHA2oB,EAAe,CAAC,CAACtsB,MAAO,kBAAmBF,MAAO,OAAQ,CAACE,MAAO,mBAAoBF,MAAO,WAKjG,IACM,EAAKxC,MAAMqS,SAAS4c,SAAS1oB,MAAM,aACrCF,EAAQ,EAAKrG,MAAMqS,SAAS4c,SAAS9P,MAAM,KAAKqG,OAElD,MAAM3f,GACNE,QAAQC,KAAKH,GAbE,OAgBjB,EAAKxF,MAAQ,CACXD,OAAQJ,EAAMI,OACd8uB,KAAM3K,EACNnD,QAASphB,EAAMohB,QACf/a,MAAOA,EACP8oB,oBAAqBH,EAAa,GAClCA,aAAcA,GAtBC,E,iFA2BE,IACX3oB,EAAUtD,KAAK1C,MAAfgG,MAEJA,IACFsG,aAAaM,QAAQ,MAAO5G,GAC5BolB,WAAW,WAAOhX,OAAOpC,SAAS3B,KAAO,oBAAqB,KAC9D+a,WAAW,WAAOhX,OAAOpC,SAAS+c,UAAW,S,+BAIvC,IAAD,SAC+DrsB,KAAK1C,MAAnED,EADD,EACCA,OAAQghB,EADT,EACSA,QAAS/a,EADlB,EACkBA,MAAO2oB,EADzB,EACyBA,aAAcG,EADvC,EACuCA,oBAE9C,OAAI9oB,EAAe,kBAAC,GAAD,CAAS+a,QAASA,IAGnC,0BAAMrV,UAAWqV,EAAQqL,MACvB,kBAACmC,GAAA,EAAD,MACA,kBAACrM,GAAA,EAAD,CAAOxW,UAAWqV,EAAQyL,OACxB,kBAACwC,GAAA,EAAD,CAAQtjB,UAAWqV,EAAQnD,QACzB,kBAAC,KAAD,OAEF,kBAAC4Q,GAAA,EAAD,CAAYhgB,UAAU,KAAKqV,QAAQ,MAAnC,2BAGA,0BAAMnY,UAAWqV,EAAQ9W,KAAMglB,SAAU,SAACzpB,GAAQA,EAAE0pB,iBAAkBnvB,EAAOovB,OAAO3pB,EAAG,EAAKxF,MAAM8M,UAChG,kBAAC,IAAD,CACE3K,MAAO2sB,EACPrrB,QAASkrB,EACTnrB,SAAU,SAAAsrB,GAAmB,OAAI,EAAK5uB,SAAS,CAAC4uB,2BAElD,kBAAC,GAAD,CAAa/uB,OAAQA,EAAQE,MAAOyC,OACpC,kBAACkW,EAAA,EAAD,CACE5L,KAAK,SACLoiB,WAAS,EACTvL,QAAQ,YACR3gB,MAAM,UACNwI,UAAWqV,EAAQ0L,OACnB9kB,QAAS,kBAAM,EAAKzH,SAAS,CAAC4M,OAAQ,aANxC,kBAUA,kBAAC8L,EAAA,EAAD,CACE5L,KAAK,SACLoiB,WAAS,EACTvL,QAAQ,YACR3gB,MAAM,YACNyE,QAAS,kBAAM,EAAKzH,SAAS,CAAC4M,OAAQ,cACtCpB,UAAWqV,EAAQ0L,QANrB,sBAYJ,6BACA,8CACa,0BAAMgC,KAAK,MAAMtN,aAAW,QAA5B,gBADb,oBAEE,4BAFF,4CAIE,4BAJF,0DAME,4BANF,+P,GApFY7d,aAqGd+rB,GAAc,SAAA1vB,GAClB,OAAQA,EAAMM,MAAMD,MAAM8uB,oBAAoB3sB,OAC5C,IAAK,MACH,OACE,6BACE,kBAACmtB,GAAA,EAAD,CAAajV,OAAO,SAAS6B,UAAQ,EAACkT,WAAS,GAC7C,kBAACG,GAAA,EAAD,CAAYC,QAAQ,UAApB,gDACA,kBAACC,GAAA,EAAD,CAAO9uB,GAAG,QAAQwC,KAAK,QAAQusB,aAAa,QAAQxa,WAAS,EAACya,aAAchwB,EAAMI,OAAOC,MAAMoG,SAEjG,kBAACwpB,GAAA,EAAD,CACEC,QAAS,kBAAClQ,EAAA,EAAD,CAAUxd,MAAM,MAAMe,MAAM,UAAUgZ,UAAQ,IACvD7Z,MAAM,6FAId,IAAK,SACH,OACE,6BACE,kBAACitB,GAAA,EAAD,CAAajV,OAAO,SAAS6B,UAAQ,EAACkT,WAAS,GAC7C,kBAACG,GAAA,EAAD,CAAYC,QAAQ,UAApB,kBACA,kBAACC,GAAA,EAAD,CAAO9uB,GAAG,SAASwC,KAAK,SAASusB,aAAa,SAASxa,WAAS,EAACya,aAAchwB,EAAMI,OAAOC,MAAM8vB,WAEpG,kBAACF,GAAA,EAAD,CACEC,QAAS,kBAAClQ,EAAA,EAAD,CAAUxd,MAAM,MAAMe,MAAM,UAAUgZ,UAAQ,IACvD7Z,MAAM,wMAId,QACE,OAAO,OAIEif,QAAW6K,GAAX7K,CAAmBoN,IChInBqB,GArBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,kBAAmBC,EAAlC,EAAkCA,QAAlC,OACnB,kBAACrX,GAAA,EAAD,CACE5Q,KAAM+nB,EACN1iB,QAAS2iB,EACTloB,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC8Q,GAAA,EAAD,CAAanY,GAAG,sBAAhB,oCAGA,kBAACoY,GAAA,EAAD,KACE,kBAACH,EAAA,EAAD,CAAQjR,QAASsoB,EAAmB/sB,MAAM,UAAUgS,WAAS,GAA7D,MAGA,kBAAC0D,EAAA,EAAD,CAAQjR,QAAS,kBAAMuoB,KAAWhtB,MAAM,WAAxC,U,UClBeyN,G,iLAEjB,OAAQ,uD,GAFqBrN,a,4FCoDlB6sB,GA7CO,SAAC,GAAD,IACpBpP,EADoB,EACpBA,QACAhhB,EAFoB,EAEpBA,OACAkI,EAHoB,EAGpBA,KACAmoB,EAJoB,EAIpBA,iBACAvI,EALoB,EAKpBA,YALoB,OAOpB,kBAACwI,GAAA,EAAD,CACEnoB,SAAS,WACTwD,UAAW4kB,KAAWvP,EAAQgM,OAAQ9kB,GAAQ8Y,EAAQ0M,cAEtD,kBAAC8C,GAAA,EAAD,CAASC,gBAAiBvoB,EAAMyD,UAAWqV,EAAQ2L,SACjD,kBAACxL,GAAA,EAAD,CACEhe,MAAM,UACNie,aAAW,cACXxZ,QAASyoB,EACT1kB,UAAW4kB,KACTvP,EAAQ4M,WACR1lB,GAAQ8Y,EAAQ6M,mBAGlB,kBAAC,KAAD,OAEF,kBAACY,GAAA,EAAD,CACEhgB,UAAU,KACVqV,QAAQ,KACR3gB,MAAM,UACNutB,QAAM,EACN/kB,UAAWqV,EAAQ7P,OAEnB,yBAAKvO,MAAO,CAAE0X,OAAQ,KAAtB,gBAA2Cta,EAAOC,MAAMoG,MAAM,oBAAoBrG,EAAOC,MAAMoG,MAAM,KAAKrG,EAAOC,MAAM+F,SAEzH,kBAACipB,GAAA,EAAD,CACErf,IAAI,aACJC,IAAKiY,EAAY,UACjBnc,UAAWqV,EAAQnD,OACnBjW,QAAS,kBACNyM,OAAOpC,SAAS3B,KACf,mCAAqCwX,EAAY,Y,0VCqH9C6I,GA7IG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,kBAAhB,OAChB,kBAAC,WAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,CAAMxtB,GAAI,KACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,gBAG1B,kBAAC,IAAD,CAAM7M,GAAI,gBACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,iBAG1B,kBAAC,IAAD,CAAM7M,GAAI,WACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,YAG1B,kBAAC,IAAD,CAAM7M,GAAI,UACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,WAG1B,kBAAC,IAAD,CAAM7M,GAAI,WACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,YAGzBygB,EAAYrS,OACb,6BACA,kBAAC,IAAD,CAAMjb,GAAI,aACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,eAG1B,kBAAC,IAAD,CAAM7M,GAAI,gBACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,iBAG1B,kBAAC,IAAD,CAAM7M,GAAI,SACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,UAG1B,kBAAC,IAAD,CAAM7M,GAAI,YACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,kBAG1B,kBAAC,IAAD,CAAM7M,GAAI,WACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,mBAG1B,kBAAC,IAAD,CAAM7M,GAAI,eACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,kBAgB5B,kBAACqb,GAAA,EAAD,MACA,kBAACsF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAU/gB,QAAM,EAACpI,QAASipB,GACxB,kBAACG,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,aAG1B,kBAACqb,GAAA,EAAD,MACA,kBAACsF,GAAA,EAAD,KACE,kBAAC,IAAD,CAAMxtB,GAAI,WACR,kBAACytB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,YAG1B,uBACEpD,OAAO,SACPsD,IAAI,sBACJC,KAAK,+DAEL,kBAACygB,GAAA,EAAD,CAAU/gB,QAAM,GACd,kBAACghB,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAc9gB,QAAQ,cC7HjB+gB,GAxBQ,SAAC,GAAD,IACrBlQ,EADqB,EACrBA,QACA9Y,EAFqB,EAErBA,KACA0oB,EAHqB,EAGrBA,YACAC,EAJqB,EAIrBA,kBACAM,EALqB,EAKrBA,kBALqB,OAOrB,kBAACC,GAAA,EAAD,CACEtN,QAAQ,YACR9C,QAAS,CACPyL,MAAO8D,KAAWvP,EAAQ8M,aAAc5lB,GAAQ8Y,EAAQgN,mBAE1D9lB,KAAMA,GAEN,yBAAKyD,UAAWqV,EAAQ6L,aACtB,kBAAC1L,GAAA,EAAD,CAAYvZ,QAASupB,GACnB,kBAAC,KAAD,QAGJ,kBAAC3F,GAAA,EAAD,MACA,kBAAC,GAAD,CAAWoF,YAAaA,EAAaC,kBAAmBA,MCH7CQ,GAvBC,SAAC,GAAD,IAAGpf,EAAH,EAAGA,SAAH,OACd,6BACE,uCACA,kFAEE,6BACA,6BACA,8BAAOA,EAAS4c,UAChB,6BACA,6BANF,qCAOqC,IACnC,uBACE9hB,OAAO,SACPsD,IAAI,sBACJC,KAAK,0DAHP,mBAMK,IAdP,sCC6CWghB,GAvBO,SAAC,GAAD,IAAGtxB,EAAH,EAAGA,OAAH,OACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkN,OAAO,EAAMC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,CAAWpN,OAAQA,OAC9D,kBAAC,IAAD,CAAOmN,KAAK,QAAQC,OAAQ,SAAAxN,GAAK,OAAI,kBAAC,GAAD,iBAAWA,EAAX,CAAkBI,OAAQA,QAC/D,kBAAC,IAAD,CAAOmN,KAAK,eAAeC,OAAQ,kBAAM,kBAACqP,GAAA,EAAD,CAAYzc,OAAQA,OAC7D,kBAAC,IAAD,CAAOmN,KAAK,UAAUC,OAAQ,kBAAM,kBAACmkB,GAAA,EAAD,CAAOvxB,OAAQA,OACnD,kBAAC,IAAD,CAAOmN,KAAK,SAASC,OAAQ,kBAAM,kBAACokB,EAAA,EAAD,CAAMxxB,OAAQA,OACjD,kBAAC,IAAD,CAAOmN,KAAK,UAAUC,OAAQ,kBAAM,kBAACsN,EAAA,EAAD,CAAO1a,OAAQA,OACnD,kBAAC,IAAD,CAAOmN,KAAK,YAAYC,OAAQ,kBAAM,kBAACnB,EAAA,EAAD,CAASjM,OAAQA,OACvD,kBAAC,IAAD,CAAOmN,KAAK,eAAeC,OAAQ,kBAAM,kBAAC,GAAD,CAAYpN,OAAQA,OAC7D,kBAAC,IAAD,CACEmN,KAAK,QACLC,OAAQ,kBAAM,kBAACqkB,GAAA,EAAD,CAAKzxB,OAAQA,EAAQ4T,OAAQ5T,EAAOC,MAAMyxB,qBAE1D,kBAAC,IAAD,CAAOvkB,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,GAAD,CAAYpN,OAAQA,OACzD,kBAAC,IAAD,CAAOmN,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,GAAD,CAAOpN,OAAQA,OACnD,kBAAC,IAAD,CAAOmN,KAAK,cAAcC,OAAQ,kBAAM,kBAAC,EAAD,CAAWpN,OAAQA,OAC3D,kBAAC,IAAD,CAAOmN,KAAK,aAAaC,OAAQ,kBAAM,kBAAC,GAAD,CAAUpN,OAAQA,OACzD,kBAAC,IAAD,CAAOmN,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,EAAD,CAAOpN,OAAQA,OACnD,kBAAC,IAAD,CAAOyO,UAAW4iB,O,kBCvBhBzgB,G,YACJ,WAAYhR,GAAQ,IAAD,uBACjB,4CAAMA,KA2BRuB,UA5BmB,qBA4BP,oCAAApB,EAAA,0DACqB,EAAKE,MAA9B+F,EADI,EACJA,OAAQC,EADJ,EACIA,MAAOI,EADX,EACWA,MAErB,EAAKlG,SAAS,CAACsB,SAAS,IAGpBkwB,EAAM,CAACjsB,OAAO,GANR,UASJM,IAAUC,EATN,iCAUM,EAAK2rB,UAAU5rB,EAAQ6rB,IAAIC,OAAO7rB,GAAX,GAAwB8Y,MAAM,KAAK,GAAI9Y,EAAOI,GAV3E,OAUNsrB,EAVM,qCAYA,IAAIjrB,MAAM,2BAZV,YAeJirB,EAAIjsB,MAfA,uBAgBA,IAAIgB,MAAM,aAhBV,0DAoBJT,GAASD,IACX,EAAK7F,SAAS,CAAC6F,OAAQ,KAAMC,MAAO,KAAMI,MAAO,OACjDkG,aAAawlB,QACbpsB,QAAQC,KAAK,0BAEfD,QAAQC,KAAR,MAzBQ,QA4BV,EAAKzF,SAAS,CACZsB,SAAS,EACTmvB,YAAce,EAAI3oB,KAAK2oB,EAAI3oB,KAAK,IAC/B,kBAAM,EAAKgpB,cA/BJ,wDA5BO,EA+DnBA,UA/DmB,qBA+DP,gCAAAjyB,EAAA,wDACFC,EAAW,EAAKC,MAAhBD,QAGJ,EAAKC,MAAMyxB,gBAJL,oDAKL,EAAKzxB,MAAM+F,OALN,0EAUKvF,YAAOT,EAAQ,oBAVpB,UAURgJ,EAVQ,2DAcJipB,EAAUC,SAASC,cAAc,WAC7BllB,KAAO,kBACfglB,EAAQpiB,IACN,+CACA7G,EAAK0oB,gBACL,oBACFQ,SAASE,KAAKC,YAAYJ,GAE1B,EAAK9xB,SAAS,CAAEuxB,gBAAiB1oB,EAAK0oB,kBAtB9B,kDAwBR/rB,QAAQC,KAAR,MAxBQ,wDA/DO,EA2FnBirB,kBAAoB,WAClB,EAAK1wB,SAAS,CAAE8vB,YAAY,KA5FX,EA+FnBC,kBAAoB,WAClB,EAAK/vB,SAAS,CAAE8vB,YAAY,KAhGX,EAmGnBxsB,SAAW,SAAA6uB,GACT,EAAKnyB,SAAS,CAAEmyB,iBApGC,EAuGnBxK,YAAc,SAAApI,GACZ,IAAI3D,EAEJ,IAAK,EAAK9b,MAAMgG,MAAO,OAAO,KAE9B,IACE8V,EAAO8V,IAAIC,OAAO,EAAK7xB,MAAMgG,OAAOyZ,GACpC,MAAOja,GACP1E,YACE0E,EACA,mFAEFE,QAAQC,KAAKH,GAEf,OAAOsW,GArHU,EAwHnBoU,QAAU,WACR5jB,aAAawlB,QACb,EAAK5xB,SAAS,CAAE8vB,YAAY,EAAOjqB,OAAQ,KAAMC,MAAO,KAAMI,MAAO,QA1HpD,EA6HnB+oB,OA7HmB,sCA6HV,WAAOtiB,EAAOC,GAAd,mBAAAhN,EAAA,4DAIH+M,EAAMC,OAAO1G,OACfA,EAAQyG,EAAMC,OAAO1G,MAAMjE,MACvB8O,EAAQ7K,EAAMksB,UAAU,EAAE,GAAG1pB,cACjC7C,EAAS,QAAQkL,EAAM,oBAEvBlL,EADS8G,EAAMC,OAAO/G,OACb8G,EAAMC,OAAO/G,OAAO5D,MAEpBiS,OAAOpC,SAASugB,KAAKja,QAAQ,QAAQ,SAXzC,SAaD,EAAKqZ,UAAU5rB,EAAQ+G,EAAQ,KAAM1G,GAbpC,yCA7HU,0DA6InBurB,UA7ImB,sCA6IP,WAAO5rB,EAAQ+G,EAAQ9G,EAAOI,GAA9B,uBAAAtG,EAAA,4DAGVwM,aAAaM,QAAQ,SAAU7G,GAC3BK,GAAOkG,aAAaM,QAAQ,QAASxG,GACzC,EAAKlG,SAAS,CAAC6F,SAAQK,UAEnBH,GAAQ,EACRF,EAAOG,MAAM,YAAWD,GAAQ,GAR1B,kBAWIE,MAAM,QAAQF,EAAM,IAAI,IAAI,MAAQF,EAAS,kBAAkBK,EAAMA,EAAM,IAAI,IAAI,eAAgB,CAC7GP,OAAQ,OACRQ,QAAS,CACPC,cACE,WACCN,IAAiB,EAAKhG,MAAMgG,MAAQ,EAAKhG,MAAMgG,MAAQ,oBAC1D,eAAgB,sBAjBZ,UAWRO,EAXQ,OAqBJisB,EAAejsB,EAAIF,QAAQosB,IAAI,kBArB3B,0CAwBC,CAAEhtB,OAAO,EAAMJ,IAAK,6BAxBrB,aA0BAkB,EAAIC,OA1BJ,OA2BH,MA3BG,QA6BH,MA7BG,QAmCH,MAnCG,QA2CH,MA3CG,sFA8BC,CACLf,OAAO,EACPJ,IACI,oEAjCA,eAoCFqtB,EAAK,GACM,WAAX5lB,IAAqB4lB,EAAK,MACf,aAAX5lB,IAAuB4lB,EAAK,MAChCtH,WAAW,WACThX,OAAOpC,SAAS3B,KAAOmiB,EAAe,IAAIE,EAAG,sBAAsBzsB,EAAM,GAAG,gBAC3E,KAzCG,kBA0CC,CAAER,OAAO,EAAOgC,MAAM,IA1CvB,iCA4CC,CACLhC,OAAO,EACPJ,IACI,mFA/CA,iCAkDC,CAAEI,OAAO,EAAMJ,IAAK,wCAlDrB,yBAqDSkB,EAAII,OArDb,YAuDgB,KAFpBb,EArDI,QAuDCiD,KAAK2T,MAvDN,0CAwDC,CAAEjX,OAAO,EAAOJ,IAAK,oBAAsBS,EAAKT,IAAK0D,KAAMjD,EAAKiD,OAxDjE,eA4DNrD,QAAQC,KAAK,CAAEgtB,KAAM,EAAK3yB,MAAM2yB,OA5D1B,kBA6DC,CAAEltB,OAAO,EAAOgC,MAAM,EAAMsB,KAAMjD,EAAKiD,OA7DxC,iEAgERrD,QAAQC,KAAK,oBAhEL,kBAiED,CACLF,OAAO,EACPJ,IAAK,iDAnEC,wDA7IO,8DAqNnB+qB,iBAAmB,WACjB,EAAKlwB,SAAS,CAAE+H,MAAM,KAtNL,EAyNnBipB,kBAAoB,WAClB,EAAKhxB,SAAS,CAAE+H,MAAM,KAvNtB,IAAM2qB,EAAIC,IAAYpqB,MAAM2L,OAAOpC,SAAS/F,QAH3B,OAIjB,EAAKjM,MAAQ,CACXD,OAAQJ,EAAMI,OACd4wB,YAAa,GACbnvB,SAAS,EACTyG,MAAM,EACN+nB,YAAY,EACZjqB,OAAQuG,aAAaC,QAAQ,UAC7BvG,MAAOsG,aAAaC,QAAQ,OAC5BnG,MAAOkG,aAAaC,QAAQ,SAC5BujB,QAAS8C,EAAE7sB,QAKXL,QAAQ4L,IACN,sNACA,mDApBa,E,iFAyBjB5O,KAAKxB,c,+BAoMG,IAAD,OACC6f,EAAYre,KAAK/C,MAAjBohB,QADD,EAEuCre,KAAK1C,MAA7C2wB,EAFC,EAEDA,YAAa5qB,EAFZ,EAEYA,OAAQC,EAFpB,EAEoBA,MAE3B,OAJO,EAE2BxE,QAGhC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0L,KAAK,IAAIC,OAAQ,SAAAxN,GAAK,OAAI,kBAAC,GAAYA,OAI7CoG,GAAWC,EAOd,kBAAC,IAAD,KACE,yBAAK0F,UAAWqV,EAAQE,MACtB,kBAAC,IAAD,MACA,kBAACsN,GAAA,EAAD,MACA,kBAAC,GAAD,CACEtmB,KAAMvF,KAAK1C,MAAMiI,KACjB8Y,QAASA,EACThhB,OAAQ2C,KACRmlB,YAAanlB,KAAKmlB,YAClBuI,iBAAkB1tB,KAAK0tB,mBAEzB,kBAAC,GAAD,CACEO,YAAaA,EACb5P,QAASA,EACT9Y,KAAMvF,KAAK1C,MAAMiI,KACjB4f,YAAanlB,KAAKmlB,YAClB+I,kBAAmBluB,KAAKkuB,kBACxBM,kBAAmBxuB,KAAKwuB,oBAE1B,0BAAMxlB,UAAWqV,EAAQkN,SACvB,yBAAKviB,UAAWqV,EAAQiN,eACxB,kBAAC,wBAAD,MACA,kBAAC,GAAD,CAAQjuB,OAAQ2C,OAChB,kBAAC,GAAD,CACEstB,WAAYttB,KAAK1C,MAAMgwB,WACvBC,kBAAmBvtB,KAAKutB,kBACxBC,QAASxtB,KAAKwtB,aAhCtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOhjB,KAAK,IAAIC,OAAQ,SAAAxN,GAAK,OAAI,kBAAC,GAAD,iBAAWA,EAAX,CAAkBI,OAAQ,a,GA1OjDuD,aAkRHge,gBAAW6K,GAAX7K,CAAmB3Q,IC7RdmiB,QACW,cAA7B1e,OAAOpC,SAAS+gB,UAEe,UAA7B3e,OAAOpC,SAAS+gB,UAEhB3e,OAAOpC,SAAS+gB,SAAS7sB,MACvB,2DCZN8sB,IAAS7lB,OAAO,kBAAC,GAAD,MAAS8kB,SAASgB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAczW,MAAM0W,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.c71c64ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { faStreetView } from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from '../Volunteers';\nimport { CardTeam } from '../Teams';\nimport { CardTurfFull } from './CardTurfFull';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadTurf,\n  _loadTeams,\n  _loadVolunteers,\n  Icon,\n} from '../../common.js';\n\nexport class CardTurf extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turf: this.props.turf,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.turf) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], turfId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], turfId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turf = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [turf, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadTurf(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'turf', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'turf', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      turf,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { turf } = this.state;\n\n    if (!turf || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faStreetView}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {turf.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/turf/view/' + turf.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTurfFull global={global} turf={turf} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { PaperTable } from '../Elements';\n\nimport { tsToStr } from '../../common';\n\nexport const CardTurfFull = props => (\n  <div>\n    <div>\n      Teams assigned to this turf:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this turf:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      <h3>Turf Stats</h3>\n      <pre>{JSON.stringify(props.refer.state.turf.stats)}</pre>\n      <PaperTable\n        spec={[\n          {\n            header: 'Query Name',\n            tooltip: 'Constraints which define this attribute query.',\n            params: ['Name'],\n          },\n          {\n            header: 'Total Addresses',\n            tooltip: 'Total number of houses/buildings in this area.',\n            params: ['Total Addresses'],\n          },\n          {\n            header: 'Total People',\n            tooltip: 'Total number of people in this area.',\n            params: ['Total People'],\n          },\n          {\n            header: 'Total People Visited',\n            tooltip: 'Total number of people in this area who have been visited.',\n            params: ['Total People Visited'],\n          },\n          {\n            header: 'People Visited in past month',\n            tooltip: 'Total number of peple in this area who have been visited.',\n            params: ['People Visited in past month'],\n          },\n        ]}\n        rows={\n          Object.keys(props.refer.state.turf.stats[\"Stats by Attribute\"]).map(k => {\n            props.refer.state.turf.stats[\"Stats by Attribute\"][k]['Name'] = k;\n            return props.refer.state.turf.stats[\"Stats by Attribute\"][k];\n          })\n        }\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport { NotificationManager } from 'react-notifications';\nimport formatNumber from 'simple-format-number';\nimport prettyMs from 'pretty-ms';\nimport QRCode from 'qrcode';\n\nimport Modal from '@material-ui/core/Modal';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport function jobRuntime(start, end) {\n  if (end)\n    return prettyMs(end-start);\n  else\n    return '';\n}\n\nexport function jobNumber(num) {\n  if (num) return formatNumber(num, { fractionDigits: 0 });\n  else return '';\n}\n\nexport function tsToStr(ts) {\n  return new Date(ts).toString();\n};\n\nexport function notify_success(msg) {\n  NotificationManager.success(msg, 'Success', 3000);\n}\n\nexport function notify_error(e, msg) {\n  NotificationManager.error(msg, 'Error', 6000);\n  console.warn(e);\n}\n\nexport async function _fetch(global, uri, method, body) {\n  if (!global || !global.state) return;\n\n  const { server, token } = global.state;\n\n  let https = true;\n  if (server.match(/:8080$/)) https = false;\n\n  if (!method) method = 'GET';\n\n  let res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ' + (global.state.orgId?'/'+global.state.orgId:'') + '/api/v1' + uri, {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + token,\n      'Content-Type': 'application/json'\n    },\n    body: body ? JSON.stringify(body) : null\n  });\n\n  if (res.status >= 400) throw new Error(await res.text());\n\n  return res.json();\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled)\n    return { access: false };\n  if (props.coords)\n    return {\n      access: true,\n      lng: props.coords.longitude,\n      lat: props.coords.latitude\n    };\n  return { access: true };\n}\n\nexport const Icon = props => (\n  <FontAwesomeIcon\n    style={{ width: 25 }}\n    data-tip={props['data-tip'] ? props['data-tip'] : props.icon.iconName}\n    {...props}\n  />\n);\n\nexport const RootLoader = props => {\n  if (props.flag) return <CircularProgress />;\n  else\n    return (\n      <div>\n        <Icon\n          icon={faSync}\n          color=\"green\"\n          onClick={props.func}\n          data-tip=\"Reload Data\"\n        />\n        <div>{props.children}</div>\n      </div>\n    );\n};\n\nexport const DialogSaving = props => {\n  if (props.flag)\n    return (\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={true}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 100,\n            left: '40%',\n            right: '40%',\n            backgroundColor: 'white',\n            padding: 40\n          }}\n        >\n          <center>\n            Saving changes...\n            <br />\n            <br />\n            <CircularProgress disableShrink />\n          </center>\n        </div>\n      </Modal>\n    );\n  return <div />;\n};\n\nexport function _searchStringify(obj) {\n  // deep copy and remove volitile variables\n  let o = JSON.parse(JSON.stringify(obj));\n  delete o.last_seen;\n  delete o.created;\n  delete o.id;\n  return JSON.stringify(o).toLowerCase();\n}\n\nexport async function _loadImports(global) {\n  let imports = [];\n  try {\n    let data = await _fetch(global, '/import/list');\n    imports = data && data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load import info.');\n  }\n  return imports;\n}\n\nexport function _inviteLink(inviteCode, server, orgId) {\n  return 'http'+(server.match(/:8080$/)?'':'s')+'://'+server+'/HelloVoterHQ/'+(orgId?orgId+'/':'')+'mobile/invite?inviteCode='+inviteCode+'&'+(orgId?'orgId='+orgId:'server='+server);\n}\n\nexport async function _loadQRCode(global, id) {\n  let qrcode = {};\n  try {\n    qrcode = await _fetch(\n      global,\n      '/qrcodes/get?id=' + id\n    );\n    qrcode.img = await QRCode.toDataURL(_inviteLink(id, global.state.server, global.state.orgId));\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode info.');\n  }\n  return qrcode;\n}\n\nexport async function _loadQRCodes(global, id) {\n  let qrcodes = [];\n\n  try {\n    qrcodes = await _fetch(global, '/qrcodes/list');\n  } catch (e) {\n    notify_error(e, 'Unable to load QRCode data.');\n  }\n\n  return qrcodes;\n}\n\nexport async function _loadVolunteer(global, id) {\n  let volunteer = {};\n  try {\n    volunteer = await _fetch(\n      global,\n      '/volunteer/get?id=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer info.');\n  }\n  return volunteer;\n}\n\nexport async function _loadVolunteers(global, byType, id) {\n  let volunteers = [];\n\n  try {\n    let call = 'volunteer/list';\n\n    if (byType === 'team') call = 'team/members/list?teamId=' + id;\n    else if (byType === 'turf')\n      call = 'turf/assigned/volunteer/list?turfId=' + id;\n    else if (byType === 'form')\n      call = 'form/assigned/volunteer/list?formId=' + id;\n\n    volunteers = await _fetch(global, '/' + call);\n  } catch (e) {\n    notify_error(e, 'Unable to load volunteer data.');\n  }\n\n  return volunteers;\n}\n\n\nexport async function _loadTurf(global, id) {\n  let turf = {};\n\n  try {\n    turf = await _fetch(\n      global,\n      '/turf/get?turfId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTurfs(global, teamId, flag) {\n  let turf = [];\n\n  try {\n    let call = 'turf/list' + (flag ? '?geometry=true' : '');\n    if (teamId)\n      call = 'team/turf/list?teamId=' + teamId + (flag ? '&geometry=true' : '');\n    let data = await _fetch(global, '/' + call);\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadNearbyTurfs(global, lng, lat, dist) {\n  let turf = [];\n\n  try {\n    let data = await _fetch(global, '/turf/list/byposition?longitude='+lng+'&latitude='+lat+(dist?'&dist='+dist:''));\n    turf = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load turf data.');\n  }\n\n  return turf;\n}\n\nexport async function _loadTeam(global, id) {\n  let team = {};\n\n  try {\n    team = await _fetch(\n      global,\n      '/team/get?teamId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load team data.');\n  }\n\n  return team.data[0];\n}\n\nexport async function _loadTeams(global, byType, id) {\n  let teams = [];\n\n  try {\n    let call = 'team/list';\n\n    if (byType === 'turf') call = 'turf/assigned/team/list?turfId=' + id;\n    else if (byType === 'form') call = 'form/assigned/team/list?formId=' + id;\n\n    let data = await _fetch(global, '/' + call);\n    teams = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load teams data.');\n  }\n\n  return teams;\n}\n\nexport async function _loadForm(global, id) {\n  let form = {};\n\n  try {\n    form = await _fetch(\n      global,\n      '/form/get?formId=' + id\n    );\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return form;\n}\n\nexport async function _loadForms(global, teamId) {\n  let forms = [];\n\n  try {\n    let uri;\n\n    if (teamId) uri = 'team/form/list?teamId=' + teamId;\n    else uri = 'form/list';\n\n    let data = await _fetch(global, '/' + uri);\n    forms = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load form data.');\n  }\n\n  return forms;\n}\n\nexport async function _loadAttribute(global, id) {\n  let attribute = {};\n\n  try {\n    let data = await _fetch(global, '/attribute/get?id='+id);\n    if (data.data) attribute = data.data[0];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  return attribute;\n}\n\nexport async function _loadAttributes(global) {\n  let attributes = [];\n\n  try {\n    let data = await _fetch(global, '/attribute/list');\n    attributes = data.data ? data.data : [];\n  } catch (e) {\n    notify_error(e, 'Unable to load attribute data.');\n  }\n\n  attributes.forEach(a => {\n    if (!a.label) a.label = a.name;\n  });\n\n  return attributes;\n}\n\nexport async function _loadAddressData(global, lng, lat, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/address/get/byposition?limit=1000&longitude='+lng+'&latitude='+lat+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport async function _loadPeopleAddressData(global, aId, formId) {\n  let data = [];\n  try {\n    data = await _fetch(global, '/people/get/byaddress?aId='+aId+(formId?'&formId='+formId:''));\n  } catch (e) {\n    notify_error(e, 'Unable to load address information.');\n  }\n  return data;\n}\n\nexport function _handleSelectChange(oldopt, newopt) {\n  let add = [];\n  let rm = [];\n\n  if (!oldopt) oldopt = [];\n  if (!newopt) newopt = [];\n\n  let prior = oldopt.map(e => {\n    return e.id;\n  });\n\n  let now = newopt.map(e => {\n    return e.id;\n  });\n\n  // anything in \"now\" that isn't in \"prior\" gets added\n  for (let ni in now) {\n    let n = now[ni];\n    if (prior.indexOf(n) === -1) {\n      add.push(n);\n    }\n  }\n\n  // anything in \"prior\" that isn't in \"now\" gets removed\n  for (let pi in prior) {\n    let p = prior[pi];\n    if (now.indexOf(p) === -1) {\n      rm.push(p);\n    }\n  }\n\n  return { add: add, rm: rm };\n}\n\nexport const PlacesAutocomplete = props => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n);\n\nconst addressSearch = ({\n  getInputProps,\n  getSuggestionItemProps,\n  suggestions,\n  loading\n}) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\nimport EdiText from 'react-editext';\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadQRCode,\n  _loadQRCodes,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _inviteLink,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class QRCodes extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('qrcodesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisQRCode: {},\n      qrcodes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('qrcodesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcodes = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      qrcodes = await _loadQRCodes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load qrcodes.');\n    }\n    this.setState({ loading: false, qrcodes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let qrcodes = [];\n\n    this.state.qrcodes.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      qrcodes.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Route\n              exact={true}\n              path=\"/qrcodes/\"\n              render={() => <ListQRCodes global={global} refer={this} qrcodes={qrcodes} />}\n            />\n            <Route\n              path=\"/qrcodes/view/:id\"\n              render={props => (\n                <CardQRCode\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisQRCode.id ? true : false}\n              onClose={() => this.setState({ thisQRCode: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardQRCode\n                  global={global}\n                  key={this.state.thisQRCode.id}\n                  id={this.state.thisQRCode.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListQRCodes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.qrcodes.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardQRCode global={props.global} key={c.id} qrcode={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.qrcodes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}QRCodes ({props.qrcodes.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n      <Button onClick={async () => {\n        let obj = await _fetch(\n          props.global,\n          '/qrcodes/create',\n          'POST'\n        );\n        if (obj && obj.id) {\n          props.refer.setState({ thisQRCode: obj});\n          props.refer._loadData();\n        } else {\n          notify_error({}, 'QRCode creation failed.');\n        }\n      }} color=\"primary\">\n        Generate QR CODE\n      </Button>\n    </div>\n  );\n};\n\nexport class CardQRCode extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      qrcode: this.props.qrcode,\n      selectedTeamsOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.qrcode) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/qrcodes/team/add',\n          'POST',\n          { teamId: obj.add[i], qId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/qrcodes/team/remove',\n          'POST',\n          { teamId: obj.rm[i], qId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        qrcode\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/qrcodes/form/add',\n          'POST',\n          { formId: obj.add[i], qId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/qrcodes/form/remove',\n          'POST',\n          { formId: obj.rm[i], qId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/qrcodes/turf/add',\n          'POST',\n          { turfId: obj.add[i], qId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/qrcodes/turf/remove',\n          'POST',\n          { turfId: obj.rm[i], qId: this.props.id }\n        );\n      }\n\n      // refresh info\n      let qrcode = await _loadQRCode(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, qrcode });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let qrcode = {},\n      forms = [],\n      turf = [],\n      teams = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [qrcode, forms, turf, teams] = await Promise.all([\n        _loadQRCode(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      qrcode.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    qrcode.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    qrcode.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      qrcode,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedFormsOption,\n      selectedTurfOption,\n    });\n  };\n\n  _disableQRCode = async (qrcode, flag) => {\n    const { global } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcodes/disable',\n        'POST',\n        { id: qrcode.id }\n      );\n      notify_success('QRCode has been disabled.');\n    } catch (e) {\n      notify_error(e, 'Unable to disable QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  };\n\n  onSave = async (val) => {\n    const { global, qrcode } = this.state;\n\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/qrcodes/update',\n        'POST',\n        { id: qrcode.id, name: val }\n      );\n      notify_success('QRCode has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update QRCode.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this.props.refer._loadData();\n  }\n\n  render() {\n    const { global, qrcode } = this.state;\n\n    if (!qrcode || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <img alt=\"QR Code\" src={qrcode.img} />\n            </ListItemAvatar>\n          </ListItem>\n          <CardQRCodeFull global={global} qrcode={qrcode} refer={this} link={_inviteLink(qrcode.id, global.state.server, global.state.orgId)} onSave={this.onSave} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisQRCode: qrcode })}\n      >\n        <ListItemAvatar>\n          <Icon icon={faQrcode} size={\"large\"} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={qrcode.name}\n          secondary={\"\"}\n        />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardQRCodeFull = props => (\n  <div>\n    <h1><EdiText type=\"text\" value={props.qrcode.name} onSave={props.onSave} /></h1>\n    <br />\n    <br />\n    Link to use on a mobile device: <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>{props.link}</a>\n    <br />\n    <br />\n    Last Used:{' '}\n    {(props.qrcode.last_used?new TimeAgo('en-US').format(new Date(props.qrcode.last_used-30000)):'Never')}\n    <br />\n    Number of people who've used it: {props.qrcode.num_volunteers}\n    <br />\n    <br />\n    <div>\n      Teams this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.qrcode.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.qrcode.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this QRCode gives access to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    {props.qrcode.disabled&&\n    <div>This QR Code is disabled</div>\n    }\n    {!props.qrcode.disabled&&\n    <Button onClick={() => props.refer._disableQRCode(props.qrcode, false)}>\n      Disable QRCode\n    </Button>\n    }\n  </div>\n);\n\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport Select from 'react-select';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport {\n  RootLoader,\n  _browserLocation,\n  _searchStringify,\n  _loadForms,\n  _loadTurfs,\n  _loadAddressData,\n  _loadPeopleAddressData,\n} from '../common.js';\n\nimport { CardForm } from './Forms';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n      selectedFormsOption: {},\n      formId: null,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let turfs = [], forms = [], formOptions = [{label: \"None\"}];\n\n    [\n      turfs,\n      forms,\n    ] = await Promise.all([\n      _loadTurfs(global, null, true),\n      _loadForms(global),\n    ]);\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({turfs, forms, formOptions});\n  }\n\n  handleFormsChange = async selectedFormsOption => {\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.setState({selectedFormsOption, formId: selectedFormsOption.id}, () => this.loadMarkerData());\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const { formId } = this.state;\n    this.setState({showingInfoWindow: true});\n    let data = await _loadPeopleAddressData(global, props.address.id, formId);\n    let place = data[0];\n    place.title = props.title;\n    this.setState({\n      selectedPlace: place,\n      activeMarker: marker,\n    });\n  }\n\n  onTurfClick = async (props) => {\n    console.log(props);\n    this.setState({\n      infoLocation: props.paths[0],\n      activeTurf: props.name,\n    });\n  }\n\n  loadMarkerData = async (mapProps, map) => {\n    const { global } = this.state;\n\n    let longitude, latitude;\n\n    if (map) {\n      longitude = map.center.lng();\n      latitude = map.center.lat();\n      this.setState({longitude, latitude});\n    } else {\n      longitude = this.state.longitude;\n      latitude = this.state.latitude;\n    }\n\n    let addresses = await _loadAddressData(global, longitude, latitude, this.state.formId);\n    this.setState({addresses});\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  statusColor(obj) {\n    if (!obj.visits || obj.visits.length === 0) return 'purple';\n    let visit = obj.visits[0];\n\n    switch (visit.status) {\n    case 0: return 'yellow';\n    case 1: return 'green';\n    case 2: return 'red';\n    default: return 'purple';\n    }\n  }\n\n  render() {\n    let polygons = [];\n    const { addresses, selectedPlace } = this.state;\n\n    let location = _browserLocation(this.props);\n    if (!location.lng || !location.lat) return (<div>Loading map...</div>);\n\n    this.state.turfs.forEach((c) => {\n      if (c.geometry)\n        geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push({name: c.name, polygon: p}));\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.loadMarkerData()}>\n\n        <div style={{display: 'flex' }}>\n          Show interaction status by Form:\n          <Select\n            value={this.state.selectedFormsOption}\n            onChange={this.handleFormsChange}\n            options={this.state.formOptions}\n            isSearchable={true}\n            placeholder=\"None\"\n          />\n        </div>\n\n        <Map\n          google={this.props.google}\n          zoom={17}\n          initialCenter={location}\n          onReady={this.loadMarkerData}\n          onDragend={this.loadMarkerData}\n          onClick={this.onMapClicked}>\n          {addresses.map((a, idx) => (\n            <Marker\n              key={idx}\n              onClick={this.onMarkerClick}\n              title={a.address.street+\", \"+a.address.city+\", \"+a.address.state+\", \"+a.address.zip}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/\"+this.statusColor(a)+\"-dot.png\",\n              }}\n              address={a.address}\n              position={{lng: a.address.longitude, lat: a.address.latitude}} />\n          ))}\n          {polygons.map((p, idx) => (\n            <Polygon\n              key={idx}\n              paths={p.polygon}\n              name={p.name}\n              onClick={this.onTurfClick}\n              strokeColor=\"#0000FF\"\n              strokeWeight={5}\n              fillColor=\"#000000\"\n              fillOpacity={0} />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <ModalMarker place={selectedPlace} />\n          </InfoWindow>\n          <InfoWindow position={this.state.infoLocation} visible={(this.state.activeTurf?true:false)}>\n            <h1>Turf: {this.state.activeTurf}</h1>\n          </InfoWindow>\n        </Map>\n      </RootLoader>\n    );\n  }\n}\n\nconst ModalMarker = props => {\n  let people = props.place.people;\n  let units = props.place.units;\n\n  if (!people) people = [];\n  if (!units) units = [];\n\n  return (\n    <div>\n      <h1>{props.place.title}</h1>\n      {(units.length?'This is a multi unit address with '+units.length+' units.':'')}\n      {people.map((p) => <ModalPerson person={p} />)}\n    </div>\n  );\n};\n\nconst ModalPerson = props => {\n  let attrs = props.person.attrs;\n  if (!attrs) attrs = [];\n  let name = '';\n  let party = '';\n\n  attrs.forEach(a => {\n    if (a.name === 'Name') name = a.value;\n    if (a.name === 'Party Affiliation') party = a.value;\n  });\n\n  return (\n    <div>\n      <b>Name: {name}</b><br />\n      <b>Party: {party}</b>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _handleSelectChange,\n  _searchStringify,\n  _loadVolunteers,\n  _loadTeams,\n  _loadTeam,\n  _loadForms,\n  _loadTurfs,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardVolunteer } from './Volunteers';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('teamsperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      teams: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeTeam(addTeamForm) {\n    this.setState({ addTeamForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('teamsperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteTeam = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/team/delete', 'POST', {\n        teamId: id,\n      });\n      notify_success('Team has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete teams.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _createTeam = async () => {\n    const { global } = this.state;\n\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/team/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Team has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create team.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/teams/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let teams = [];\n\n    try {\n      teams = await _loadTeams(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, teams });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.teams.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/teams/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListTeams global={global} refer={this} teams={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/teams/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTeamForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTeam(e)}\n                  value={this.state.addTeamForm}\n                />\n                <button onClick={() => this._createTeam()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/teams/view/:id\"\n            render={props => (\n              <div>\n                <CardTeam\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Team\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this team?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTeam(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListTeams = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.teams.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTeam global={props.global} key={t.id} team={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.teams.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Teams ({props.teams.length})\n      </h3>\n      <Link to={'/teams/add'}>\n        <button>Add Team</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      team: this.props.team,\n      selectedMembersOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.team) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: this.props.id, vId: obj.add[i] }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: this.props.id, vId: obj.rm[i] }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({ selectedMembersOption, team });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove team members.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { formId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { formId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let teamn = await _loadTeam(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ teamn, selectedFormsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/turf/assigned/team/add',\n          'POST',\n          { turfId: obj.add[i], teamId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/turf/assigned/team/remove',\n          'POST',\n          { turfId: obj.rm[i], teamId: this.props.id }\n        );\n      }\n\n      // refresh team info\n      let team = await _loadTeam(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ team, selectedTurfOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let team = {},\n      volunteers = [],\n      members = [],\n      turfSelected = [],\n      turfs = [],\n      formSelected = [],\n      forms = [];\n    this.setState({ loading: true });\n\n    try {\n      [\n        team,\n        volunteers,\n        members,\n        turfSelected,\n        turfs,\n        formSelected,\n        forms,\n      ] = await Promise.all([\n        _loadTeam(global, this.props.id),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'team', this.props.id),\n        _loadTurfs(global, this.props.id),\n        _loadTurfs(global),\n        _loadForms(global, this.props.id),\n        _loadForms(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load team info.');\n      return this.setState({ loading: false });\n    }\n\n    let memberOptions = [];\n    let formOptions = [];\n    let turfOptions = [];\n    let selectedMembersOption = [];\n    let selectedTurfOption = [];\n    let selectedFormsOption = [];\n\n    volunteers.forEach(c => {\n      memberOptions.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />,\n      });\n    });\n\n    // const CardTurf = (turfs.length < 100?CardTurf:(props) => (<div>{props.turf.name}</div>));\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    turfSelected.forEach(t => {\n      selectedTurfOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    formSelected.forEach(f => {\n      selectedFormsOption.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />,\n      });\n    });\n\n    this.setState({\n      team,\n      memberOptions,\n      turfOptions,\n      formOptions,\n      selectedMembersOption,\n      selectedTurfOption,\n      selectedFormsOption,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { team } = this.state;\n\n    if (!team || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <Icon\n              icon={faUsers}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {team.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/teams/view/' + team.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardTeamFull global={global} team={team} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeamFull = props => (\n  <div>\n    <br />\n    <div>\n      Members of this team:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.memberOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    <br />\n    <div>\n      Form this team is assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this team assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\n\nimport { CardTurf } from './CardTurf';\n\nexport const ListTurf = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.turf.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardTurf global={props.global} key={t.id} turf={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.turf.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Turf ({props.turf.length})\n      </h3>\n      <Link to={'/turf/add'}>\n        <button>Add Turf</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { us_states } from 'ourvoiceusa-sdk-js';\n\nimport {\n  PlacesAutocomplete,\n} from '../../common.js';\n\nexport class TurfOptions extends Component {\n  handleStateChange = selectedStateOption => {\n    if (!selectedStateOption) selectedStateOption = [];\n    this.setState({\n      typeOptions: [\n        { value: 'state', label: 'State' },\n        { value: 'cd', label: 'Congressional' },\n        { value: 'sldu', label: us_states[selectedStateOption.value].sldu },\n        { value: 'sldl', label: us_states[selectedStateOption.value].sldl },\n      ],\n    });\n    this.props.refer.handleStateChange(selectedStateOption);\n  }\n\n  render() {\n    if (!this.props.refer.state.selectedDrawOption) return <br />;\n\n    let stateOptions = [];\n    Object.keys(us_states).map(k =>\n      stateOptions.push({ value: k, label: us_states[k].name })\n    );\n\n    switch (this.props.refer.state.selectedDrawOption.value) {\n    case 'select':\n      return (\n        <div>\n          <div>\n            <br />\n              State or region:\n            <Select\n              value={this.props.refer.state.selectedStateOption}\n              onChange={this.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {this.props.refer.state.selectedStateOption ? (\n            <div>\n              <br />\n                District Type:\n              <Select\n                value={this.props.refer.state.selectedTypeOption}\n                onChange={this.props.refer.handleTypeChange}\n                onMenuClose={this.props.refer.selectedTypeFetch}\n                options={this.state.typeOptions}\n                isSearchable={false}\n                placeholder=\"Select district for this turf\"\n              />\n            </div>\n          ) : (\n            ''\n          )}\n\n          {this.props.refer._showDistrictOption() ? (\n            <div>\n              <br />\n                District Number:\n              {this.props.refer.state.districtOptions.length ? (\n                <Select\n                  value={this.props.refer.state.selectedDistrictOption}\n                  onChange={this.props.refer.handleDistrictChange}\n                  options={this.props.refer.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              ) : (\n                <CircularProgress />\n              )}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    case 'import':\n      return (\n        <div>\n          <br />\n          <input\n            type=\"file\"\n            accept=\".geojson,.json\"\n            onChange={e => this.props.refer.handleImportFiles(e.target.files)}\n          />\n        </div>\n      );\n    case 'radius':\n      return (\n        <div>\n          <br />\n            Type the address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={this.props.refer.state.address}\n            onChange={this.props.refer.onTypeAddress}\n            onSelect={this.props.refer.submitAddress}\n          />\n        </div>\n      );\n    case 'draw':\n      return (\n        <div>\n          <br />\n            Use a{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\"\n          >\n              GeoJSON Draw Tool\n          </a>\n            , save the file, and then select the \"Import GeoJSON shape file\"\n            option.\n        </div>\n      );\n    default:\n      return <div>Unknown generation method.</div>;\n    }\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { CardTurf, ListTurf, TurfOptions } from './index';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _searchStringify,\n  _loadTurfs,\n  RootLoader,\n  DialogSaving,\n} from '../../common.js';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.initState(props);\n    this.state.global = props.global;\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = address => this.setState({ address });\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  initState(props) {\n    let perPage = localStorage.getItem('turfperpage');\n    if (!perPage) perPage = 5;\n\n    return {\n      loading: true,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: '',\n      addressCoords: null,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  }\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  submitAddress = async address => {\n    this.setState({ address, saving: true });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({ addressCoords: pos });\n    } catch (e) {\n      notify_error(e, 'Unable to search or geocode address.');\n    }\n    this.setState({ saving: false });\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({ addTurfForm });\n  }\n\n  handleDrawChange = selectedDrawOption => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: '',\n    });\n  }\n\n  handleStateChange = selectedStateOption => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = selectedTypeOption => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = selectedDistrictOption => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = files => {\n    this.setState({ saving: true });\n    let reader = new FileReader();\n    reader.onload = event => {\n      this.setState({ importFileData: event.target.result, saving: false });\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n    case 'sldu':\n    case 'sldl':\n      return true;\n    default:\n      return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.saving) return false;\n    if (!this.state.selectedDrawOption) return false;\n    if (\n      this.state.selectedTypeOption &&\n      this.state.selectedTypeOption.value === 'state'\n    )\n      return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption)\n      return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/turf/delete', 'POST', {\n        turfId: id,\n      });\n      notify_success('Turf has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete turf.');\n    }\n    this.setState({ saving: false });\n\n    this._loadData();\n    window.location.href = '/HelloVoterHQ/#/turf/';\n  }\n\n  _createTurf = async () => {\n    const { global } = this.state;\n\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    let objs = [];\n\n    if (this.state.importFileData !== null) {\n      try {\n        objs.push(JSON.parse(this.state.importFileData));\n      } catch (e) {\n        notify_error(e, 'Unable to parse import data file.');\n        return this.setState({ saving: false });\n      }\n    } else if (this.state.selectedDrawOption.value === 'radius') {\n      objs.push(\n        circleToPolygon(\n          [this.state.addressCoords.lng, this.state.addressCoords.lat],\n          1000\n        )\n      );\n    } else {\n      let state = this.state.selectedStateOption.value;\n\n      try {\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        ) {\n          for (let i in this.state.districtOptions) {\n            if (this.state.districtOptions[i].value === 'all') continue;\n            let res = await fetch(\n              this.urlFromDist(\n                state,\n                this.state.selectedTypeOption.value,\n                this.state.districtOptions[i].value\n              )\n            );\n            let obj = await res.json();\n            obj.name = this.state.districtOptions[i].value;\n            objs.push(obj);\n          }\n        } else {\n          let res = await fetch(\n            this.urlFromDist(\n              state,\n              this.state.selectedTypeOption.value,\n              this.state.selectedDistrictOption\n                ? this.state.selectedDistrictOption.value\n                : null\n            )\n          );\n          objs.push(await res.json());\n        }\n      } catch (e) {\n        notify_error(e, 'Unable to fetch district info data.');\n        return this.setState({ saving: false });\n      }\n    }\n\n    try {\n      for (let i in objs) {\n        let obj = objs[i];\n        let geometry;\n        let name;\n\n        if (obj.geometry) geometry = obj.geometry;\n        else geometry = obj;\n\n        if (\n          this.state.selectedDistrictOption &&\n          this.state.selectedDistrictOption.value === 'all'\n        )\n          name = json.name + ' ' + obj.name;\n        else name = json.name;\n\n        await _fetch(global, '/turf/create', 'POST', {\n          name: name,\n          geometry: geometry,\n        });\n      }\n      notify_success('Turf has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create turf.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/turf/';\n    this._loadData();\n  }\n\n  urlFromDist(state, type, value) {\n    let uri;\n\n    switch (type) {\n    case 'state':\n      uri = 'states/' + state + '/shape.geojson';\n      break;\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/' + value + '/shape.geojson';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/' + value + '.geojson';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/' + value + '.geojson';\n      break;\n    default:\n      throw new Error('unknown selectedTypeOption');\n    }\n\n    return (\n      'https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/' + uri\n    );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({ districtOptions: [] });\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      // TODO: handle the fact there are new years with less in them\n      uri = 'cds/2016/';\n      break;\n    case 'sldu':\n      uri = 'states/' + state + '/sldu/';\n      break;\n    case 'sldl':\n      uri = 'states/' + state + '/sldl/';\n      break;\n    default:\n      return;\n    }\n\n    let res = await fetch(\n      'https://api.github.com/repos/OurVoiceUSA/districts/contents/' + uri\n    );\n\n    let dist = [{ value: 'all', label: 'Create all of them!' }];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n    case 'cd':\n      objs.forEach(o => {\n        if (o.name.includes(this.state.selectedStateOption.value))\n          dist.push({ value: o.name, label: o.name });\n        return;\n      });\n      break;\n    default:\n      objs.forEach(o => {\n        let val = o.name.replace('.geojson', '');\n        dist.push({ value: val, label: val });\n      });\n    }\n\n    this.setState({ districtOptions: dist });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let turf = [];\n\n    try {\n      turf = await _loadTurfs(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load turf.');\n    }\n    this.setState(this.initState());\n    this.setState({ loading: false, turf });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    let drawOptions = [\n      { value: 'select', label: 'Select from legislative boundary' },\n      { value: 'import', label: 'Import GeoJSON shape file' },\n      { value: 'radius', label: 'Area surrounding an address' },\n      { value: 'draw', label: 'Manually draw with your mouse' },\n    ];\n\n    let list = [];\n\n    this.state.turf.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/turf/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListTurf global={global} turf={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/turf/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addTurfForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeTurf(e)}\n                  value={this.state.addTurfForm}\n                />\n                <br />\n                Method of generating turf:\n                <Select\n                  value={this.state.selectedDrawOption}\n                  onChange={this.handleDrawChange}\n                  options={drawOptions}\n                  isSearchable={false}\n                  placeholder=\"Select method\"\n                />\n                <TurfOptions refer={this} />\n                {this._showSubmitButton() ? (\n                  <div>\n                    <br />\n                    <button onClick={() => this._createTurf()}>Submit</button>\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          />\n          <Route\n            path=\"/turf/view/:id\"\n            render={props => (\n              <div>\n                <CardTurf\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Turf\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this turf?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteTurf(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import { CardTurf } from './CardTurf';\nimport { CardTurfFull } from './CardTurfFull';\nimport { ListTurf } from './ListTurf';\nimport { TurfOptions } from './TurfOptions';\nimport Turf from './Turf';\n\nexport {\n  CardTurf,\n  CardTurfFull,\n  ListTurf,\n  TurfOptions,\n  Turf\n};","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport {\n  faClipboard\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { CardVolunteer } from './Volunteers.jsx';\nimport { CardTeam } from './Teams.jsx';\n\nimport {\n  _fetch,\n  notify_error,\n  notify_success,\n  _handleSelectChange,\n  _searchStringify,\n  _loadForms,\n  _loadForm,\n  _loadAttributes,\n  _loadVolunteers,\n  _loadTeams,\n  RootLoader,\n  Icon,\n  DialogSaving\n} from '../common.js';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\nexport default class Forms extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('formsperpage');\n    if (!perPage) perPage = 5;\n\n    // TODO: this is only for brand new forms\n    let fields = {};\n    let order = Object.keys(fields);\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      forms: [],\n      attributes: [],\n      attributes_selected: [],\n      fields: fields,\n      order: order,\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false\n    };\n\n    this.id2List = {\n        droppable: 'attributes',\n        droppable2: 'attributes_selected',\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String\n    });\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.'\n        }\n      }\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  getList = id => this.state[this.id2List[id]];\n\n  onDragEnd = result => {\n      const { source, destination } = result;\n\n      // dropped outside the list\n      if (!destination) {\n          return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n          const attributes = reorder(\n              this.getList(source.droppableId),\n              source.index,\n              destination.index\n          );\n\n          let state = { attributes };\n\n          if (source.droppableId === 'droppable2') {\n              state = { attributes_selected: attributes };\n          }\n\n          this.setState(state);\n      } else {\n          const result = move(\n              this.getList(source.droppableId),\n              this.getList(destination.droppableId),\n              source,\n              destination\n          );\n\n          this.setState({\n              attributes: result.droppable,\n              attributes_selected: result.droppable2\n          });\n      }\n  };\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n    case 'String':\n      return 'Text Input';\n    case 'TEXTBOX':\n      return 'Text Box';\n    case 'Number':\n      return 'Number';\n    case 'Boolean':\n      return 'On/Off Switch';\n    case 'SAND':\n      return 'Agree/Disagree';\n    case 'List':\n      return 'Select from List';\n    default:\n      return type;\n    }\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({ addFormForm });\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n    let forms = [];\n    let attributes = [], attributes_selected = [];\n    let fields = {};\n\n    try {\n      forms = await _loadForms(global);\n      attributes = await _loadAttributes(global);\n\n      // convert attributes to fields\n      attributes.forEach(a => {\n        fields[a.id] = { label: a.name, type: a.type, optional: true, options: a.values };\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to load forms.');\n    }\n    this.setState({ forms, attributes, attributes_selected, fields, loading: false });\n  };\n\n  _deleteForm = async id => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/form/delete', 'POST', {\n        formId: id\n      });\n      notify_success('Form has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  _createForm = async () => {\n    const { global } = this.state;\n\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      notify_error(\n        {},\n        'From name can only contain alphanumeric characters, and spaces and dashes.'\n      );\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      notify_error({}, 'Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    this.setState({ saving: true });\n\n    // make sure this name doesn't exist\n    try {\n      let obj;\n\n      obj = {\n        name: formName,\n        attributes: Object.keys(this.state.fields),\n      };\n\n      await _fetch(global, '/form/create', 'POST', obj);\n      notify_success('Form has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create form.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/forms/';\n    this._loadData();\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.forms.forEach(f => {\n      if (this.state.search && !_searchStringify(f).includes(this.state.search))\n        return;\n      list.push(f);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/forms/\"\n            render={() => (\n              <RootLoader\n                flag={this.state.loading}\n                func={() => this._loadData()}\n              >\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <br />\n                <ListForms global={global} forms={list} refer={this} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            path=\"/forms/add\"\n            render={props => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addFormForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeForm(e)}\n                  value={this.state.addFormForm}\n                />\n\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                  <DragDropContext onDragEnd={this.onDragEnd}>\n                      <Droppable droppableId=\"droppable\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                      &nbsp;\n                      Drag to assign\n                      &nbsp;\n                      <Droppable droppableId=\"droppable2\">\n                          {(provided, snapshot) => (\n                              <div\n                                  ref={provided.innerRef}\n                                  style={getListStyle(snapshot.isDraggingOver)}>\n                                  {this.state.attributes_selected.map((item, index) => (\n                                      <Draggable\n                                          key={item.id}\n                                          draggableId={item.id}\n                                          index={index}>\n                                          {(provided, snapshot) => (\n                                              <div\n                                                  ref={provided.innerRef}\n                                                  {...provided.draggableProps}\n                                                  {...provided.dragHandleProps}\n                                                  style={getItemStyle(\n                                                      snapshot.isDragging,\n                                                      provided.draggableProps.style\n                                                  )}>\n                                                  {item.label + (item.required ? ' *' : '')} :{' '}\n                                                  {this.inputTypeToReadable(item.type)}{' '}\n                                                  <Checkbox value=\"ack\" color=\"primary\" /> Readonly\n                                              </div>\n                                          )}\n                                      </Draggable>\n                                  ))}\n                                  {provided.placeholder}\n                              </div>\n                          )}\n                      </Droppable>\n                  </DragDropContext>\n                </div>\n\n                <button\n                  style={{ margin: 25 }}\n                  onClick={() => this._createForm()}\n                >\n                  Create Form\n                </button>\n\n              </div>\n            )}\n          />\n          <Route\n            path=\"/forms/view/:id\"\n            render={props => (\n              <div>\n                <CardForm\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete Form\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this form?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteForm(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListForms = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.forms.forEach((f, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardForm global={props.global} key={f.id} form={f} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.forms.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Forms ({props.forms.length})\n      </h3>\n      <Link to={'/forms/add'}>\n        <button>Add Form</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      form: this.props.form,\n      selectedTeamsOption: [],\n      selectedMembersOption: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.form) this._loadData();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/form/assigned/team/add',\n          'POST',\n          { teamId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/form/assigned/team/remove',\n          'POST',\n          { teamId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Team assignments saved.');\n      this.setState({ selectedTeamsOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedMembersOption,\n        selectedMembersOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { vId: obj.add[i], formId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { vId: obj.rm[i], formId: this.props.id }\n        );\n      }\n\n      notify_success('Volunteer assignments saved.');\n      this.setState({ selectedMembersOption });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let form = {},\n      volunteers = [],\n      members = [],\n      teams = [],\n      teamsSelected = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [form, volunteers, members, teams, teamsSelected] = await Promise.all([\n        _loadForm(global, this.props.id, true),\n        _loadVolunteers(global),\n        _loadVolunteers(global, 'form', this.props.id),\n        _loadTeams(global),\n        _loadTeams(global, 'form', this.props.id)\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load form info.');\n      return this.setState({ loading: false });\n    }\n\n    let teamOptions = [];\n    let membersOption = [];\n    let selectedTeamsOption = [];\n    let selectedMembersOption = [];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    teamsSelected.forEach(t => {\n      selectedTeamsOption.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n    });\n\n    volunteers.forEach(c => {\n      membersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    members.forEach(c => {\n      selectedMembersOption.push({\n        value: _searchStringify(c),\n        id: c.id,\n        label: <CardVolunteer global={global} key={c.id} volunteer={c} refer={this} />\n      });\n    });\n\n    this.setState({\n      form,\n      volunteers,\n      teamOptions,\n      membersOption,\n      selectedTeamsOption,\n      selectedMembersOption,\n      loading: false\n    });\n  };\n\n  render() {\n    const { global, form } = this.state;\n\n    if (!form || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ padding: '5px 10px' }}>\n            <Icon\n              icon={faClipboard}\n              style={{ width: 20, height: 20, color: 'gray' }}\n            />{' '}\n            {form.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/forms/view/' + form.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardFormFull global={global} form={form} refer={this} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardFormFull = props => (\n  <div>\n    <div>\n      <br />\n      Teams assigned to this form:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Volunteers assigned directly to this form:\n      <Select\n        value={props.refer.state.selectedMembersOption}\n        onChange={props.refer.handleMembersChange}\n        options={props.refer.state.membersOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport ReactPaginate from 'react-paginate';\nimport ReactTooltip from 'react-tooltip';\nimport Select from 'react-select';\n\nimport Modal from '@material-ui/core/Modal';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _searchStringify,\n  _handleSelectChange,\n  _loadVolunteers,\n  _loadVolunteer,\n  _loadTeams,\n  _loadForms,\n  _loadTurfs,\n  _loadNearbyTurfs,\n  RootLoader,\n  Icon,\n  PlacesAutocomplete,\n  DialogSaving\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\nimport { CardForm } from './Forms';\nimport { CardTeam } from './Teams';\n\nimport {\n  faCrown,\n  faExclamationTriangle,\n  faCheckCircle,\n  faBan,\n  faHome,\n  faFlag\n} from '@fortawesome/free-solid-svg-icons';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nconst NEARBY_DIST = 50;\n\nexport default class Volunteers extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('volunteersperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      thisVolunteer: {},\n      volunteers: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('volunteersperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1\n    });\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteers = [];\n    this.setState({ loading: true, search: '' });\n    try {\n      volunteers = await _loadVolunteers(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n    this.setState({ loading: false, volunteers });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let ready = [];\n    let unassigned = [];\n    let denied = [];\n    let invited = [];\n\n    this.state.volunteers.forEach(c => {\n      if (this.state.search && !_searchStringify(c).includes(this.state.search))\n        return;\n      if (c.locked) {\n        denied.push(c);\n      } else if (c.invited) invited.push(c);\n      else if (c.ass.ready || c.ass.teams.length) ready.push(c);\n      else unassigned.push(c);\n    });\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <Router>\n          <div>\n            Search:{' '}\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.onTypeSearch}\n              data-tip=\"Search by name, email, location, or admin\"\n            />\n            <br />\n            <Link\n              to={'/volunteers/'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Volunteers ({ready.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/unassigned'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Unassigned ({unassigned.length})\n            </Link>\n            &nbsp;-&nbsp;\n            <Link\n              to={'/volunteers/denied'}\n              onClick={() => this.setState({ pageNum: 1 })}\n            >\n              Denied ({denied.length})\n            </Link>\n            <Route\n              exact={true}\n              path=\"/volunteers/\"\n              render={() => <ListVolunteers global={global} refer={this} volunteers={ready} />}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/unassigned\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Unassigned\"\n                  volunteers={unassigned}\n                />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/invited\"\n              render={() => (\n                <div>\n                  <ListVolunteers\n                    global={global}\n                    refer={this}\n                    type=\"Invited\"\n                    volunteers={invited}\n                  />\n                  <Button onClick={async () => {\n                    let obj = await _fetch(\n                      global,\n                      '/volunteer/invite',\n                      'POST'\n                    );\n                    if (obj.token) {\n                      this.setState({ thisVolunteer: {id: 'invite:'+obj.token} });\n                    } else {\n                      notify_error({}, 'Invite failed.');\n                    }\n                  }} color=\"primary\">\n                    Invite Someone\n                  </Button>\n                </div>\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/volunteers/denied\"\n              render={() => (\n                <ListVolunteers\n                  global={global}\n                  refer={this}\n                  type=\"Denied\"\n                  volunteers={denied}\n                />\n              )}\n            />\n            <Route\n              path=\"/volunteers/view/:id\"\n              render={props => (\n                <CardVolunteer\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                />\n              )}\n            />\n            <Modal\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              open={this.state.thisVolunteer.id ? true : false}\n              onClose={() => this.setState({ thisVolunteer: {} })}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  top: 100,\n                  left: 200,\n                  right: 200,\n                  backgroundColor: 'white',\n                  padding: 40\n                }}\n              >\n                <CardVolunteer\n                  global={global}\n                  key={this.state.thisVolunteer.id}\n                  id={this.state.thisVolunteer.id}\n                  edit={true}\n                  refer={this}\n                />\n              </div>\n            </Modal>\n            <DialogSaving flag={this.state.saving} />\n          </div>\n        </Router>\n      </RootLoader>\n    );\n  }\n}\n\nconst ListVolunteers = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.volunteers.forEach((c, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardVolunteer global={global} key={c.id} volunteer={c} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.volunteers.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 }\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Volunteers ({props.volunteers.length})\n      </h3>\n      {paginate}\n      <List component=\"nav\">{list}</List>\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardVolunteer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      refer: this.props.refer.props.refer,\n      volunteer: this.props.volunteer,\n      selectedTeamsOption: [],\n      selectedLeaderOption: [],\n      selectedFormsOption: [],\n      selectedTurfOption: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.volunteer) this._loadData();\n\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async selectedTeamsOption => {\n    const { global } = this.state;\n\n    if (!selectedTeamsOption) selectedTeamsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTeamsOption,\n        selectedTeamsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/team/members/add',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/team/members/remove',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team assignments saved.');\n      this.setState({\n        selectedTeamsOption,\n        volunteer\n      });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove teams.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleLeaderChange = async selectedLeaderOption => {\n    const { global } = this.state;\n\n    if (!selectedLeaderOption) selectedLeaderOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedLeaderOption,\n        selectedLeaderOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/team/members/promote',\n          'POST',\n          { teamId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/team/members/demote',\n          'POST',\n          { teamId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Team leaders saved.');\n      this.setState({ selectedLeaderOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to edit team leadership.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleFormsChange = async selectedFormsOption => {\n    const { global } = this.state;\n\n    if (!selectedFormsOption) selectedFormsOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedFormsOption,\n        selectedFormsOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/form/assigned/volunteer/add',\n          'POST',\n          { formId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/form/assigned/volunteer/remove',\n          'POST',\n          { formId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Form selection saved.');\n      this.setState({ selectedFormsOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove form.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  handleTurfChange = async selectedTurfOption => {\n    const { global } = this.state;\n\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.props.refer.setState({ saving: true });\n    try {\n      let obj = _handleSelectChange(\n        this.state.selectedTurfOption,\n        selectedTurfOption\n      );\n\n      for (let i in obj.add) {\n        await _fetch(\n          global,\n          '/turf/assigned/volunteer/add',\n          'POST',\n          { turfId: obj.add[i], vId: this.props.id }\n        );\n      }\n\n      for (let i in obj.rm) {\n        await _fetch(\n          global,\n          '/turf/assigned/volunteer/remove',\n          'POST',\n          { turfId: obj.rm[i], vId: this.props.id }\n        );\n      }\n\n      // refresh volunteer info\n      let volunteer = await _loadVolunteer(global, this.props.id);\n      notify_success('Turf selection saved.');\n      this.setState({ selectedTurfOption, volunteer });\n    } catch (e) {\n      notify_error(e, 'Unable to add/remove turf.');\n    }\n    this.props.refer.setState({ saving: false });\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let volunteer = {},\n      forms = [],\n      turf = [],\n      teams = [],\n      hometurf = [],\n      nearbyturf = [];\n\n    this.setState({ loading: true });\n\n    try {\n      [volunteer, forms, turf, teams] = await Promise.all([\n        _loadVolunteer(global, this.props.id),\n        _loadForms(global),\n        _loadTurfs(global),\n        _loadTeams(global),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load canavasser info.');\n      return this.setState({ loading: false });\n    }\n\n    if (volunteer.location) {\n      hometurf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, 0);\n      nearbyturf = await _loadNearbyTurfs(global, volunteer.location.x, volunteer.location.y, NEARBY_DIST);\n    }\n\n    let teamOptions = [];\n    let leaderOptions = [];\n    let selectedTeamsOption = [];\n    let selectedLeaderOption = [];\n    let selectedFormsOption = [];\n    let selectedTurfOption = [];\n\n    let formOptions = [{ value: '', label: 'None' }];\n\n    let turfOptions = [\n      { value: '', label: 'None' },\n      {\n        value: 'auto',\n        id: 'auto',\n        label: (\n          <CardTurf\n            global={global}\n            key=\"auto\"\n            turf={{\n              id: 'auto',\n              name: 'Area surrounnding this volunteer\\'s home address'\n            }}\n            refer={this}\n            icon={faHome}\n          />\n        )\n      }\n    ];\n\n    teams.forEach(t => {\n      teamOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n      });\n      volunteer.ass.teams.forEach((a, idx) => {\n        if (a.id === t.id) {\n          selectedTeamsOption.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          leaderOptions.push({\n            value: _searchStringify(t),\n            id: t.id,\n            label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n          });\n          if (a.leader) {\n            selectedLeaderOption.push({\n              value: _searchStringify(t),\n              id: t.id,\n              label: <CardTeam global={global} key={t.id} team={t} refer={this} />\n            });\n          }\n        }\n      });\n    });\n\n    forms.forEach(f => {\n      formOptions.push({\n        value: _searchStringify(f),\n        id: f.id,\n        label: <CardForm global={global} key={f.id} form={f} refer={this} />\n      });\n    });\n\n    volunteer.ass.forms.forEach(f => {\n      if (f.direct) {\n        selectedFormsOption.push({\n          value: _searchStringify(f),\n          id: f.id,\n          label: <CardForm global={global} key={f.id} form={f} refer={this} />\n        });\n      }\n    });\n\n    turf.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />\n      });\n    });\n\n    volunteer.ass.turfs.forEach(t => {\n      if (t.direct) {\n        selectedTurfOption.push({\n          value: _searchStringify(t),\n          id: t.id,\n          label: (\n            <CardTurf\n              global={global}\n              key={t.id}\n              turf={t}\n              refer={this}\n              icon={volunteer.autoturf ? faHome : null}\n            />\n          )\n        });\n      }\n    });\n\n    this.setState({\n      loading: false,\n      volunteer,\n      teamOptions,\n      leaderOptions,\n      formOptions,\n      turfOptions,\n      selectedTeamsOption,\n      selectedLeaderOption,\n      selectedFormsOption,\n      selectedTurfOption,\n      hometurf,\n      nearbyturf,\n    });\n  };\n\n  _lockVolunteer = async (volunteer, flag) => {\n    const { global } = this.state;\n\n    let term = flag ? 'lock' : 'unlock';\n    this.props.refer.setState({ saving: true });\n    try {\n      await _fetch(\n        global,\n        '/volunteer/' + term,\n        'POST',\n        { id: volunteer.id }\n      );\n      notify_success('Volunteer hass been ' + term + 'ed.');\n    } catch (e) {\n      notify_error(e, 'Unable to ' + term + ' volunteer.');\n    }\n    this.props.refer.setState({ saving: false });\n\n    this._loadData();\n  };\n\n  render() {\n    const { global, volunteer } = this.state;\n\n    if (!volunteer || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    if (this.props.edit)\n      return (\n        <div>\n          <ListItem alignItems=\"flex-start\" style={{ width: 350 }}>\n            <ListItemAvatar>\n              <Avatar alt={volunteer.name} src={volunteer.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={volunteer.name}\n              secondary={\n                volunteer.locationstr\n                  ? extract_addr(volunteer.locationstr)\n                  : 'N/A'\n              }\n            />\n            <VolunteerBadges volunteer={volunteer} />\n          </ListItem>\n          <CardVolunteerFull global={global} volunteer={volunteer} refer={this} />\n        </div>\n      );\n\n    return (\n      <ListItem\n        button\n        style={{ width: 350 }}\n        alignItems=\"flex-start\"\n        onClick={() => this.props.refer.setState({ thisVolunteer: volunteer })}\n      >\n        <ListItemAvatar>\n          <Avatar alt={volunteer.name} src={volunteer.avatar} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={volunteer.name}\n          secondary={\n            volunteer.locationstr ? extract_addr(volunteer.locationstr) : 'N/A'\n          }\n        />\n        <VolunteerBadges volunteer={volunteer} />\n      </ListItem>\n    );\n  }\n}\n\nexport const CardVolunteerFull = props => (\n  <div>\n    <br />\n    {props.volunteer.locked ? (\n      <Button\n        onClick={() => props.refer._lockVolunteer(props.volunteer, false)}\n      >\n        Restore Access\n      </Button>\n    ) : (\n      <Button onClick={() => props.refer._lockVolunteer(props.volunteer, true)}>\n        Deny Access\n      </Button>\n    )}\n    <br />\n    Last Seen:{' '}\n    {new TimeAgo('en-US').format(new Date(props.volunteer.last_seen - 30000))}\n    <br />\n    Email: {props.volunteer.email ? props.volunteer.email : 'N/A'}\n    <br />\n    Phone: {props.volunteer.phone ? props.volunteer.phone : 'N/A'}\n    <br />\n    Address:{' '}\n    <VolunteerAddress global={global} refer={props.refer} volunteer={props.volunteer} />\n    <br />\n    {props.refer.state.hometurf.length?\n      <div>\n        Turf this volunteer's home address is in:\n        {props.refer.state.hometurf.map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>This volunteer's home address isn't in any turf.</div>\n    }\n    <br />\n    {props.refer.state.nearbyturf.length?\n      <div>\n        Turf this volunteer's home address is near by:\n        {props.refer.state.nearbyturf.slice(0,5).map(t => <div>{t.name}</div>)}\n      </div>\n      :\n      <div>No turfs are within {NEARBY_DIST}km of this volunteer.</div>\n    }\n    <br />\n    # of doors knocked: N/A\n    <br />\n    <br />\n    <div>\n      Teams this volunteer is a member of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Teams this volunteer is a leader of:\n      <Select\n        value={props.refer.state.selectedLeaderOption}\n        onChange={props.refer.handleLeaderChange}\n        options={props.refer.state.selectedTeamsOption}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n\n    <br />\n    {props.refer.state.selectedTeamsOption.length ? (\n      <div>\n        Forms / Turf this users sees based on the above team(s):\n        <br />\n        {props.volunteer.ass.forms.filter(f => !f.direct).map(f => (\n          <CardForm global={global} key={f.id} form={f} refer={props.refer} />\n        ))}\n        {props.volunteer.ass.turfs.filter(t => !t.direct).map(t => (\n          <CardTurf global={global} key={t.id} turf={t} refer={props.refer} />\n        ))}\n      </div>\n    ):''\n    }\n    <div>\n      Forms this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this volunteer is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n  </div>\n);\n\nexport class VolunteerAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      global: props.global,\n      edit: false,\n      address: this.props.volunteer.locationstr\n        ? this.props.volunteer.locationstr\n        : ''\n    };\n    this.onTypeAddress = address => this.setState({ address });\n  }\n\n  submitAddress = async address => {\n    const { global } = this.state;\n\n    this.setState({ address });\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      await _fetch(\n        global,\n        '/volunteer/update',\n        'POST',\n        {\n          id: this.props.volunteer.id,\n          address: address,\n          lat: pos.lat,\n          lng: pos.lng\n        }\n      );\n      this.props.refer._loadData();\n      notify_success('Address hass been saved.');\n    } catch (e) {\n      notify_error(e, 'Unable to update address info.');\n    }\n  };\n\n  render() {\n    if (this.state.edit)\n      return (\n        <PlacesAutocomplete\n          debounce={500}\n          value={this.state.address}\n          onChange={this.onTypeAddress}\n          onSelect={this.submitAddress}\n        />\n      );\n\n    return (\n      <div>\n        {this.state.address}{' '}\n        <Button onClick={() => this.setState({ edit: true })}>\n          click to edit\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport const VolunteerBadges = props => {\n  let badges = [];\n  let id = props.volunteer.id;\n\n  if (props.volunteer.admin)\n    badges.push(\n      <Icon\n        icon={faCrown}\n        color=\"gold\"\n        key={id + 'admin'}\n        data-tip=\"Administrator\"\n      />\n    );\n  if (props.volunteer.ass.leader)\n    badges.push(\n      <Icon\n        icon={faFlag}\n        color=\"green\"\n        key={id + 'leader'}\n        data-tip=\"Team Leader\"\n      />\n    );\n  if (props.volunteer.locked)\n    badges.push(\n      <Icon\n        icon={faBan}\n        color=\"red\"\n        key={id + 'locked'}\n        data-tip=\"Denied access\"\n      />\n    );\n  else {\n    if (props.volunteer.ass.ready)\n      badges.push(\n        <Icon\n          icon={faCheckCircle}\n          color=\"green\"\n          key={id + 'ready'}\n          data-tip=\"Ready to Canvass\"\n        />\n      );\n    else\n      badges.push(\n        <Icon\n          icon={faExclamationTriangle}\n          color=\"red\"\n          key={id + 'notready'}\n          data-tip=\"Not ready to volunteer, check assignments\"\n        />\n      );\n    if (!props.volunteer.locationstr)\n      badges.push(\n        <Icon\n          icon={faHome}\n          color=\"red\"\n          key={id + 'addr'}\n          data-tip=\"Home Address is not set\"\n        />\n      );\n  }\n\n  return badges;\n};\n\nfunction extract_addr(addr) {\n  let arr = addr.split(', ');\n  if (arr.length < 4) return addr;\n  arr.shift();\n  return arr.join(', ');\n}\n","import React from 'react';\nimport ReactSelect from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './mapselect.css';\n\nexport class MapSelect extends React.Component {\n  state = {\n    checked: this.props.checked || false,\n    isMulti: this.props.isMulti || true,\n    value: this.props.value,\n    map1: { value: ',', label: 'delimited by comma' },\n    map2: { value: 0, label: '1st value' }\n  };\n\n  _handleCheck = () => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      {\n        checked: !this.state.checked,\n        isMulti: !this.state.isMulti,\n        value: '',\n        map1: { value: ',', label: 'delimited by comma' },\n        map2: { value: 0, label: '1st value' }\n      },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setValue = value => {\n    const { updateFormats, label } = this.props;\n    return this.setState(\n      { value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  _setMapValue = (prop, value) => {\n    const { updateFormats, label } = this.props;\n    this.setState(\n      { [prop]: value },\n      () => updateFormats && updateFormats(label, this.state)\n    );\n  };\n\n  render() {\n    const {\n      label = '',\n      options = [],\n      checkbox = false,\n      dimensions: { width, labelWidth } = { width: 450, labelWidth: 150 }\n    } = this.props;\n    const { checked, isMulti, value, map1, map2 } = this.state;\n\n    return (\n      <div className=\"mapselect\">\n        <div style={{ width: labelWidth }}>{label}:</div>{' '}\n        <div style={{ width }}>\n          <ReactSelect\n            className=\"map-select-input\"\n            value={value}\n            options={options}\n            onChange={e => this._setValue(e)}\n            isMulti={isMulti}\n            placeholder=\"None\"\n          />\n        </div>\n        {checkbox ? this._renderCheckbox({ checked }) : ''}\n        {checked\n          ? this._renderMapOptions({\n            map1,\n            map2,\n            value\n          })\n          : ''}\n      </div>\n    );\n  }\n\n  _renderCheckbox = ({ checked }) => (\n    <Checkbox\n      className=\"ck-bx\"\n      onChange={() => this._handleCheck()}\n      onClick={() => this._handleCheck()}\n      value=\"ack\"\n      color=\"primary\"\n      checked={checked}\n    />\n  );\n\n  _renderMapOptions = ({ map1 = '', map2 = '', value = '' }) => (\n    <React.Fragment>\n      <div style={{ width: 160 }}>\n        <ReactSelect\n          className=\"map-option-1\"\n          onChange={e => this._setMapValue('map1', e)}\n          value={map1}\n          options={[\n            { value: ',', label: 'delimited by comma' },\n            { value: ' ', label: 'delimited by space' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n      <div style={{ width: 150 }}>\n        <ReactSelect\n          className=\"map-option-2\"\n          onChange={e => this._setMapValue('map2', e)}\n          value={map2}\n          options={[\n            { value: 0, label: '1st value' },\n            { value: 1, label: '2nd value' },\n            { value: 2, label: 'last value' }\n          ]}\n          placeholder=\"None\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst specVal = (row, spec) => {\n  if (spec.func) {\n    if (spec.params) {\n      return spec.func(row[spec.params[0]], row[spec.params[1]]);\n    } else {\n      return spec.func(row);\n    }\n  } else {\n    return row[spec.params[0]];\n  }\n};\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nclass TablePaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n  TablePaginationActions,\n);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass PaperTable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spec: this.props.spec,\n      rows: this.props.rows,\n      page: 0, // ?? this.props.pageNum,\n      rowsPerPage: 5, // ?? this.props.perPage,\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { rows, spec, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {spec.map(spec => (\n                  <Tooltip title={spec.tooltip}>\n                    <TableCell>{spec.header}</TableCell>\n                  </Tooltip>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.id}>\n                  {spec.map(s => {\n                    if (s.funcItemTooltip && s.funcItemTooltip(row)) {\n                      return (\n                        <Tooltip title={row.error}>\n                          <TableCell>{specVal(row, s)}</TableCell>\n                        </Tooltip>\n                      );\n                    } else {\n                      return (<TableCell>{specVal(row, s)}</TableCell>);\n                    }\n                  })}\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPaperTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PaperTable);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Check } from '@material-ui/icons';\nimport './progressbar.css';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n};\n\nconst ProgressBar = ({ title, completed }) => (\n  <div\n    className={`progress-bar progress-bar-${\n      completed === 0 ? 'hidden' : 'shown'\n    }`}\n  >\n    {completed === true ? (\n      <div className=\"progress-complete\">\n        <Check />\n        Complete\n      </div>\n    ) : (\n      <React.Fragment>\n        <h3 style={{ marginTop: '5px' }}>{title}</h3>\n        <LinearProgress\n          style={{ width: '90%', paddingTop: '10px' }}\n          variant=\"determinate\"\n          value={completed}\n        />\n      </React.Fragment>\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(ProgressBar);\n","import { MapSelect } from './MapSelect';\nimport PaperTable from './PaperTable';\nimport ProgressBar from './ProgressBar';\n\nexport { MapSelect, PaperTable, ProgressBar };\n","import React, { Component } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {\n  _fetch,\n  notify_error,\n  Icon\n} from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      cb_version: null,\n      neo4j_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    try {\n      data = await _fetch(global, '/dashboard');\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({\n      cb_version: data.version ? data.version : 'unknown',\n      neo4j_version: data.neo4j_version ? data.neo4j_version : 'unknown',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}\n        </div>\n        <div>\n          {this.state.cb_version ? (\n            'HelloVoterAPI version ' + this.state.cb_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          {this.state.neo4j_version ? (\n            'Neo4j version ' + this.state.neo4j_version\n          ) : (\n            <CircularProgress height={15} />\n          )}\n        </div>\n        <div>\n          &copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not\n          for any candidate or political party.\n        </div>\n        <div>\n          This program is free software; refer to our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/blob/master/LICENSE\"\n          >\n            License\n          </a>{' '}\n          for more details.\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://twitter.com/OurVoiceUSA\"\n          >\n            <Icon icon={faTwitter} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.facebook.com/OurVoiceUsa\"\n          >\n            <Icon icon={faFacebook} /> @OurVoiceUSA\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ourvoiceusa.org/\"\n          >\n            <Icon icon={faGlobe} /> ourvoiceusa.org\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport Select from 'react-select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {PieChart, Pie, Cell, Legend, Label} from 'recharts';\n\nimport {\n  _fetch,\n  _loadTurfs,\n  _loadAttributes,\n  _searchStringify,\n  RootLoader,\n} from '../common.js';\n\nimport { CardTurf } from './Turf';\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      turfOptions: [],\n      selectedTurfOption: null,\n      data_breakdown: [],\n      animation: true,\n    };\n  }\n\n  componentDidMount() {\n    this._init();\n  }\n\n  _init = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true });\n\n    let turfOptions = [];\n    let turfs = await _loadTurfs(global);\n    let attributeOptions = [];\n    let attributes = await _loadAttributes(global);\n\n    turfs.forEach(t => {\n      turfOptions.push({\n        value: _searchStringify(t),\n        id: t.id,\n        label: <CardTurf global={global} key={t.id} turf={t} refer={this} />,\n      });\n    });\n\n    attributes.forEach(a => {\n      attributeOptions.push({\n        value: _searchStringify(a),\n        id: a.id,\n        label: a.name,\n      });\n    });\n\n    this.setState({loading: false, attributeOptions, turfOptions});\n  }\n\n  doQuery = async () => {\n    const { global } = this.state;\n\n    if (!this.state.selectedAttributeOption) return;\n\n    this.setState({ loading: true });\n\n    let data_breakdown = [];\n\n    let uri = '/analytics/list?turfId=';\n    if (this.state.selectedTurfOption && this.state.selectedTurfOption.id) uri += this.state.selectedTurfOption.id;\n    if (this.state.selectedAttributeOption && this.state.selectedAttributeOption.id) uri += '&aId='+this.state.selectedAttributeOption.id;\n    if (this.state.include_null) uri += '&include_null=true';\n\n    let data = await _fetch(global, uri);\n\n    if (data && data.data) {\n      data.data.map(d => data_breakdown.push({name: (d[0]?d[0]:'No Data'), value: d[1]}));\n    }\n\n    // if data has more than 6 elements, combine everything after 6 into the 6th and mark it \"other\"\n    while (data_breakdown.length > 6) {\n      data_breakdown[5] = {name: \"Other\", value: data_breakdown[5].value+data_breakdown.pop().value};\n    }\n\n    this.setState({ data_breakdown, loading: false });\n  }\n\n  handleTurfChange = selectedTurfOption => {\n    if (!selectedTurfOption) selectedTurfOption = [];\n    this.setState({selectedTurfOption}, () => this.doQuery());\n  }\n\n  handleAttributeChange = selectedAttributeOption => {\n    if (!selectedAttributeOption) selectedAttributeOption = [];\n    this.setState({selectedAttributeOption}, () => this.doQuery());\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={() => this.doQuery()}>\n        <h3>Analytics</h3>\n        <Select\n          value={this.state.selectedAttributeOption}\n          onChange={this.handleAttributeChange}\n          options={this.state.attributeOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select an attribute to query data for\"\n        />\n        <br />\n        <Select\n          value={this.state.selectedTurfOption}\n          onChange={this.handleTurfChange}\n          options={this.state.turfOptions}\n          isMulti={false}\n          isSearchable={true}\n          placeholder=\"Select a turf to include only records within that turf\"\n        />\n        <Checkbox color=\"primary\" checked={this.state.include_null} onChange={(e, c) => {\n          this.setState({include_null: c}, async () => await this.doQuery());\n        }} /> Include records with \"No Data\"\n        {this.state.data_breakdown.length?\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={this.state.data_breakdown}\n            dataKey=\"value\"\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              this.state.data_breakdown.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={['red','blue','yellow','green','grey'][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              {this.state.selectedAttributeOption.label}\n            </Label>\n          </Pie>\n        </PieChart>\n        :\n        <h3>No Data</h3>\n        }\n      </RootLoader>\n    );\n  }\n}\n","import React  from 'react';\nimport { sortableElement } from 'react-sortable-hoc';\nimport { faShieldAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '../../common.js';\n\nimport './Dashboard.css';\n\nconst _CardDashboard = props => (\n  <div style={{ display: 'flex', padding: '10px' }} className=\"dashboard-card\">\n    <div style={{ padding: '5px 10px' }}>\n      <Icon\n        style={{ width: 50, height: 50, color: 'gray' }}\n        icon={props.icon ? props.icon : faShieldAlt}\n      />\n    </div>\n    <div style={{ flex: 1, overflow: 'auto' }}>\n      <h3>\n        {props.name}: {props.stat}\n      </h3>\n    </div>\n  </div>\n);\n\nexport const CardDashboard = sortableElement(_CardDashboard);\n","import React from 'react';\nimport { sortableContainer } from 'react-sortable-hoc';\nimport { CardDashboard } from './CardDashboard';\n\nimport './Dashboard.css';\n\nconst _Cards = props => {\n  return (\n    <div className=\"dashboard-container\">\n      {props.dash.map((item, index) => {\n        const card = props.cards[item] || {};\n        return (\n          <CardDashboard\n            key={card.name}\n            name={card.name}\n            stat={card.stat}\n            icon={card.icon}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Cards = sortableContainer(_Cards);\n","import Dashboard from './Dashboard';\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport NumberFormat from 'react-number-format';\nimport filesize from 'filesize';\n\nimport Modal from '@material-ui/core/Modal';\n\nimport {\n  faUser,\n  faUsers,\n  faMap,\n  faClipboard,\n  faChartPie,\n  faMapMarkerAlt,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport {\n  _fetch,\n  notify_error,\n  RootLoader\n} from '../../common.js';\n\nimport { Cards } from './Cards';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    const dash = (localStorage.getItem('dash') || 'vol,team,turf,form,attributes,addr,dbsz').split(',');\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      noAdmins: false,\n      data: {},\n      cards: [],\n      dash,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const dash = arrayMove(this.state.dash, oldIndex, newIndex);\n    localStorage.setItem('dash', dash.map(n => n));\n    this.setState(() => ({\n      dash,\n    }));\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let data = {};\n    let cards = [];\n\n    this.setState({ loading: true });\n\n    try {\n      data = await _fetch(global, '/dashboard');\n\n      if (data.admins === 0) this.setState({noAdmins: true});\n\n      cards = {\n        vol: {\n          name: 'Volunteers',\n          stat: data.volunteers,\n          icon: faUser,\n        },\n        team: {\n          name: 'Teams',\n          stat: data.teams,\n          icon: faUsers,\n        },\n        turf: {\n          name: 'Turfs',\n          stat: data.turfs,\n          icon: faMap,\n        },\n        form: {\n          name: 'Forms',\n          stat: data.forms,\n          icon: faClipboard,\n        },\n        attributes: {\n          name: 'Attributes',\n          stat: data.attributes,\n          icon: faChartPie,\n        },\n        addr: {\n          name: 'Addresses',\n          stat: (\n            <NumberFormat\n              value={data.addresses}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n          ),\n          icon: faMapMarkerAlt,\n        },\n        dbsz: {\n          name: 'Database size',\n          stat: filesize(data.dbsize ? data.dbsize : 0, {\n            round: 1,\n          }),\n          icon: faDatabase,\n        },\n      };\n    } catch (e) {\n      notify_error(e, 'Unable to load dashboard info.');\n    }\n\n    this.setState({ cards, data, loading: false });\n  }\n\n  render() {\n    const { global } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        <Cards\n          state={this.state}\n          axis=\"xy\"\n          onSortEnd={this.onSortEnd}\n          cards={this.state.cards}\n          dash={this.state.dash}\n        />\n\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.noAdmins}\n          onClose={() => this.setState({ noAdmins: false })}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              top: 100,\n              left: 200,\n              right: 200,\n              backgroundColor: 'white',\n              padding: 40\n            }}\n          >\n            Welcome! Looks like you're new here. By default, users have zero permissions\n            when they sign in. To make yourself an admin and gain full access to the UI,\n            run the follow command from the shell:\n            <br />\n            <br />\n            <pre>npm run makeadmin -- {global.getUserProp(\"id\")}</pre>\n          </div>\n        </Modal>\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport EdiText from 'react-editext';\nimport Select from 'react-select';\nimport t from 'tcomb-form';\nimport {ucFirst} from 'ourvoiceusa-sdk-js';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\n\nimport {\n  _loadAttribute,\n  _loadAttributes,\n  _searchStringify,\n  _fetch,\n  _handleSelectChange,\n  notify_error,\n  notify_success,\n  RootLoader,\n  Icon,\n  DialogSaving,\n} from '../common.js';\n\nfunction value2select(val) {\n  return {value: val, label: ucFirst(val)};\n}\n\nconst typeOptions = [\n  value2select(\"string\"),\n  value2select(\"boolean\"),\n  value2select(\"number\"),\n  value2select(\"textbox\"),\n];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let perPage = localStorage.getItem('attributesperpage');\n    if (!perPage) perPage = 5;\n\n    this.state = {\n      global: props.global,\n      loading: true,\n      attributes: [],\n      search: '',\n      perPage: perPage,\n      pageNum: 1,\n      menuDelete: false,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Attribute Name',\n          error: 'You must enter an Attribute name.',\n        },\n      },\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n    this.handlePageNumChange = this.handlePageNumChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  handleClickDelete = () => {\n    this.setState({ menuDelete: true });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ menuDelete: false });\n  };\n\n  onChangeAttribute(addAttributeForm) {\n    this.setState({ addAttributeForm });\n  }\n\n  handlePageNumChange(obj) {\n    localStorage.setItem('attributesperpage', obj.value);\n    this.setState({ pageNum: 1, perPage: obj.value });\n  }\n\n  onTypeSearch(event) {\n    this.setState({\n      search: event.target.value.toLowerCase(),\n      pageNum: 1,\n    });\n  }\n\n  _deleteAttribute = async (id) => {\n    const { global } = this.state;\n\n    this.setState({ saving: true, menuDelete: false });\n    try {\n      await _fetch(global, '/attribute/delete', 'POST', {\n        id: id,\n      });\n      notify_success('Attribute has been deleted.');\n    } catch (e) {\n      notify_error(e, 'Unable to delete Attributes.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _createAttribute = async () => {\n    const { global } = this.state;\n\n    let json = this.addAttributeForm.getValue();\n    if (json === null) return;\n\n    this.setState({ saving: true });\n\n    try {\n      await _fetch(global, '/attribute/create', 'POST', {\n        name: json.name,\n      });\n      notify_success('Attribute has been created.');\n    } catch (e) {\n      notify_error(e, 'Unable to create Attribute.');\n    }\n    this.setState({ saving: false });\n\n    window.location.href = '/HelloVoterHQ/#/attributes/';\n    this._loadData();\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    this.setState({ loading: true, search: '' });\n    let attributes = [];\n\n    try {\n      attributes = await _loadAttributes(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load volunteers.');\n    }\n\n    this.setState({ loading: false, attributes });\n  };\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  render() {\n    const { global } = this.state;\n\n    let list = [];\n\n    this.state.attributes.forEach(t => {\n      if (this.state.search && !_searchStringify(t).includes(this.state.search))\n        return;\n      list.push(t);\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route\n            exact={true}\n            path=\"/attributes/\"\n            render={() => (\n              <RootLoader flag={this.state.loading} func={this._loadData}>\n                Search:{' '}\n                <input\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.onTypeSearch}\n                  data-tip=\"Search by name, email, location, or admin\"\n                />\n                <ListAttributes global={global} refer={this} attributes={list} />\n              </RootLoader>\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/attributes/add\"\n            render={() => (\n              <div>\n                <t.form.Form\n                  ref={ref => (this.addattributeForm = ref)}\n                  type={this.formServerItems}\n                  options={this.formServerOptions}\n                  onChange={e => this.onChangeAttribute(e)}\n                  value={this.state.addattributeForm}\n                />\n                <button onClick={() => this._createAttribute()}>Submit</button>\n              </div>\n            )}\n          />\n          <Route\n            path=\"/attributes/view/:id\"\n            render={props => (\n              <div>\n                <CardAttribute\n                  global={global}\n                  key={props.match.params.id}\n                  id={props.match.params.id}\n                  edit={true}\n                  refer={this}\n                />\n                <br />\n                <br />\n                <br />\n                <Button onClick={this.handleClickDelete} color=\"primary\">\n                  Delete attribute\n                </Button>\n                <Dialog\n                  open={this.state.menuDelete}\n                  onClose={this.handleCloseDelete}\n                  aria-labelledby=\"alert-dialog-title\"\n                  aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">\n                    Are you sure you wish to delete this attribute?\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button\n                      onClick={this.handleCloseDelete}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      No\n                    </Button>\n                    <Button\n                      onClick={() => this._deleteAttribute(props.match.params.id)}\n                      color=\"primary\"\n                    >\n                      Yes\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </div>\n            )}\n          />\n          <DialogSaving flag={this.state.saving} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst ListAttributes = props => {\n  const perPage = props.refer.state.perPage;\n  let paginate = <div />;\n  let list = [];\n\n  props.attributes.forEach((t, idx) => {\n    let tp = Math.floor(idx / perPage) + 1;\n    if (tp !== props.refer.state.pageNum) return;\n    list.push(<CardAttribute global={props.global} key={t.id} attribute={t} refer={props.refer} />);\n  });\n\n  paginate = (\n    <div style={{ display: 'flex' }}>\n      <ReactPaginate\n        previousLabel={'previous'}\n        nextLabel={'next'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={props.attributes.length / perPage}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={8}\n        onPageChange={props.refer.handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <div style={{ width: 75 }}>\n        # Per Page{' '}\n        <Select\n          value={{ value: perPage, label: perPage }}\n          onChange={props.refer.handlePageNumChange}\n          options={[\n            { value: 5, label: 5 },\n            { value: 10, label: 10 },\n            { value: 25, label: 25 },\n            { value: 50, label: 50 },\n            { value: 100, label: 100 },\n          ]}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <h3>\n        {props.type}Attributes ({props.attributes.length})\n      </h3>\n      <Link to={'/attributes/add'}>\n        <button>Add attribute</button>\n      </Link>\n      {paginate}\n      {list}\n      {paginate}\n    </div>\n  );\n};\n\nexport class CardAttribute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      attribute: this.props.attribute,\n      selectedMembersOption: [],\n    };\n\n    this.onSaveName = this.onSaveName.bind(this);\n    this.onSaveType = this.onSaveType.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.attribute) this._loadData();\n  }\n\n  handleMembersChange = async selectedMembersOption => {\n    const { global } = this.state;\n\n    if (!selectedMembersOption) selectedMembersOption = [];\n    this.props.refer.setState({ saving: true });\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let attribute = {};\n    this.setState({ loading: true });\n\n    try {\n      [\n        attribute,\n      ] = await Promise.all([\n        _loadAttribute(global, this.props.id),\n      ]);\n    } catch (e) {\n      notify_error(e, 'Unable to load attribute info.');\n      return this.setState({ loading: false });\n    }\n\n    this.setState({\n      attribute,\n      loading: false,\n    });\n  };\n\n  onSave = async (type, val) => {\n    const { global, attribute } = this.state;\n\n    this.setState({ saving: true });\n\n    let obj = {id: attribute.id};\n    obj[type] = val;\n\n    try {\n      await _fetch(\n        global,\n        '/attribute/update',\n        'POST',\n        obj\n      );\n      notify_success('Attribute has been updated.');\n    } catch (e) {\n      notify_error(e, 'Unable to update Attribute.');\n    }\n\n    this._loadData();\n  }\n\n  onSaveName(val) {\n    this.onSave('name', val);\n  }\n\n  onSaveType(val) {\n    this.onSave('type', val);\n  }\n\n  render() {\n    const { attribute } = this.state;\n\n    if (!attribute || this.state.loading) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div>\n        <div style={{ display: 'flex', padding: '10px' }}>\n          <div style={{ flex: 1, overflow: 'auto', padding: '5px 10px' }}>\n            <PaperclipIcon />{' '}\n            {attribute.name}{' '}\n            {this.props.edit ? (\n              ''\n            ) : (\n              <Link to={'/attributes/view/' + attribute.id}>view</Link>\n            )}\n          </div>\n        </div>\n        {this.props.edit ? <CardAttributeFull attribute={attribute} onSaveName={this.onSaveName} onSaveType={this.onSaveType} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport const CardAttributeFull = ({attribute, onSaveName, onSaveType}) => (\n  <div>\n    <h1><EdiText type=\"text\" value={attribute.name} onSave={onSaveName} onSaveType={onSaveType} /></h1>\n    <Select\n      value={value2select(attribute.type)}\n      onChange={onSaveType}\n      options={typeOptions}\n      isMulti={false}\n      isSearchable={true}\n      placeholder=\"Select an attribute type\"\n    />\n    {JSON.stringify(attribute)}\n  </div>\n);\n","export const fields = [\n  'Unique Record ID',\n  'Street Address',\n  'Unit',\n  'City',\n  'State',\n  'Zip',\n  'Longitude',\n  'Latitude',\n  'Name',\n  'Party Affiliation'\n];\n","import { jobRuntime, jobNumber } from '../../common';\n\nexport const _pipe = (f, g) => (...args) => g(f(...args));\nexport const pipe = (...fns) => fns.reduce(_pipe);\n\nexport const PAPER_TABLE_SPEC = [\n  {\n    header: 'Import File',\n    tooltip: 'The file name of the imported file.',\n    params: ['filename'],\n  },\n  {\n    header: 'Upload Time',\n    tooltip:\n      \"The time it took the file to go from the uploader's computer to the server.\",\n    func: jobRuntime,\n    params: ['created', 'submitted'],\n  },\n  {\n    header: 'Queue Delay',\n    tooltip:\n      'The time this import had to wait in queue for other jobs to finish.',\n    func: jobRuntime,\n    params: ['submitted', 'parse_start'],\n  },\n  {\n    header: 'Parse time',\n    tooltip:\n      'The time it took to aggregate address, people, and attribute data into the database.',\n    func: jobRuntime,\n    params: ['parse_start', 'parse_end'],\n  },\n  {\n    header: 'Record Count',\n    tooltip: 'The number of unique records contained in the import file.',\n    func: jobNumber,\n    params: ['num_records'],\n  },\n  {\n    header: 'Geocode Time',\n    tooltip:\n      'The time it took the system to geocode the addresses in the import file.',\n    func: jobRuntime,\n    params: ['geocode_start', 'geocode_end'],\n  },\n  {\n    header: 'Dedupe Time',\n    tooltip:\n      'The time it took the system to identify and remove duplicates as a result of this import.',\n    func: jobRuntime,\n    params: ['dedupe_start', 'dedupe_end'],\n  },\n  {\n    header: 'Turf Index Time',\n    tooltip:\n      'The time it took the system to index each address to turfs it belongs to.',\n    func: jobRuntime,\n    params: ['turfadd_start', 'turfadd_end'],\n  },\n  {\n    header: 'Address Index Time',\n    tooltip:\n      'The time it took to add these addresses to the master database index.',\n    func: jobRuntime,\n    params: ['index_start', 'index_end'],\n  },\n  {\n    header: 'Total Time',\n    tooltip:\n      'The total time the import took from file upload start to complete finish.',\n    func: jobRuntime,\n    params: ['created', 'completed'],\n  },\n];\n","import React from 'react';\nimport map from 'lodash/map';\nimport { MapSelect } from '../Elements';\nimport { fields } from './constants';\nimport { pipe } from './utilities';\n\nexport class ImportMap extends React.Component {\n  state = {\n    data: this.props.data || [],\n    headers: this.props.headers || [],\n    fields: fields,\n    formats: {},\n    mapped: [],\n  };\n\n  formatHeaders = headers =>\n    headers.map(i => ({\n      value: i,\n      label: i,\n    }));\n\n  updateFormats = (field, obj) =>\n    this.setState({ formats: { ...this.state.formats, [field]: obj } }, () =>\n      this.updateMapped()\n    );\n\n  updateMapped = () =>\n    this.setState(\n      {\n        mapped: this.mapData(this.state) || [],\n      },\n      () => this.props.getMapped && this.props.getMapped(this.state.mapped)\n    );\n\n  mapData = ({ formats, fields }) => {\n    const { generateFormats, getAllIndexes, parseData } = this;\n    return pipe(\n      generateFormats,\n      getAllIndexes,\n      parseData\n    )(formats, fields);\n  };\n\n  generateFormats = (formats, fields) => {\n    return map(fields, item => {\n      if (formats[item]) {\n        return {\n          name: item,\n          format: formats[item],\n        };\n      }\n\n      return {\n        name: item,\n        format: null,\n      };\n    });\n  };\n\n  getAllIndexes = arr =>\n    map(arr, ({ name, format }) => {\n      if (format && Array.isArray(format.value)) {\n        const indexes = format.value.map(f =>\n          this.state.headers.findIndex(i => i === f.value)\n        );\n        return { name, format, indexes };\n      } else if (format) {\n        const indexes = this.state.headers.findIndex(\n          i => format.value && i === format.value.value\n        );\n        return {\n          name,\n          format,\n          indexes,\n        };\n      }\n\n      return { name, format, indexes: null };\n    });\n\n  parseData = arr => {\n    const { data } = this.state;\n    return map(data, item => {\n      return map(arr, ({ indexes, format }) => {\n        if (indexes && Array.isArray(indexes)) {\n          return indexes\n            .reduce((total, next) => `${total.trim()} ${item[next].trim()}`, '')\n            .trim();\n        } else if (indexes) {\n          return item[indexes]\n            ? item[indexes].split(format.map1.value)[format.map2.value]\n            : '';\n        }\n\n        return '';\n      });\n    });\n  };\n\n  render() {\n    const {\n      updateFormats = () => console.warn('Cannot find update format function.'),\n    } = this;\n    const { fields = [] } = this.props;\n    const { headers = [] } = this.state;\n    const options = this.formatHeaders(headers);\n\n    return (\n      <React.Fragment>\n        {fields.map(field => (\n          <MapSelect\n            key={field}\n            label={field}\n            updateFormats={updateFormats}\n            options={options}\n            checkbox\n            isMulti\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nexport const PreviewItem = ({ data, title }) => (\n  <div className=\"records-wrapper\">\n    {data.map(item => (\n      <div\n        className={`preview-item  ${title ? ' preview-title' : ''}`}\n        key={`${item}${Math.random() * 3444}`}\n      >\n        <div style={{ width: 250 }}>{item !== '' ? item : 'NULL'}</div>\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { PreviewItem } from './PreviewItem';\nimport './importPreview.css';\n\nfunction createRandomKey() {\n  return parseInt(Math.random() * 1000);\n}\n\nexport const ImportPreview = ({ titles, records }) => (\n  <React.Fragment>\n    <h3>Sample Records based on selection</h3>\n    <div key={`${titles}${records}`} style={{ display: 'flex' }}>\n      <PreviewItem key={`${titles}${createRandomKey()}`} data={titles} title />\n      {records.map(record => (\n        <PreviewItem key={`${record}${createRandomKey()}`} data={record} />\n      ))}\n    </div>\n  </React.Fragment>\n);\n","import React, { Component } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { faFileCsv } from '@fortawesome/free-solid-svg-icons';\nimport { ImportPreview, ImportMap } from './';\nimport { PaperTable, ProgressBar } from '../Elements';\nimport { fields } from './constants';\nimport { PAPER_TABLE_SPEC } from './utilities';\n\nimport {\n  notify_error,\n  notify_success,\n  _fetch,\n  _loadImports,\n  Icon,\n  RootLoader,\n} from '../../common';\n\nconst defaultState = {\n  loading: false,\n  sending: false,\n  data: null,\n  headers: [],\n  mapped: [],\n  perPage: localStorage.getItem('importsperpage') || 5,\n  pageNum: 1,\n  submitting: false,\n  completed: 0,\n};\n\nexport default class ImportData extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      global: props.global,\n      imports: [],\n      ...defaultState,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  // #region import methods\n  preProcessError(e) {\n    notify_error(e, 'Failed to preprocess the import file.');\n  }\n\n  preProcess = async (data, filename) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({ data, headers, filename });\n  };\n\n  sendData = async () => {\n    const { global, mapped: data, filename } = this.state;\n    const total = data.length;\n\n    this.setState({sending: true, completed: 1});\n    await _fetch(global, '/import/begin', 'POST', {\n      filename: filename,\n      attributes: ['Name', 'Party Affiliation'],\n    });\n\n    let seps = ['#', 'apt', 'unit', 'ste', 'spc'];\n    let sepm = seps.map((i) => i = new RegExp('.* '+i+' ', 'i'));\n    let sepr = seps.map((i) => i = new RegExp(' '+i+' .*', 'i'));\n\n    while (data.length) {\n      let arr = [];\n      for (let i = 0; i < 1000; i++) {\n        if (data.length) {\n          let row = data.pop();\n          // make a reasonable attempt to break Unit from street address\n          if (!row[3]) {\n            for (let e in seps) {\n              if (row[2].match(sepm[e])) {\n                row[3] = row[2].replace(sepm[e], \"\").trim(); // extract unit from address\n                row[2] = row[2].replace(sepr[e], \"\").trim(); // remove unit from address\n                break;\n              }\n            }\n          }\n          arr.push(row);\n        }\n      }\n\n      await _fetch(global, '/import/add', 'POST', {\n        filename: filename,\n        data: arr,\n      });\n      const percentage = Math.ceil(((total - data.length) / total) * 100);\n      this.setState({ completed: percentage });\n    }\n    await _fetch(global, '/import/end', 'POST', {\n      filename: filename,\n    });\n\n    this.setState({ completed: true });\n    notify_success('Upload complete! An import job has been queued and will process soon.');\n\n    setTimeout(() => {\n      this.setState({ sending: false});\n      this._loadData();\n    }, 3000);\n\n  };\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let imports = [];\n    this.setState({ loading: true });\n    try {\n      imports = await _loadImports(global);\n    } catch (e) {\n      notify_error(e, 'Unable to load import data.');\n    }\n    this.setState({ loading: false, imports }, () => {\n      this._resetState();\n    });\n  };\n\n  _resetState = () => this.setState({ ...defaultState });\n\n  getMapped = mapped => this.setState({ mapped });\n\n  handlePageClick = data => {\n    this.setState({ pageNum: data.selected + 1 });\n  };\n\n  // #endregion\n\n  /*\n  Items not yet shown in the table:\n  \"num_people\"\n  \"num_addresses\"\n  \"geocode_success\"\n  \"goecode_fail\"\n  \"dupes_address\"\n  */\n\n  // TODO:: load data after completed & reset component state.\n\n  render() {\n    const {\n      mapped = [],\n      data = [],\n      headers = [],\n      perPage,\n      pageNum,\n      imports,\n      loading,\n      completed,\n    } = this.state;\n    if (loading) return <CircularProgress />;\n\n    if (!headers.length)\n      return (\n        <div>\n          <CSVReader\n            label=\"Data Importa\"\n            onError={this.preProcessError}\n            onFileLoaded={this.preProcess}\n          />\n          <br />\n          <h3>Select a CSV file to get to the next menu!</h3>\n          <br />\n          <br />\n          <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n            <PaperTable\n              perPage={perPage}\n              pageNum={pageNum}\n              spec={PAPER_TABLE_SPEC}\n              rows={imports}\n              handlePageClick={this.handlePageClick}\n              handlePageNumChange={this.handlePageNumChange}\n            />\n          </RootLoader>\n        </div>\n      );\n\n    return (\n      <div>\n        <ProgressBar title=\"Uploading import file...\" completed={completed} />\n        <div style={{ display: 'flex' }}>\n          <h3>Import Data</h3> &nbsp;&nbsp;&nbsp;\n          <Icon icon={faFileCsv} size=\"3x\" />\n        </div>\n        <ImportMap\n          headers={headers}\n          fields={fields}\n          data={data}\n          getMapped={this.getMapped}\n        />\n        <Divider variant=\"middle\" />\n        <br />\n        <Button\n          disabled={this.state.sending}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => this.sendData()}\n        >\n          Import\n        </Button>\n        <br />\n        <br />\n        <Divider variant=\"middle\" />\n        <ImportPreview\n          key={this}\n          titles={fields}\n          records={mapped.slice(0, 3)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { PaperTable } from './Elements';\n\nimport {\n  _fetch,\n  tsToStr,\n  jobRuntime,\n  RootLoader\n} from '../common.js';\n\nconst jobStatus = job => {\n  if (typeof job.success === 'boolean') {\n    if (job.success) return 'successful';\n    else return 'failed';\n  } else {\n    if (job.started) return 'running';\n    else return 'waiting';\n  }\n};\n\nconst showErrorIfError = job => {\n  if (job.error) return job.error;\n  else return null;\n};\n\nconst taskObjFromQueue = (type, obj) => {\n  switch (type) {\n    case 'ImportFile':\n      return 'Import file ' + obj.filename;\n    case 'Turf':\n      return 'Turf ' + obj.name;\n    default:\n      return 'Unknown';\n  }\n};\n\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: [],\n      global: props.global,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    const { global } = this.state;\n\n    let rows = [];\n\n    this.setState({ loading: true });\n\n    let obj = await _fetch(global, '/queue/list');\n    if (obj.data) {\n      rows = obj.data.map(r => {\n        let q = r[0];\n        q.type = r[1];\n        q.obj = r[2];\n        return q;\n      });\n    }\n    this.setState({ rows, loading: false });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n        <PaperTable\n          spec={[\n            {\n              header: 'Enqueu Time',\n              tooltip: 'The date/time that this job entered the queue.',\n              func: tsToStr,\n              params: ['created'],\n            },\n            {\n              header: 'Task',\n              tooltip: 'The operation that this queue manages.',\n              params: ['task'],\n            },\n            {\n              header: 'Queue Delay',\n              tooltip:\n                'The time this task had to wait in queue for other jobs to finish.',\n              func: jobRuntime,\n              params: ['created', 'started'],\n            },\n            {\n              header: 'Runtime',\n              tooltip: 'The time it took for this task to complete.',\n              func: jobRuntime,\n              params: ['started', 'completed'],\n            },\n            {\n              header: 'Status',\n              tooltip: 'The status of this particular task.',\n              func: jobStatus,\n              funcItemTooltip: showErrorIfError,\n            },\n            {\n              header: 'Task Reference',\n              tooltip: 'The particular item that queued task was processing.',\n              func: taskObjFromQueue,\n              params: ['type', 'obj'],\n            },\n          ]}\n          rows={rows}\n        />\n      </RootLoader>\n    );\n  }\n}\n","const drawerWidth = 175;\nexport const styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  chartContainer: {\n    marginLeft: -22\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Loading extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classes: props.classes,\n    };\n\n  }\n\n  render() {\n    const { classes } = this.state;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            HelloVoterHQ is loading...\n          </Typography>\n          <CircularProgress height={15} />\n        </Paper>\n        <br />\n        <center>Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA</center>\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Loading);\n","import React, { Component } from 'react';\n\nimport Loading from './Loading';\n\nimport Select from 'react-select';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport styles from '../app.styles';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let loginOptions = [{label: 'Organization ID', value: 'org'}, {label: '3rd Party Server', value: 'server'}];\n    if (process.env.NODE_ENV === 'development') loginOptions.unshift({label: 'LOCAL DEVELOPMENT', value: 'dev'});\n\n    let token;\n\n    try {\n      if (this.props.location.pathname.match(/\\/jwt\\//)) {\n        token = this.props.location.pathname.split('/').pop();\n      }\n    } catch(e) {\n      console.warn(e);\n    }\n\n    this.state = {\n      global: props.global,\n      dev: (process.env.NODE_ENV === 'development'), // default to true if development\n      classes: props.classes,\n      token: token,\n      selectedLoginOption: loginOptions[0],\n      loginOptions: loginOptions,\n    };\n\n  }\n\n  componentDidMount() {\n    const { token } = this.state;\n\n    if (token) {\n      localStorage.setItem('jwt', token);\n      setTimeout(() => {window.location.href = '/HelloVoterHQ/#/'}, 500);\n      setTimeout(() => {window.location.reload()}, 1500);\n    }\n  }\n\n  render() {\n    const { global, classes, token, loginOptions, selectedLoginOption } = this.state;\n\n    if (token) return (<Loading classes={classes} />);\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in to HelloVoterHQ\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => { e.preventDefault(); global.doSave(e, this.state.target); }} >\n            <Select\n              value={selectedLoginOption}\n              options={loginOptions}\n              onChange={selectedLoginOption => this.setState({selectedLoginOption})}\n            />\n            <LoginOption global={global} refer={this} />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({target: 'google'})}\n            >\n              Google Sign In\n            </Button>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => this.setState({target: 'facebook'})}\n              className={classes.submit}\n            >\n              Facebook Sign In\n            </Button>\n          </form>\n        </Paper>\n        <br />\n        <center>\n          Built with <span role=\"img\" aria-label=\"Love\">❤️</span> by Our Voice USA\n          <p />\n          Not for any candidate or political party.\n          <p />\n          Copyright (c) 2018, Our Voice USA. All rights reserved.\n          <p />\n          This program is free software; you can redistribute it and/or\n          modify it under the terms of the GNU Affero General Public License\n          as published by the Free Software Foundation; either version 3\n          of the License, or (at your option) any later version.\n        </center>\n      </main>\n    );\n  }\n}\n\nconst LoginOption = props => {\n  switch (props.refer.state.selectedLoginOption.value) {\n    case 'org':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Enter your Organization ID. Example: NCC1701</InputLabel>\n            <Input id=\"orgId\" name=\"orgId\" autoComplete=\"orgId\" autoFocus defaultValue={props.global.state.orgId} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that you have read and agreed to our terms of use.\"\n          />\n        </div>\n      );\n    case 'server':\n      return (\n        <div>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"domain\">Server Address</InputLabel>\n            <Input id=\"server\" name=\"server\" autoComplete=\"server\" autoFocus defaultValue={props.global.state.qserver} />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"ack\" color=\"primary\" required />}\n            label=\"By checking this box you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server's terms of use.\"\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst LogoutDialog = ({ menuLogout, handleCloseLogout, _logout }) => (\n  <Dialog\n    open={menuLogout}\n    onClose={handleCloseLogout}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      Are you sure you wish to logout?\n    </DialogTitle>\n    <DialogActions>\n      <Button onClick={handleCloseLogout} color=\"primary\" autoFocus>\n        No\n      </Button>\n      <Button onClick={() => _logout()} color=\"primary\">\n        Yes\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default LogoutDialog;\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\n\nexport const Header = ({\n  classes,\n  global,\n  open,\n  handleDrawerOpen,\n  getUserProp\n}) => (\n  <AppBar\n    position=\"absolute\"\n    className={classNames(classes.appBar, open && classes.appBarShift)}\n  >\n    <Toolbar disableGutters={!open} className={classes.toolbar}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"Open drawer\"\n        onClick={handleDrawerOpen}\n        className={classNames(\n          classes.menuButton,\n          open && classes.menuButtonHidden\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        component=\"h1\"\n        variant=\"h6\"\n        color=\"inherit\"\n        noWrap\n        className={classes.title}\n      >\n        <div style={{ margin: 10 }}>HelloVoterHQ {(global.state.orgId?'Organization ID: '+global.state.orgId:'@ '+global.state.server)}</div>\n      </Typography>\n      <Avatar\n        alt=\"Remy Sharp\"\n        src={getUserProp('avatar')}\n        className={classes.avatar}\n        onClick={() =>\n          (window.location.href =\n            '/HelloVoterHQ/#/volunteers/view/' + getUserProp('id'))\n        }\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MapIcon from '@material-ui/icons/Map';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport PaperclipIcon from '@material-ui/icons/AttachFile';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n//import SettingsIcon from '@material-ui/icons/Settings';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst MenuItems = ({ assignments, handleClickLogout }) => (\n  <Fragment>\n    <List>\n      <Link to={'/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n      </Link>\n      <Link to={'/volunteers/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Volunteers\" />\n        </ListItem>\n      </Link>\n      <Link to={'/teams/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Teams\" />\n        </ListItem>\n      </Link>\n      <Link to={'/turf/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <MapIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Turf\" />\n        </ListItem>\n      </Link>\n      <Link to={'/forms/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Forms\" />\n        </ListItem>\n      </Link>\n      {assignments.admin&&\n      <div>\n      <Link to={'/qrcodes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AspectRatioIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"QR Codes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/attributes/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PaperclipIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Attributes\" />\n        </ListItem>\n      </Link>\n      <Link to={'/map/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <NavigationIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Map\" />\n        </ListItem>\n      </Link>\n      <Link to={'/import/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <PresentToAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import Data\" />\n        </ListItem>\n      </Link>\n      <Link to={'/queue/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <WorkIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"System Queue\" />\n        </ListItem>\n      </Link>\n      <Link to={'/analytics/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Analytics\" />\n        </ListItem>\n      </Link>\n{/*\n      <Link to={'/settings/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </Link>\n*/}\n    </div>\n    }\n    </List>\n    <Divider />\n    <List>\n      <ListItem button onClick={handleClickLogout}>\n        <ListItemIcon>\n          <IndeterminateCheckBoxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n    <Divider />\n    <List>\n      <Link to={'/about/'}>\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBalanceIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About\" />\n        </ListItem>\n      </Link>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoter/tree/master/docs/\"\n      >\n        <ListItem button>\n          <ListItemIcon>\n            <HelpIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Help\" />\n        </ListItem>\n      </a>\n    </List>\n  </Fragment>\n);\n\nexport default MenuItems;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuItems from './MenuItems';\n\nexport const Sidebar = ({\n  classes,\n  open,\n  assignments,\n  handleClickLogout,\n  handleDrawerClose\n}) => (\n  <Drawer\n    variant=\"permanent\"\n    classes={{\n      paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose)\n    }}\n    open={open}\n  >\n    <div className={classes.toolbarIcon}>\n      <IconButton onClick={handleDrawerClose}>\n        <ChevronLeftIcon />\n      </IconButton>\n    </div>\n    <Divider />\n    <MenuItems assignments={assignments} handleClickLogout={handleClickLogout} />\n  </Drawer>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NoMatch = ({ location }) => (\n  <div>\n    <h1>OOOPS!!</h1>\n    <div>\n      We can't seem to find the page you're looking for:\n      <br />\n      <br />\n      <code>{location.pathname}</code>\n      <br />\n      <br />\n      If you feel this page is in error,{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/OurVoiceUSA/HelloVoterHQ/issues/new\"\n      >\n        report an issue\n      </a>{' '}\n      and the coders will take a look.\n    </div>\n  </div>\n);\n\nexport default NoMatch;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Dashboard,\n  Volunteers,\n  Teams,\n  Turf,\n  Forms,\n  QRCodes,\n  Attributes,\n  Map,\n  ImportData,\n  Queue,\n  Analytics,\n  Settings,\n  Login,\n  About\n} from '../components';\nimport NoMatch from './NoMatch';\n\n// <Routes />\n/*\n  Props\n  {\n    server: <server description>\n  }\n*/\nexport const Routes = ({ global }) => (\n  <Switch>\n    <Route exact={true} path=\"/\" render={() => <Dashboard global={global} />} />\n    <Route path=\"/jwt/\" render={props => <Login {...props} global={global} />} />\n    <Route path=\"/volunteers/\" render={() => <Volunteers global={global} />} />\n    <Route path=\"/teams/\" render={() => <Teams global={global} />} />\n    <Route path=\"/turf/\" render={() => <Turf global={global} />} />\n    <Route path=\"/forms/\" render={() => <Forms global={global} />} />\n    <Route path=\"/qrcodes/\" render={() => <QRCodes global={global} />} />\n    <Route path=\"/attributes/\" render={() => <Attributes global={global} />} />\n    <Route\n      path=\"/map/\"\n      render={() => <Map global={global} apiKey={global.state.google_maps_key} />}\n    />\n    <Route path=\"/import/\" render={() => <ImportData global={global} />} />\n    <Route path=\"/queue/\" render={() => <Queue global={global} />} />\n    <Route path=\"/analytics/\" render={() => <Analytics global={global} />} />\n    <Route path=\"/settings/\" render={() => <Settings global={global} />} />\n    <Route path=\"/about/\" render={() => <About global={global} />} />\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport jwt from 'jsonwebtoken';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport { Header, Sidebar, LogoutDialog, Login, Loading } from './components';\nimport Routes from './routes/Routes';\n\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport {\n  _fetch,\n  notify_error\n} from './common.js';\n\nimport styles from './app.styles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n    this.state = {\n      global: props.global,\n      assignments: {},\n      loading: true,\n      open: true,\n      menuLogout: false,\n      server: localStorage.getItem('server'),\n      token: localStorage.getItem('jwt'),\n      orgId: localStorage.getItem('orgId'),\n      qserver: v.server\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let { server, token, orgId } = this.state;\n\n    this.setState({loading: true});\n\n    // assume error unless proven otherwise\n    let hai = {error: true};\n\n    try {\n      if (server && token) {\n        hai = await this.singHello(server, jwt.decode(token)['id'].split(\":\")[0], token, orgId);\n      } else {\n        throw new Error(\"missing server or token\");\n      }\n\n      if (hai.error) {\n        throw new Error(\"hai error\")\n      }\n    } catch (e) {\n      // if we had a token, it was bad, clear everything\n      if (token && server) {\n        this.setState({server: null, token: null, orgId: null});\n        localStorage.clear();\n        console.warn(\"Cleaning localStorage\");\n      }\n      console.warn(e);\n    }\n\n    this.setState({\n      loading: false,\n      assignments: (hai.data?hai.data:{}),\n    }, () => this._loadKeys());\n\n  };\n\n  _loadKeys = async () => {\n    const { global } = this.state;\n\n    // don't load if already loaded\n    if (this.state.google_maps_key) return;\n    if (!this.state.server) return;\n\n    let data;\n\n    try {\n      data = await _fetch(global, '/google_maps_key');\n      if (!data) return;\n\n      // load google places API\n      var aScript = document.createElement('script');\n      aScript.type = 'text/javascript';\n      aScript.src =\n        'https://maps.googleapis.com/maps/api/js?key=' +\n        data.google_maps_key +\n        '&libraries=places';\n      document.head.appendChild(aScript);\n\n      this.setState({ google_maps_key: data.google_maps_key });\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  handleClickLogout = () => {\n    this.setState({ menuLogout: true });\n  };\n\n  handleCloseLogout = () => {\n    this.setState({ menuLogout: false });\n  };\n\n  onChange = connectForm => {\n    this.setState({ connectForm });\n  };\n\n  getUserProp = prop => {\n    let item;\n\n    if (!this.state.token) return null;\n\n    try {\n      item = jwt.decode(this.state.token)[prop];\n    } catch (e) {\n      notify_error(\n        e,\n        'Holy crap this error should never happen!! Better dust off that résumé...'\n      );\n      console.warn(e);\n    }\n    return item;\n  };\n\n  _logout = () => {\n    localStorage.clear();\n    this.setState({ menuLogout: false, server: null, token: null, orgId: null });\n  };\n\n  doSave = async (event, target) => {\n    let server;\n    let orgId;\n\n    if (event.target.orgId) {\n      orgId = event.target.orgId.value;\n      let place = orgId.substring(0,2).toLowerCase();\n      server = 'gotv-'+place+'.ourvoiceusa.org';\n    } else if (event.target.server) {\n      server = event.target.server.value;\n    } else {\n      server = window.location.host.replace(':3000',':8080');\n    }\n    await this.singHello(server, target, null, orgId);\n  };\n\n  singHello = async (server, target, token, orgId) => {\n    let res;\n\n    localStorage.setItem('server', server);\n    if (orgId) localStorage.setItem('orgId', orgId);\n    this.setState({server, orgId});\n\n    let https = true;\n    if (server.match(/:8080$/)) https = false;\n\n    try {\n      res = await fetch('http'+(https?'s':'')+'://' + server + '/HelloVoterHQ/'+(orgId?orgId+'/':'')+'api/v1/hello', {\n        method: 'POST',\n        headers: {\n          Authorization:\n            'Bearer ' +\n            (token ? token : (this.state.token ? this.state.token : 'of the one ring')),\n          'Content-Type': 'application/json'\n        },\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url)\n        return { error: true, msg: 'Missing required header.' };\n\n      switch (res.status) {\n      case 200:\n        break; // valid - break to proceed\n      case 400:\n        return {\n          error: true,\n          msg:\n              'The server didn\\'t understand the request sent from this device.'\n        };\n      case 401:\n        let sm = '';\n        if (target === 'google') sm = 'gm';\n        if (target === 'facebook') sm = 'fm';\n        setTimeout(() => {\n          window.location.href = sm_oauth_url + '/'+sm+'/?app=HelloVoterHQ'+(https?'':'&local=true');\n        }, 500);\n        return { error: false, flag: true };\n      case 403:\n        return {\n          error: true,\n          msg:\n              'We\\'re sorry, but your request to volunteer with this server has been rejected.'\n        };\n      default:\n        return { error: true, msg: 'Unknown error connecting to server.' };\n      }\n\n      let body = await res.json();\n\n      if (body.data.ready !== true)\n        return { error: false, msg: 'The server said: ' + body.msg, data: body.data };\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({ user: this.state.user });\n        return { error: false, flag: true, data: body.data };\n      }\n    } catch (e) {\n      console.warn('singHello: ' + e);\n      return {\n        error: true,\n        msg: 'Unable to make a connection to target server'\n      };\n    }\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let { assignments, server, token, loading } = this.state;\n\n    if (loading) return (\n      <Router>\n        <Route path=\"/\" render={props => <Loading {...props}  />} />\n      </Router>\n    );\n\n    if (!server || !token) return (\n      <Router>\n        <Route path=\"/\" render={props => <Login {...props} global={this} />} />\n      </Router>\n    );\n\n    return (\n      <Router>\n        <div className={classes.root}>\n          <ReactTooltip />\n          <CssBaseline />\n          <Header\n            open={this.state.open}\n            classes={classes}\n            global={this}\n            getUserProp={this.getUserProp}\n            handleDrawerOpen={this.handleDrawerOpen}\n          />\n          <Sidebar\n            assignments={assignments}\n            classes={classes}\n            open={this.state.open}\n            getUserProp={this.getUserProp}\n            handleClickLogout={this.handleClickLogout}\n            handleDrawerClose={this.handleDrawerClose}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <NotificationContainer />\n            <Routes global={this} />\n            <LogoutDialog\n              menuLogout={this.state.menuLogout}\n              handleCloseLogout={this.handleCloseLogout}\n              _logout={this._logout}\n            />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}