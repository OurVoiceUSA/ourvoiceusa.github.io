{"version":3,"sources":["lib/react-native.native.js","lib/colors.js","components/Layout.js","components/Type.native.js","components/Buttons.js","components/MainMenu.js","lib/consts.js","lib/SafariView.js","lib/storage.native.js","lib/geographies.js","lib/common.js","routes/canvassing/index.js","routes/About.js","routes/LoginScreen.js","routes/Dashboard.js","routes/PhoneBank.js","routes/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["YellowBox","ignoreWarnings","colors","alt","brand","primary","transparent","white","black","darkGrey","grey","midGrey","lightGrey","dividerGrey","bgGrey","inputBg","inputGrey","placeholder","Root","styled","SafeAreaView","Content","View","ViewFlex","Row","Space","ViewCenter","RegularText","Text","SemiBoldText","BoldText","Heading","MediumText","MediumStrongText","smallText","css","ButtonText","green","blue","MainButtonStyle","AltButtonStyle","Button","props","to","Platform","OS","style","textDecoration","component","ButtonNative","children","onPress","title","ButtonStyle","TouchableOpacity","MenuButton","refer","setMenuClose","bind","MainMenu","logout","URL_PRIVACY_POLICY","SafariView","get","key","a","AsyncStorage","getItem","set","val","setItem","del","removeItem","geographies","require","openURL","url","external","window","open","match","fromBottom","Linking","console","warn","_getApiToken","storage","jwt","api_base_uri","orgId","getEpoch","Math","floor","Date","getTime","flexDirection","alignItems","src","height","width","About","version","justifyContent","marginBottom","block","danger","LoginScreen","login","note","fontWeight","color","sm","ret","server","this","setState","loading","https","fetch","method","headers","Authorization","res","sm_oauth_url","Error","status","location","href","Dashboard","user","state","name","PhoneBank","_dataFetch","form","fetching","JSON","stringify","formId","id","body","json","error","person","callresult","donotcall","start","called","personId","phone","end","call","input","admin","flex","ActivityIndicator","party","extra_info","success","info","warning","Component","NoMatch","pathname","App","componentDidMount","token","split","pop","setToken","setTimeout","reload","addEventListener","handleOpenURL","getInitialURL","then","menuOpen","jwt_decode","m","setMenuOpen","log","menu","size","openMenuOffset","isOpen","bounceBackOnOverdraw","exact","path","Routes","render","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81fcc8e9.chunk.js","sourcesContent":["import {\n  ActivityIndicator, Linking, Platform, Text, TouchableOpacity, View,\n  YellowBox,\n} from 'react-native';\nimport styled, { css } from 'styled-components/native';\nimport SideMenu from 'react-native-side-menu';\n\nYellowBox.ignoreWarnings([\n  'SideMenu', 'SettingsPicker' // waiting for upstream fix to componentWillMount, etc\n]);\n\nexport {\n  ActivityIndicator, Linking, Platform, Text, TouchableOpacity, View,\n  SideMenu, styled, css\n};\n","export const colors = {\n  // primary colors\n  alt: \"#FF4E00\",\n  brand: \"#3F51B5\",\n  primary: \"#0099FF\",\n\n  // shades of greys\n  transparent: \"#FFFFFF00\",\n  white: \"#FFFFFF\",\n  black: \"#000000\",\n  darkGrey: \"#333333\",\n  grey: \"#666666\",\n  midGrey: \"#979797\",\n  lightGrey: \"#AAAAAA\",\n  dividerGrey: \"#CDCDCD\",\n  bgGrey: \"#F4F4F4\",\n  inputBg: \"#EFEDED\",\n  inputGrey: \"#ECECEC\",\n  placeholder: \"#706F71\",\n};\n","import { styled } from '../lib/react-native';\n\nimport { colors } from \"../lib/colors\";\n\nexport const Root = styled.SafeAreaView`\n  flex: 1;\n  background: ${colors.brand};\n`;\n\nexport const Content = styled.View`\n  flex: 1;\n  padding: 15px;\n  background: ${colors.white};\n`;\n\nexport const Spacer = styled.View`\n  flex: 1;\n`;\n\nexport const ViewFlex = Spacer;\n\nexport const Row = styled.View`\n  flex-direction: row;\n`;\n\nexport const Space = styled.View`\n  height: 15px;\n`;\n\nexport const ViewCenter = styled.View`\n  align-items: center;\n`;\n","import { styled, css } from '../lib/react-native';\n\nimport { colors } from '../lib/colors';\n\nexport const RegularText = styled.Text`\n  font-size: 14px;\n  line-height: 19px;\n`;\n\nexport const SemiBoldText = styled(RegularText)``;\n\nexport const BoldText = styled(RegularText)``;\n\nexport const ExtraBoldText = styled(RegularText)``;\n\nexport const Heading = styled(BoldText)`\n  color: ${colors.darkGrey};\n  font-size: 22px;\n  line-height: 35px;\n  text-align: center;\n`;\n\nexport const ScreenTitle = styled(BoldText)`\n  color: ${colors.darkGrey};\n  font-size: 18px;\n`;\n\nexport const TextButton = styled(SemiBoldText)`\n  color: ${colors.grey};\n  font-size: 15px;\n`;\n\nexport const MediumText = styled(RegularText)`\n  color: ${colors.grey};\n`;\n\nexport const MediumSemiStrongText = styled(SemiBoldText)`\n  color: ${colors.darkGrey};\n`;\n\nexport const MediumStrongText = styled(BoldText)`\n  color: ${colors.darkGrey};\n`;\n\nexport const SmallHeading = styled(BoldText)`\n  font-size: 16px;\n  line-height: 22px;\n  color: ${colors.darkGrey};\n`;\n\nconst smallText = css`\n  font-size: 13px;\n  line-height: 18px;\n  letter-spacing: -0.014px;\n  color: ${colors.grey};\n`;\n\nexport const SmallText = styled(RegularText)`\n  ${smallText}\n`;\n\nexport const SmallSemiStrongText = styled(SemiBoldText)`\n  ${smallText}\n  color: ${colors.darkGrey};\n`;\n\nexport const SmallStrongText = styled(BoldText)`\n  ${smallText}\n  color: ${colors.darkGrey};\n`;\n\nexport const Price = styled(MediumStrongText)`\n  color: ${colors.green};\n`;\n\nexport const Link = styled(MediumStrongText)`\n  color: ${colors.blue};\n`;\n\nexport const ButtonText = styled(MediumStrongText)`\n  color: ${colors.white};\n  font-weight: 700;\n`;\n","import React from 'react';\nimport { TouchableOpacity, Platform, styled } from '../lib/react-native';\n\nimport { ButtonText } from '../components/Type';\nimport { colors } from '../lib/colors';\nimport { Link } from '../lib/routing';\n\nconst MainButtonStyle = styled.View`\n  background: ${colors.primary},\n  padding: 10px;\n  margin: 5px;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nconst AltButtonStyle = styled.View`\n  background: ${colors.alt};\n  padding: 10px;\n  margin: 5px;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nexport const Button = (props) => {\n  if (props.to) {\n    if (Platform.OS === 'web') return (<Link to={props.to} style={{ textDecoration: 'none' }}><ButtonNative {...props} /></Link>);\n    else return (<Link component={ButtonNative} {...props} />);\n  }\n  return (<ButtonNative {...props} />);\n};\n\nconst ButtonNative = ({alt, children, onPress, title, to}) => {\n  const ButtonStyle = alt ? AltButtonStyle : MainButtonStyle;\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <ButtonStyle>\n        <ButtonText>{title ? title : children}</ButtonText>\n      </ButtonStyle>\n    </TouchableOpacity>\n  );\n}\n","import React from 'react';\n\nimport { Root, Content, Space } from '../components/Layout';\nimport { Button } from \"../components/Buttons\";\n\nimport * as Icon from '../lib/icons';\n\nconst MenuButton = (props) => (\n  <Button to={props.to} onPress={props.refer.setMenuClose.bind(props.refer)} {...props} />\n);\n\nexport const MainMenu = ({refer}) => {\n  return (\n    <Root>\n      <Content>\n        <MenuButton refer={refer} to=\"/\"><Icon.Dash />Dashboard</MenuButton>\n        <MenuButton refer={refer} to=\"/canvassing\"><Icon.Map />Canvassing</MenuButton>\n        <MenuButton refer={refer} to=\"/phonebank\"><Icon.Phone />Phone Banking</MenuButton>\n        <MenuButton refer={refer} to=\"/settings\"><Icon.Cog />Settings</MenuButton>\n        <Space />\n        <MenuButton refer={refer} to=\"/help\"><Icon.Question />Help</MenuButton>\n        <MenuButton refer={refer} to=\"/about\"><Icon.Info />About</MenuButton>\n        <MenuButton refer={refer} to=\"/rate\"><Icon.Rate />Give Feedback</MenuButton>\n        <Space />\n        <MenuButton refer={refer} to=\"/donate\"><Icon.Donate />Donate</MenuButton>\n        <Space />\n        <MenuButton refer={refer}\n          alt={true}\n          onPress={refer.logout.bind(refer)}>\n          Logout\n        </MenuButton>\n      </Content>\n    </Root>\n  );\n}\n","export const STORAGE_KEY_JWT = 'OV_JWT';\nexport const STORAGE_KEY_USERLOCAL = 'OV_USER';\nexport const STORAGE_KEY_DISCLOSURE = 'OV_TERMS_2019_11_20';\nexport const STORAGE_KEY_SETTINGS = 'OV_CANVASS_SETTINGS';\nexport const STORAGE_KEY_OLDFORMS = 'OV_CANVASS_FORMS';\nexport const STORAGE_KEY_RETRY = 'HV_RETRY_QUEUE';\nexport const STORAGE_KEY_SERVERS = 'HV_SERVERS';\nexport const URL_TERMS_OF_SERVICE = 'https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Terms-of-Service.md';\nexport const URL_PRIVACY_POLICY = 'https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Privacy-Policy.md';\nexport const URL_GUIDELINES = 'https://raw.githubusercontent.com/OurVoiceUSA/HelloVoter/master/docs/Canvassing-Guidelines.md';\nexport const URL_HELP = 'https://github.com/OurVoiceUSA/HelloVoter/blob/master/docs/Canvassing.md';\nexport const URL_APPLE_IOS = 'https://itunes.apple.com/us/app/our-voice-usa/id1275301651?ls=1&amp;mt=8';\nexport const URL_GOOGLE_PLAY = 'https://play.google.com/store/apps/details?id=org.ourvoiceinitiative.ourvoice';\n","const SafariView = {\n  show: () => {},\n  dismiss: () => {},\n};\n\nexport { SafariView };\n","import AsyncStorage from '@react-native-community/async-storage';\n\nexport async function get(key) {\n  try {\n    return await AsyncStorage.getItem(key);\n  } catch(e) {\n  }\n}\n\nexport async function set(key, val) {\n  try {\n    await AsyncStorage.setItem(key, val);\n  } catch (e) {\n  }\n}\n\nexport async function del(key) {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch (e) {\n  }\n}\n","\nexport var geographies = {};\n\ngeographies['ak'] = require('./ocd-division/country/us/state/ak/shape');\ngeographies['al'] = require('./ocd-division/country/us/state/al/shape');\ngeographies['ar'] = require('./ocd-division/country/us/state/ar/shape');\ngeographies['as'] = require('./ocd-division/country/us/state/as/shape');\ngeographies['az'] = require('./ocd-division/country/us/state/az/shape');\ngeographies['ca'] = require('./ocd-division/country/us/state/ca/shape');\ngeographies['co'] = require('./ocd-division/country/us/state/co/shape');\ngeographies['ct'] = require('./ocd-division/country/us/state/ct/shape');\ngeographies['dc'] = require('./ocd-division/country/us/state/dc/shape');\ngeographies['de'] = require('./ocd-division/country/us/state/de/shape');\ngeographies['fl'] = require('./ocd-division/country/us/state/fl/shape');\ngeographies['ga'] = require('./ocd-division/country/us/state/ga/shape');\ngeographies['du'] = require('./ocd-division/country/us/state/gu/shape');\ngeographies['hi'] = require('./ocd-division/country/us/state/hi/shape');\ngeographies['ia'] = require('./ocd-division/country/us/state/ia/shape');\ngeographies['id'] = require('./ocd-division/country/us/state/id/shape');\ngeographies['il'] = require('./ocd-division/country/us/state/il/shape');\ngeographies['in'] = require('./ocd-division/country/us/state/in/shape');\ngeographies['ks'] = require('./ocd-division/country/us/state/ks/shape');\ngeographies['ky'] = require('./ocd-division/country/us/state/ky/shape');\ngeographies['la'] = require('./ocd-division/country/us/state/la/shape');\ngeographies['ma'] = require('./ocd-division/country/us/state/ma/shape');\ngeographies['md'] = require('./ocd-division/country/us/state/md/shape');\ngeographies['me'] = require('./ocd-division/country/us/state/me/shape');\ngeographies['mi'] = require('./ocd-division/country/us/state/mi/shape');\ngeographies['mn'] = require('./ocd-division/country/us/state/mn/shape');\ngeographies['mo'] = require('./ocd-division/country/us/state/mo/shape');\ngeographies['mp'] = require('./ocd-division/country/us/state/mp/shape');\ngeographies['ms'] = require('./ocd-division/country/us/state/ms/shape');\ngeographies['mt'] = require('./ocd-division/country/us/state/mt/shape');\ngeographies['nc'] = require('./ocd-division/country/us/state/nc/shape');\ngeographies['nd'] = require('./ocd-division/country/us/state/nd/shape');\ngeographies['ne'] = require('./ocd-division/country/us/state/ne/shape');\ngeographies['nh'] = require('./ocd-division/country/us/state/nh/shape');\ngeographies['nj'] = require('./ocd-division/country/us/state/nj/shape');\ngeographies['nm'] = require('./ocd-division/country/us/state/nm/shape');\ngeographies['nv'] = require('./ocd-division/country/us/state/nv/shape');\ngeographies['ny'] = require('./ocd-division/country/us/state/ny/shape');\ngeographies['oh'] = require('./ocd-division/country/us/state/oh/shape');\ngeographies['ok'] = require('./ocd-division/country/us/state/ok/shape');\ngeographies['or'] = require('./ocd-division/country/us/state/or/shape');\ngeographies['pa'] = require('./ocd-division/country/us/state/pa/shape');\ngeographies['pr'] = require('./ocd-division/country/us/state/pr/shape');\ngeographies['ri'] = require('./ocd-division/country/us/state/ri/shape');\ngeographies['sc'] = require('./ocd-division/country/us/state/sc/shape');\ngeographies['sd'] = require('./ocd-division/country/us/state/sd/shape');\ngeographies['tn'] = require('./ocd-division/country/us/state/tn/shape');\ngeographies['tx'] = require('./ocd-division/country/us/state/tx/shape');\ngeographies['ut'] = require('./ocd-division/country/us/state/ut/shape');\ngeographies['va'] = require('./ocd-division/country/us/state/va/shape');\ngeographies['vi'] = require('./ocd-division/country/us/state/vi/shape');\ngeographies['vt'] = require('./ocd-division/country/us/state/vt/shape');\ngeographies['wa'] = require('./ocd-division/country/us/state/wa/shape');\ngeographies['wi'] = require('./ocd-division/country/us/state/wi/shape');\ngeographies['wv'] = require('./ocd-division/country/us/state/wv/shape');\ngeographies['wy'] = require('./ocd-division/country/us/state/wy/shape');\n","import React from 'react';\nimport { Platform, Linking, View, Text } from './react-native';\nimport pip from 'point-in-polygon';\nimport RBush from 'rbush';\n\nimport { geographies } from './geographies';\nimport { STORAGE_KEY_JWT } from './consts';\nimport { SafariView } from './SafariView';\nimport * as storage from './storage';\nimport rtree from './rtree.json';\n\nexport function localaddress() {\n  return (Platform.OS === 'android'?'10.0.2.2':'localhost');\n}\n\nexport async function openURL(url, external) {\n  if (Platform.OS === 'web') {\n    window.open(url, '_blank');\n    return true;\n  }\n  try {\n    // Use SafariView in-line to the app on iOS if it's an http URL\n    if (url.match(/^http/) && Platform.OS === 'ios' && !external) {\n      SafariView.show({\n        url: url,\n        fromBottom: true,\n      });\n    } else {\n      await Linking.openURL(url);\n    }\n    return true;\n  } catch (e) {\n    console.warn(e);\n  }\n  return false;\n}\n\nexport function openGitHub(repo) {\n  openURL('https://github.com/OurVoiceUSA/'+(repo?repo:''));\n}\n\nexport function openDonate() {\n  try {\n    Linking.openURL('https://www.patreon.com/join/hellovoter');\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\nexport async function _getApiToken() {\n  let jwt = await storage.get(STORAGE_KEY_JWT);\n  if (!jwt) return \"of the one ring\";\n  return jwt;\n}\n\nexport function api_base_uri(orgId) {\n  return '/'+(orgId?orgId+'/':'')+'api/v1';\n}\n\nexport function getEpoch() {\n  return Math.floor(new Date().getTime())\n}\n\nexport function ingeojson(json, lng, lat) {\n  switch (json.type) {\n    case \"Polygon\":\n      if (pip([lng, lat], json.coordinates[0])) {\n        return true;\n      }\n      return false;\n    case \"MultiPolygon\":\n      for (let p in json.coordinates) {\n        if (pip([lng, lat], json.coordinates[p][0])) {\n          return true;\n        }\n      }\n      return false;\n    default: return false;\n  }\n}\n\nexport function getUSState(myPosition) {\n  let state;\n  new RBush(9).fromJSON(rtree).search({\n    minX: myPosition.longitude,\n    minY: myPosition.latitude,\n    maxX: myPosition.longitude,\n    maxY: myPosition.latitude,\n  }).forEach(bb => {\n    let geo = geographies[bb.state];\n    if (geo.geography) geo = geo.geography;\n    if (ingeojson(geo, myPosition.longitude, myPosition.latitude))\n      state = bb.state.toUpperCase();\n  });\n  return state;\n}\n\nexport const makeTooltipContent = (text) => (\n  <View style={{paddingHorizontal: 24, paddingVertical: 8}}>\n    <Text>{text}</Text>\n  </View>\n);\n\nexport var sleep = m => new Promise(r => setTimeout(r, m));\n","import React from \"react\";\nimport { Text, View, TouchableOpacity } from '../../lib/react-native';\n\nimport { URL_APPLE_IOS, URL_GOOGLE_PLAY } from '../../lib/consts';\nimport { Root, Content } from '../../components/Layout';\nimport { openURL } from '../../lib/common';\n\nexport default ({refer}) => {\n  return (\n    <Root>\n      <Content>\n        <Text>For canvassing features, please download our mobile app:</Text>\n        <View style={{flexDirection: 'row', alignItems: 'center'}}>\n          <TouchableOpacity onPress={openURL.bind(refer, URL_GOOGLE_PLAY)}>\n            <img alt=\"Google Play Store\" src=\"https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png\" height=\"62\" width=\"158\" />\n          </TouchableOpacity>\n          <TouchableOpacity onPress={openURL.bind(refer, URL_APPLE_IOS)}>\n            <img alt=\"Apple Store\" src=\"https://developer.apple.com/app-store/marketing/guidelines/images/badge-download-on-the-app-store.svg\" height=\"43\" width=\"130\" />\n          </TouchableOpacity>\n        </View>\n      </Content>\n    </Root>\n  );\n};\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport { Text, View, Platform } from '../lib/react-native';\n\nimport { URL_TERMS_OF_SERVICE, URL_PRIVACY_POLICY, } from '../lib/consts';\nimport { ViewCenter, Space } from '../components/Layout';\nimport { openURL, openGitHub } from '../lib/common';\nimport { Button } from '../components/Buttons';\nimport { version } from '../../package.json';\n\nexport const About = props => (\n  <ViewCenter>\n    <Text>\n      HelloVoter Version {version}\n    </Text>\n    <Space />\n    <Text>Built with ❤️ by Our Voice USA</Text>\n    <Space />\n    <Text>Not for any candidate or political party.</Text>\n    <Space />\n    <Text>Copyright (c) 2020, Our Voice USA. All rights reserved.</Text>\n    <Space />\n    <Text style={{width: 350}}>\n      This program is free software; you can redistribute it and/or\n      modify it under the terms of the GNU Affero General Public License\n      as published by the Free Software Foundation; either version 3\n      of the License, or (at your option) any later version.\n    </Text>\n    <Space />\n      <View style={{flexDirection: 'row', justifyContent: 'center', marginBottom: 15}}>\n        <Button primary onPress={() => openURL(URL_TERMS_OF_SERVICE)}><Text>Terms of Service</Text></Button>\n        <Text>{'  '}</Text>\n        <Button primary onPress={() => openURL(URL_PRIVACY_POLICY)}><Text>Privacy Policy</Text></Button>\n      </View>\n      <Button block danger onPress={() => openGitHub('HelloVoter')}>\n      <Text>App Source Code</Text>\n      </Button>\n    <Space />\n    {Platform.OS === 'ios'&&\n    <Text>NOTE: Distribution on the iOS App Store means this specific copy of the app falls under the Apple Inc. Standard EULA.</Text>\n    }\n  </ViewCenter>\n);\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport { Platform, Text } from '../lib/react-native';\n\nimport { Root, Content, ViewCenter, Space } from '../components/Layout';\nimport { localaddress, openURL } from '../lib/common';\nimport { URL_PRIVACY_POLICY } from '../lib/consts';\nimport { Button } from '../components/Buttons';\nimport { Heading } from '../components/Type';\n\nexport const LoginScreen = ({ refer }) => (\n  <Root>\n    <Content>\n      <Heading>Welcome to Hello Voter!</Heading>\n      <ViewCenter>\n        <Button\n          title=\"Log in with Facebook\"\n          onPress={login.bind(refer, \"fm\")}\n        />\n        <Button\n          title=\"Log in with Google\"\n          onPress={login.bind(refer, \"gm\")}\n          alt={true}\n        />\n\n{/*\n        <View style={{flexDirection: 'row', justifyContent: 'center', marginBottom: 15}}>\n          <Icon name=\"facebook-official\" size={40} color=\"#3b5998\" style={{marginRight: 25}} onPress={openURL.bind(refer, 'https://m.facebook.com/OurVoiceUsa')} />\n          <Icon name=\"twitter\" size={40} color=\"#0084b4\" style={{marginRight: 25}} onPress={openURL.bind(refer, 'https://twitter.com/OurVoiceUsa')} />\n          <Icon name=\"youtube-play\" size={40} color=\"#ff0000\" style={{marginRight: 25}} onPress={openURL.bind(refer, 'https://www.youtube.com/channel/UCw5fpnK-IZVQ4IkYuapIbiw')} />\n          <Icon name=\"github\" size={40} style={{marginRight: 25}} onPress={() => openGitHub()} />\n          <Icon name=\"globe\" size={40} color=\"#008080\" onPress={openURL.bind(refer, 'https://ourvoiceusa.org/')} />\n        </View>\n*/}\n        <Space />\n        <Text>\n          We value your privacy! Read our <Text note style={{fontWeight: 'bold', color: 'blue'}} onPress={openURL.bind(refer, URL_PRIVACY_POLICY)}>privacy policy</Text> for details.\n        </Text>\n        <Space />\n        <Text>Built with ❤️ by Our Voice USA</Text>\n        <Space />\n        <Text>Not for any candidate or political party.</Text>\n        <Space />\n        <Text>Copyright (c) 2020, Our Voice USA. All rights reserved.</Text>\n        <Space />\n        <Text style={{width: 350}}>\n          This program is free software; you can redistribute it and/or\n          modify it under the terms of the GNU Affero General Public License\n          as published by the Free Software Foundation; either version 3\n          of the License, or (at your option) any later version.\n        </Text>\n      </ViewCenter>\n    </Content>\n  </Root>\n);\n\nexport async function login (sm) {\n  let ret = false;\n  let orgId\n  let token\n  let server = process.env.NODE_ENV === 'development' ? localaddress()+':8080' : 'gotv.ourvoiceusa.org';\n\n  this.setState({loading: true});\n\n  let https = true;\n  if (server.match(/:8080$/)) https = false;\n\n  try {\n    let res = await fetch('http'+(https?'s':'')+'://' + server + '/'+(orgId?orgId+'/':'')+'api/v1/hello', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + (token ? token : 'of the one ring'),\n        'Content-Type': 'application/json'\n      },\n    });\n\n    let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n    if (!sm_oauth_url) throw new Error(\"Missing required header.\");\n\n    switch (res.status) {\n    case 200: ret = true; break;\n    case 400: break; // TODO: rm jwt?\n    case 401:\n      if (Platform.OS === 'web') {\n        window.location.href = sm_oauth_url + '/'+sm+'/?app=hellovoter'+(https?'':'&local=true');\n      } else {\n        openURL(sm_oauth_url+'/'+sm)\n      }\n      break;\n    default: break;\n    }\n  } catch (e) {\n  }\n\n  return ret;\n}\n","import React from 'react';\nimport { View } from '../lib/react-native';\n\nimport { ViewCenter, ViewFlex, Row, Space } from '../components/Layout';\nimport { Heading, MediumText } from '../components/Type';\nimport { Button } from '../components/Buttons';\n\nexport const Dashboard = ({ refer }) => {\n  const { user } = refer.state;\n\n  return (\n    <View>\n      <Heading>Welcome, {user.name}</Heading>\n      <Space />\n      <ViewCenter>\n        <MediumText>You've knocked on 14 doors.</MediumText>\n        <MediumText>You've sent 18 postcards.</MediumText>\n        <MediumText>You've made 35 phone calls.</MediumText>\n      </ViewCenter>\n      <ViewFlex />\n      <Heading>What do you want to do?</Heading>\n      <Row>\n        <ViewFlex>\n          <Button to=\"/phonebank\">\n            Phone Banking\n          </Button>\n          <Button>\n            Post Cards\n          </Button>\n        </ViewFlex>\n        <ViewFlex>\n          <Button to=\"/canvassing\">\n            Canvassing\n          </Button>\n          <Button>\n            Your Reps\n          </Button>\n        </ViewFlex>\n      </Row>\n    </View>\n  );\n};\n","/* eslint-disable no-mixed-operators */\nimport React, { Component } from 'react';\nimport { ActivityIndicator, Text, View } from '../lib/react-native';\n\nimport { _getApiToken, api_base_uri, openURL, getEpoch } from '../lib/common';\nimport { Button } from '../components/Buttons';\n\nexport class PhoneBank extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      refer: props.refer,\n      server: 'demo.ourvoiceusa.org',//props.server,\n      orgId: null,//props.orgId,\n      admin: false,//props.admin,\n      form: {\n        id: \"9fa67e4c-bb75-412c-ac52-e358071ea756\",\n      },//props.form,\n      fetching: false,\n      person: {},\n      called: false,\n    };\n  }\n\n  componentDidMount() {\n    this._dataFetch();\n  }\n\n  _dataFetch = async () => {\n    const { form, server, orgId } = this.state;\n\n    this.setState({fetching: true});\n\n    try {\n      let https = true;\n      if (server.match(/:8080/)) https = false;\n      let res = await fetch('http'+(https?'s':'')+'://'+server+api_base_uri(orgId)+'/poc/phone/tocall', {\n        method: 'POST',\n        body: JSON.stringify({\n          formId: form.id,\n        }),\n        headers: {\n          'Authorization': 'Bearer '+await _getApiToken(),\n          'Content-Type': 'application/json',\n        },\n      });\n\n      let json = await res.json();\n\n      if (res.status !== 200 || json.error === true) {\n        if (res.status >= 400 && res.status < 500) return;// this.props.navigation.goBack(); // TODO: byeFelicia()\n        throw new Error(\"Sync error\");\n      }\n\n      this.setState({person: json});\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({fetching: false});\n  }\n\n  callresult = async (status, donotcall) => {\n    const { start, person, form, server, orgId } = this.state;\n\n    this.setState({fetching: true, called: false});\n\n    try {\n      let https = true;\n      if (server.match(/:8080/)) https = false;\n      let res = await fetch('http'+(https?'s':'')+'://'+server+api_base_uri(orgId)+'/poc/phone/callresult', {\n        method: 'POST',\n        body: JSON.stringify({\n          formId: form.id,\n          personId: person.id,\n          phone: person.phone,\n          donotcall,\n          status,\n          start,\n          end: getEpoch(),\n        }),\n        headers: {\n          'Authorization': 'Bearer '+await _getApiToken(),\n          'Content-Type': 'application/json',\n        },\n      });\n\n      let json = await res.json();\n\n      if (res.status !== 200 || json.error === true) {\n        if (res.status >= 400 && res.status < 500) return;// this.props.navigation.goBack(); // TODO: byeFelicia()\n        throw new Error(\"Sync error\");\n      }\n\n      this.setState({person: json});\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this._dataFetch();\n  }\n\n  call = async (input) => {\n    await openURL('tel:+1'+input);\n    this.setState({called: true, start: getEpoch()});\n  }\n\n  render() {\n    const { admin, called, fetching, form, person } = this.state;\n\n    if (fetching) return (\n        <View style={{flex: 1, alignItems: 'center'}}>\n          <Text>Loading Data...</Text>\n          <ActivityIndicator />\n        </View>\n      );\n\n    if (person && !person.phone) return (\n      <View style={{flex: 1, alignItems: 'center'}}>\n        <Text></Text>\n        <Text>No Phone Numbers Available</Text>\n        <Text></Text>\n        <Text></Text>\n        {(admin)&&\n        <Text>There are no phone numbers available to you based on your assignments. Either all numbers have been dialed for this form, or there are no phone numbers in the system. To import data, use a web browser to login to https://apps.ourvoiceusa.org/HelloVoterHQ/</Text>\n        ||\n        <Text>Sorry, there aren't any phone numbers available to you based on your assignments. Please contact your administrator.</Text>\n        }\n      </View>\n    );\n\n    return (\n      <View>\n        <View style={{flex: 1, alignItems: 'center'}}>\n          <Text>{form.name}</Text>\n        </View>\n        <Text></Text>\n        <Text>Tap the call button below to call this person:</Text>\n        <Text></Text>\n        <Text>Name: {person.name}</Text>\n        <Text></Text>\n        {(person.party)&&\n        <View>\n          <Text>Party Affiliation: {person.party}</Text>\n          <Text></Text>\n        </View>\n        }\n        {(person.extra_info)&&\n        <View>\n          <Text>{person.extra_info}</Text>\n          <Text></Text>\n        </View>\n        }\n        <Text>Phone Number: {person.phone}</Text>\n        <Text></Text>\n        {(called)&&\n        <View>\n          <Text></Text>\n          <View style={{flex: 1, alignItems: 'center'}}>\n            <Text>How did it go?</Text>\n          </View>\n          <Text></Text>\n          <Text></Text>\n          <Button block success onPress={() => this.callresult(1, false)}>\n            <Text>It went well!</Text>\n          </Button>\n          <Text></Text>\n          <Text></Text>\n          <Button block info onPress={() => this.callresult(2, false)}>\n            <Text>It didn't go well</Text>\n          </Button>\n          <Text></Text>\n          <Text></Text>\n          <Button block warning onPress={() => this.callresult(0, false)}>\n            <Text>No answer</Text>\n          </Button>\n          <Text></Text>\n          <Text></Text>\n          <Button block primary onPress={() => this.callresult(3, false)}>\n            <Text>Wrong number</Text>\n          </Button>\n          <Text></Text>\n          <Text></Text>\n          <Button block danger onPress={() => this.callresult(2, true)}>\n            <Text>Do not call</Text>\n          </Button>\n        </View>\n        ||\n        <View>\n          <Button block primary onPress={() => this.call(person.phone)}>\n            <Text>Call</Text>\n          </Button>\n          <Text></Text>\n          <Text></Text>\n          <Button block warning>\n            <Text>I'm Done</Text>\n          </Button>\n        </View>\n        }\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport { Text, View } from '../lib/react-native';\n\nimport { Button } from \"../components/Buttons\";\n\nexport const NoMatch = ({ location }) => (\n  <View>\n    <Text>OOOPS!!</Text>\n    <Text></Text>\n    <Text>We can't seem to find the screen you're looking for:</Text>\n    <Text></Text>\n    <Text>{location.pathname}</Text>\n    <Text></Text>\n    <Button to=\"/\" title=\"Back to Dashboard\" />\n  </View>\n);\n","import React, { Component } from 'react';\nimport {\n  ActivityIndicator, Linking, Platform, Text, TouchableOpacity, SideMenu,\n} from './lib/react-native';\nimport jwt_decode from 'jwt-decode';\n\nimport { Root, Content, Space, ViewCenter } from './components/Layout';\nimport { Router, Switch, Route } from './lib/routing';\nimport { MainMenu } from './components/MainMenu';\nimport { STORAGE_KEY_JWT } from './lib/consts';\nimport { SafariView } from './lib/SafariView';\nimport * as storage from './lib/storage';\nimport * as Icon from './lib/icons';\nimport * as Routes from './routes';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      token: null,\n      user: null,\n      menuOpen: false,\n    };\n\n    // warn non-devs about the danger of the console\n    if (process.env.NODE_ENV !== 'development')\n      console.log(\n        '%cWARNING: This is a developer console! If you were told to open this and copy/paste something, and you are not a javascript developer, it is a scam and entering info here could give them access to your account!',\n        'background: red; color: yellow; font-size: 45px'\n      );\n  }\n\n  componentDidMount = async () => {\n    let token;\n\n    if (Platform.OS === 'web') {\n      if (window.location.href.match(/\\/jwt\\//)) {\n        token = window.location.href.split('/').pop();\n        if (token) await this.setToken(token);\n        setTimeout(() => {window.location.href = '/hellovoter/#/'}, 500);\n        setTimeout(() => {window.location.reload()}, 1500);\n        return;\n      }\n    } else {\n      // Add event listener to handle OAuthLogin:// URLs\n      Linking.addEventListener('url', this.handleOpenURL);\n      // Launched from an external URL\n      Linking.getInitialURL().then((url) => {\n        if (url) this.handleOpenURL({ url });\n      });\n    }\n\n    token = await storage.get(STORAGE_KEY_JWT);\n\n    if (token) this.setToken(token);\n\n    this.setState({loading: false});\n  }\n\n  logout = async () => {\n    await storage.del(STORAGE_KEY_JWT);\n    this.setState({user: null, token: null, menuOpen: false});\n  }\n\n  setToken = async (token) => {\n    try {\n      let user = jwt_decode(token);\n      await storage.set(STORAGE_KEY_JWT, token);\n      this.setState({token, user});\n    } catch (e) {\n      this.setState({token: null, user: null});\n      storage.del(STORAGE_KEY_JWT);\n    }\n  }\n\n  handleOpenURL = async ({ url }) => {\n    // Extract jwt token out of the URL\n    const m = url.match(/jwt=([^#]+)/);\n\n    if (m) await this.setToken(m[1]);\n\n    SafariView.dismiss();\n\n    this.setState({loading: false});\n  }\n\n  setMenuOpen = () => {\n    this.setState({menuOpen: true})\n  }\n\n  setMenuClose = () => {\n    this.setState({menuOpen: false})\n  }\n\n  render() {\n    const { loading, menuOpen, user } = this.state;\n\n    const menu = (<MainMenu refer={this} />);\n\n    if (loading) return (\n      <Root>\n        <Content>\n          <ViewCenter>\n            <Text>Loading HelloVoter...</Text>\n            <Space />\n            <ActivityIndicator size=\"large\" />\n          </ViewCenter>\n        </Content>\n      </Root>\n    );\n    if (!user) return (<Router><Route path=\"/\" render={() => <Routes.LoginScreen refer={this} />} /></Router>);\n\n    return (\n      <Router>\n        <SideMenu menu={menu} openMenuOffset={200} isOpen={menuOpen} bounceBackOnOverdraw={false}>\n        <Root>\n          <Content>\n            <TouchableOpacity onPress={this.setMenuOpen}>\n              <Icon.Menu size={30} />\n            </TouchableOpacity>\n              <Switch>\n                <Route exact={true} path=\"/\">\n                  <Routes.Dashboard refer={this} />\n                </Route>\n                <Route path=\"/canvassing\">\n                  <Routes.Canvassing refer={this} />\n                </Route>\n                <Route path=\"/phonebank\">\n                  <Routes.PhoneBank refer={this} />\n                </Route>\n                <Route path=\"/about\">\n                  <Routes.About refer={this} />\n                </Route>\n                <Route component={Routes.NoMatch} />\n              </Switch>\n            </Content>\n          </Root>\n        </SideMenu>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}