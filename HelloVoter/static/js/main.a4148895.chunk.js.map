{"version":3,"sources":["common.js","components/Dashboard.js","components/Canvassers.js","components/Teams.js","components/Turf.js","components/Forms.js","components/Map.js","components/ImportData.js","components/Analytics.js","components/Settings.js","components/Jwt.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["TimeAgo","locale","en","us_states","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","Root","props","react_default","a","createElement","Object","assign","style","display","Sidebar","width","height","overlow","background","SidebarItem","whiteSpace","textOverflow","overflow","padding","Main","flex","Icon","index_es","Loader","react_loader_spinner_default","type","RootLoader","flag","common_Loader","common_Icon","icon","faSync","color","onClick","func","children","CardCanvasser","timeAgo","es_default","src","canvasser","avatar","loader","unloader","faUser","name","edit","Link","to","id","refer","setState","thisCanvasser","admin","faCrown","location","format","Date","last_seen","locked","_lockCanvasser","_loadCanvassers","_x","_x2","_loadCanvassers2","apply","this","arguments","_callee","teamName","canvassers","call","res","data","regenerator_default","wrap","_context","prev","next","loading","fetch","server","headers","Authorization","jwt","Content-Type","sent","json","t0","console","warn","abrupt","stop","CardTurf","faStreetView","turf","thisTurf","_loadTurf","_x3","_x4","_loadTurf2","_callee2","_context2","CardForm","faClipboard","form","thisForm","_loadForms","_x5","_x6","_loadForms2","_callee3","forms","uri","_context3","_loadAddresses","_x7","_loadAddresses2","_callee4","addresses","_context4","method","body","JSON","stringify","nodes","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","_loadData","asyncToGenerator","mark","state","common_RootLoader","Component","componentDidMount","assertThisInitialized","t1","t2","_ref3","window","href","_loadSingle","c","pathname","split","pop","_this2","active","denied","forEach","push","common_CardCanvasser","key","HashRouter","Route","exact","path","render","length","email","phone","handleMembersChange","selectedMembersOption","handleTurfChange","selectedTurfOption","handleFormChange","selectedFormOption","_saveTeam","saving","thisTeam","map","_ref2","cId","turfName","value","fId","_deleteTeam","_loadTeams","_createTeam","addTeamForm","getValue","_callee5","teams","memberOptions","turfOptions","formOptions","_context5","label","t","common_CardTurf","f","common_CardForm","formServerItems","struct","String","formServerOptions","fields","error","Teams_Team","team","main_default","Form","ref","options","onChange","e","onChangeTeam","react_select_esm","isMulti","isSearchable","placeholder","Team","faUsers","_callee6","_context6","handleDrawChange","selectedDrawOption","handleStateChange","selectedStateOption","handleTypeChange","selectedTypeOption","handleDistrictChange","selectedDistrictOption","_deleteTurf","_createTurf","obj","geometry","addTurfForm","Error","selectedTypeFetch","dist","objs","districtOptions","o","includes","val","replace","_showDistrictOption","drawOptions","stateOptions","typeOptions","keys","k","onChangeTurf","onMenuClose","_showSubmitButton","Modal","setAppElement","document","getElementById","customStyles","content","top","left","right","bottom","marginRight","transform","FTYPE","enums","TEXTBOX","Number","Boolean","SAND","addItem","help","premade","FullName","optional","Phone","Email","RegisteredToVote","PartyAffiliation","_createForm","formName","addFormForm","trim","match","questions","questions_order","order","parse","mainForm","customForm","customFormItems","bind","openModal","closeModal","doAddCustom","_this$state","_this$state2","splice","indexOf","forceUpdate","onChangeForm","margin","faPlusCircle","field","marginLeft","required","inputTypeToReadable","faTimesCircle","react_modal_lib_default","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","_Component","turfs","d","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","inherits","createClass","polygons","isGeolocationAvailable","isGeolocationEnabled","coords","access","lng","longitude","lat","latitude","geojson2polygons","p","google_maps_react_dist","google","zoom","center","idx","title","address","join","position","latlng","paths","strokeColor","strokeWeight","fillColor","fillOpacity","visible","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","HEADER","address1","address2","city","zip","preProcess","_ref","shift","onHeadersSubmit","evt","preventDefault","setTimeout","FormOptions","h","maybe","FormSchema","onSubmit","className","target","rel","react_csv_reader_default","onError","preProcessError","onFileLoaded","data01","v","data02","renderLabelContent","percent","x","y","midAngle","concat","textAnchor","toFixed","animation","PieChart","Legend","Pie","dataKey","cx","cy","startAngle","endAngle","outerRadius","entry","index","Cell","fill","Label","LabelList","innerRadius","paddingAngle","isAnimationActive","jwt_decode","localStorage","setItem","es_Route","Redirect","cb_version","version","process","faTwitter","faFacebook","faGlobe","google_maps_key","doSave","ret","refs","ack","singHello","msg","text","cancelable","sm_oauth_url","get","status","ready","dbx","user","queryString","search","getItem","connectForm","subtype","s","removeItem","common_Root","common_Sidebar","getName","common_SidebarItem","faColumns","faMap","faFileUpload","faChartPie","faCog","faSignOutAlt","_logout","faAward","faGithub","common_Main","Dashboard_App","Canvassers_App","Teams_App","Turf_App","Forms_App","Map","ImportData_App","Analytics_App","Settings_App","Jwt_App","About_App","align","hostname","ReactDOM","src_App","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4148895.chunk.js","sourcesContent":["import React from 'react';\nimport LoaderSpinner from 'react-loader-spinner';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync, faUser, faCrown, faStreetView, faClipboard } from '@fortawesome/free-solid-svg-icons';\n\nimport Img from 'react-image';\nimport { Link } from 'react-router-dom';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport const us_states = {\n    \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AS\": \"American Samoa\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"DC\": \"District Of Columbia\",\n    \"FM\": \"Federated States Of Micronesia\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"GU\": \"Guam\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MH\": \"Marshall Islands\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PW\": \"Palau\",\n    \"PA\": \"Pennsylvania\",\n    \"PR\": \"Puerto Rico\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VI\": \"Virgin Islands\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\"\n};\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled) return {access: false};\n  if (props.coords) return {access: true, lng: props.coords.longitude, lat: props.coords.latitude};\n  return {access: true};\n}\n\nexport const Root = (props) => (\n  <div style={{display: 'flex'}} {...props}/>\n)\n\nexport const Sidebar = (props) => (\n  <div style={{width: '22vw', height: '100vh', overlow: 'auto', background: '#eee'}} {...props}/>\n)\n\nexport const SidebarItem = (props) => (\n  <div style={{whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden', padding: '5px 10px'}} {...props}/>\n)\n\nexport const Main = (props) => (\n  <div style={{flex: 1, height: '100vh', overflow: 'auto'}}>\n    <div style={{padding: '20px'}} {...props}/>\n  </div>\n)\n\nexport const Icon = (props) => (\n  <FontAwesomeIcon style={{width: 25}} {...props} />\n)\n\nexport const Loader = (props) => (\n  <LoaderSpinner type=\"ThreeDots\" {...props} />\n)\n\nexport const RootLoader = (props) => {\n  if (props.flag) return (<Loader />);\n  else return (\n    <div>\n      <Icon icon={faSync} color=\"green\" onClick={props.func} />\n      <div>{props.children}</div>\n    </div>\n  );\n}\n\nexport const CardCanvasser = (props) => {\n  const timeAgo = new TimeAgo('en-US');\n  return (\n    <div style={{display: 'flex', padding: '10px'}}>\n      <div style={{padding: '5px 10px'}}>\n        <Img width={50} src={props.canvasser.avatar} loader={<Loader width={50} />} unloader={<Icon style={{width: 50, height: 50, color: \"gray\"}} icon={faUser} />} />\n      </div>\n      <div style={{flex: 1, overflow: 'auto'}}>\n        Name: {props.canvasser.name} {(props.edit?'':(<Link to={'/canvassers/'+props.canvasser.id} onClick={() => props.refer.setState({thisCanvasser: props.canvasser})}>view profile</Link>))} {(props.canvasser.admin?<Icon icon={faCrown} color=\"gold\" />:'')}<br />\n        Location: {(props.canvasser.location?props.canvasser.location:'N/A')} <br />\n        Last Login: {timeAgo.format(new Date(props.canvasser.last_seen-30000))}\n      </div>\n      <br />\n      {props.edit && props.canvasser.locked?(<button onClick={() => props.refer._lockCanvasser(props.canvasser, false)}>Restore Access</button>):''}\n      {props.edit && !props.canvasser.locked?(<button onClick={() => props.refer._lockCanvasser(props.canvasser, true)}>Deny Access</button>):''}\n    </div>\n  );\n}\n\nexport async function _loadCanvassers(refer, teamName) {\n  let canvassers = [];\n\n  refer.setState({loading: true})\n\n  try {\n    let call = 'canvasser/list';\n    if (teamName) call = 'team/members/list?teamName='+teamName;\n\n    let res = await fetch('https://'+refer.props.server+'/canvass/v1/'+call, {\n      headers: {\n        'Authorization': 'Bearer '+(refer.props.jwt?refer.props.jwt:\"of the one ring\"),\n        'Content-Type': 'application/json',\n      },\n    });\n    let data = await res.json();\n    canvassers = (data.data?data.data:[]);\n  } catch (e) {\n    console.warn(e);\n  }\n\n  refer.setState({loading: false});\n\n  return canvassers;\n}\n\nexport const CardTurf = (props) => (\n  <div>\n    <Icon icon={faStreetView} /> {props.turf.name} (<Link to={'/turf/view/'+props.turf.name} onClick={() => {\n      props.refer.setState({thisTurf: props.turf})\n    }}>view</Link>)<br />\n  <hr />\n  </div>\n)\n\nexport async function _loadTurf(refer, teamName) {\n  let turf = [];\n\n  refer.setState({loading: true})\n\n  try {\n    let call = 'turf/list';\n    if (teamName) call = 'team/turf/list?teamName='+teamName;\n    let res = await fetch('https://'+refer.props.server+'/canvass/v1/'+call, {\n      headers: {\n        'Authorization': 'Bearer '+(refer.props.jwt?refer.props.jwt:\"of the one ring\"),\n        'Content-Type': 'application/json',\n      },\n    });\n    let data = await res.json();\n    turf = (data.data?data.data:[]);\n  } catch (e) {\n    console.warn(e);\n  }\n\n  refer.setState({loading: false});\n\n  return turf;\n}\n\nexport const CardForm = (props) => (\n  <div>\n    <Icon icon={faClipboard} /> {props.form.name} (<Link to={'/forms/edit/'+props.form.id} onClick={() => {\n      props.refer.setState({thisForm: props.form})\n    }}>view</Link>)<br />\n  <hr />\n  </div>\n)\n\nexport async function _loadForms(refer, teamName) {\n  let forms = [];\n\n  refer.setState({loading: true})\n\n  try {\n    let uri;\n\n    if (teamName) uri = 'team/form/list?teamName='+teamName;\n    else uri = 'form/list';\n\n    let res = await fetch('https://'+refer.props.server+'/canvass/v1/'+uri, {\n      headers: {\n        'Authorization': 'Bearer '+(refer.props.jwt?refer.props.jwt:\"of the one ring\"),\n        'Content-Type': 'application/json',\n      },\n    });\n    let data = await res.json();\n    forms = (data.data?data.data:[]);\n  } catch (e) {\n    console.warn(e);\n  }\n\n  refer.setState({loading: false});\n\n  return forms;\n}\n\nexport async function _loadAddresses(refer) {\n  let addresses = {};\n  try {\n    let res = await fetch('https://'+refer.props.server+'/canvass/v1/sync', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer '+(refer.props.jwt?refer.props.jwt:\"of the one ring\"),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({nodes: {}}),\n    });\n    addresses = await res.json();\n  } catch (e) {\n    console.warn(e)\n  }\n  return addresses;\n}\n","import React, { Component } from 'react';\n\nimport { RootLoader } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let data = {};\n\n    this.setState({loading: true})\n\n    try {\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/dashboard', {\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n      });\n\n      data = await res.json();\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({data: data, loading: false});\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        {JSON.stringify(this.state.data)}\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport { RootLoader, CardCanvasser, _loadCanvassers } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      canvassers: [],\n      thisCanvasser: {},\n    };\n\n  }\n\n  componentDidMount = async () => {\n    this._loadCanvassers();\n  }\n\n  _loadCanvassers = async () => {\n    this.setState({canvassers: await _loadCanvassers(this)});\n  }\n\n  _lockCanvasser = async (canvasser, flag) => {\n\n    try {\n      await fetch('https://'+this.props.server+'/canvass/v1/canvasser/'+(flag?'lock':'unlock'), {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({id: canvasser.id}),\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this._loadCanvassers();\n    window.location.href = \"/HelloVoter/#/canvassers/\";\n  }\n\n  _loadSingle = async () => {\n    let c = {};\n\n    this.setState({loading: true})\n\n    try {\n      let id = this.props.location.pathname.split('/').pop();\n\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/canvasser/get?id='+id, {\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n      });\n      let data = await res.json();\n      c = (data.data?data.data:{});\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({loading: false, thisCanvasser: c});\n  }\n\n  render() {\n\n    let active = [];\n    let denied = [];\n\n    this.state.canvassers.forEach(c => {\n      if (c.locked)\n        denied.push(<CardCanvasser key={c.id} canvasser={c} refer={this} />)\n      else\n        active.push(<CardCanvasser key={c.id} canvasser={c} refer={this} />)\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/canvassers/\" render={() => (\n            <RootLoader flag={this.state.loading} func={() => this._loadCanvassers()}>\n              <h3>Canvassers:</h3>\n              {active}\n              {denied.length?\n              <div>\n                <h3>Denied access:</h3>\n                {denied}\n              </div>\n              :''}\n            </RootLoader>\n          )} />\n          <Route path=\"/canvassers/:id\" render={(props) => (\n            <RootLoader flag={this.state.loading} func={this._loadSingle}>\n              <CardCanvasser key={this.state.thisCanvasser.id} canvasser={this.state.thisCanvasser} edit={true} refer={this} />\n              <br />\n              Email: {(this.state.thisCanvasser.email?this.state.thisCanvasser.email:'N/A')}\n              <br />\n              Phone: {(this.state.thisCanvasser.phone?this.state.thisCanvasser.phone:'N/A')}\n              <br />\n              # of doors knocked: 0\n            </RootLoader>\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport t from 'tcomb-form';\nimport Select from 'react-select';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport { RootLoader, Loader, Icon, CardCanvasser, _loadCanvassers, CardTurf, _loadTurf, CardForm, _loadForms } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      saving: false,\n      selectedMembersOption: null,\n      selectedTurfOption: null,\n      selectedFormOption: null,\n      teams: [],\n      thisTeam: null,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n  }\n\n  onChangeTeam(addTeamForm) {\n    this.setState({addTeamForm})\n  }\n\n  handleMembersChange = (selectedMembersOption) => {\n    this.setState({ selectedMembersOption });\n  }\n\n  handleTurfChange = (selectedTurfOption) => {\n    this.setState({ selectedTurfOption });\n  }\n\n  handleFormChange = (selectedFormOption) => {\n    this.setState({ selectedFormOption });\n  }\n\n  _saveTeam = async () => {\n\n    this.setState({saving: true});\n\n    try {\n      await fetch('https://'+this.props.server+'/canvass/v1/team/members/wipe', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({teamName: this.state.thisTeam}),\n      });\n\n      await fetch('https://'+this.props.server+'/canvass/v1/team/turf/wipe', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({teamName: this.state.thisTeam}),\n      });\n\n      await fetch('https://'+this.props.server+'/canvass/v1/team/form/wipe', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({teamName: this.state.thisTeam}),\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.state.selectedMembersOption.map(async (c) => {\n      try {\n        await fetch('https://'+this.props.server+'/canvass/v1/team/members/add', {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({teamName: this.state.thisTeam, cId: c.id}),\n        });\n      } catch (e) {\n        console.warn(e);\n      }\n    });\n\n    try {\n      await fetch('https://'+this.props.server+'/canvass/v1/team/turf/add', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({teamName: this.state.thisTeam, turfName: this.state.selectedTurfOption.value}),\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    try {\n      await fetch('https://'+this.props.server+'/canvass/v1/team/form/add', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({teamName: this.state.thisTeam, fId: this.state.selectedFormOption.value}),\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({saving: false});\n  }\n\n  _deleteTeam = async () => {\n    try {\n      await fetch('https://'+this.props.server+'/canvass/v1/team/delete', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({name: this.state.thisTeam}),\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n    window.location.href = \"/HelloVoter/#/teams/\";\n    this._loadTeams();\n  }\n\n  _createTeam = async () => {\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    await fetch('https://'+this.props.server+'/canvass/v1/team/create', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name: json.name}),\n    });\n    window.location.href = \"/HelloVoter/#/teams/\";\n    this._loadTeams();\n  }\n\n  componentDidMount() {\n    this._loadTeams();\n  }\n\n  _loadTeams = async () => {\n    let teams = {};\n\n    this.setState({loading: true})\n\n    try {\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/team/list', {\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n      });\n      teams = await res.json();\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({teams: teams.data});\n\n    // also load canvassers & turf & forms\n    let canvassers = await _loadCanvassers(this);\n    let turf = await _loadTurf(this);\n    let forms = await _loadForms(this);\n\n    let memberOptions = [];\n    let turfOptions = [];\n    let formOptions = [];\n\n    canvassers.forEach((c) => {\n      memberOptions.push({value: c.name+c.email+c.location+(c.admin?\"admin\":\"\"), id: c.id, label: (<CardCanvasser key={c.id} canvasser={c} refer={this} />)})\n    });\n\n    turf.forEach((t) => {\n      turfOptions.push({value: t.name, label: (<CardTurf key={t.name} turf={t} />)})\n    })\n\n    forms.forEach((f) => {\n      formOptions.push({value: f.id, label: (<CardForm key={f.id} form={f} />)})\n    })\n\n    this.setState({memberOptions, turfOptions, formOptions});\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/teams/\" render={() => (\n            <RootLoader flag={this.state.loading} func={this._loadTeams}>\n              {(this.state.loading?'loading':this.state.teams.map(t => <Team key={t.name} team={t} refer={this} />))}\n              <Link to={'/teams/add'}><button>Add Team</button></Link>\n            </RootLoader>\n          )} />\n          <Route exact={true} path=\"/teams/add\" render={() => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addTeamForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTeam(e)}\n                value={this.state.addTeamForm}\n              />\n              <button onClick={() => this._createTeam()}>\n                Submit\n              </button>\n            </div>\n          )} />\n          <Route path=\"/teams/edit/:name\" render={() => (\n            <div>\n              <h3>{this.state.thisTeam}</h3>\n              Canvassers:\n              <Select\n                value={this.state.selectedMembersOption}\n                onChange={this.handleMembersChange}\n                options={this.state.memberOptions}\n                isMulti={true}\n                isSearchable={true}\n                placeholder=\"Select team members to add\"\n              />\n              <br />\n              Turf:\n              <Select\n                value={this.state.selectedTurfOption}\n                onChange={this.handleTurfChange}\n                options={this.state.turfOptions}\n                isSearchable={true}\n                placeholder=\"Select turf for this team\"\n              />\n              <br />\n              Form:\n              <Select\n                value={this.state.selectedFormOption}\n                onChange={this.handleFormChange}\n                options={this.state.formOptions}\n                isSearchable={true}\n                placeholder=\"Select form for this team\"\n              />\n              <br />\n              {(this.state.saving?<Loader />:<button onClick={() => this._saveTeam()}>Save Team</button>)}\n              <br />\n              <br />\n              <br />\n              <button onClick={() => this._deleteTeam()}>Delete Team</button>\n            </div>\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Team = (props) => {\n  return (\n    <div style={{display: 'flex', padding: '10px'}}>\n      <div style={{padding: '5px 10px'}}>\n        <Icon style={{width: 35, height: 35, color: \"gray\"}} icon={faUsers} />\n      </div>\n      <div style={{flex: 1, overflow: 'auto'}}>\n        {props.team.name} (<Link to={'/teams/edit/'+props.team.name} onClick={async () => {\n          props.refer.setState({thisTeam: props.team.name, selectedMembersOption: null, selectedTurfOption: null, selectedFormOption: null});\n\n          let memberOptions = [];\n          let turfOptions = {};\n          let formOptions = {};\n\n          try {\n            let canvassers = await _loadCanvassers(props.refer, props.team.name);\n\n            canvassers.forEach((c) => {\n              memberOptions.push({value: c.name+c.email+c.location, id: c.id, label: (<CardCanvasser key={c.id} canvasser={c} refer={props.refer} />)})\n            });\n          } catch (e) {\n            console.warn(e);\n          }\n\n          try {\n            let turf = await _loadTurf(props.refer, props.team.name);\n\n            turfOptions = {value: turf[0].name, label: (<CardTurf key={turf[0].name} turf={turf[0]} />)};\n          } catch (e) {\n            console.warn(e);\n          }\n\n          try {\n            let form = await _loadForms(props.refer, props.team.name);\n\n            formOptions = {value: form[0].id, label: (<CardForm key={form[0].id} form={form[0]} />)};\n          } catch (e) {\n            console.warn(e);\n          }\n\n          props.refer.setState({\n            selectedMembersOption: memberOptions,\n            selectedTurfOption: turfOptions,\n            selectedFormOption: formOptions,\n          });\n\n        }}>edit</Link>)\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport t from 'tcomb-form';\nimport Select from 'react-select';\n\nimport { RootLoader, Loader, CardTurf, _loadTurf, us_states } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      saving: false,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({addTurfForm})\n  }\n\n  handleDrawChange = (selectedDrawOption) => {\n    this.setState({ selectedDrawOption });\n  }\n\n  handleStateChange = (selectedStateOption) => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = (selectedTypeOption) => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = (selectedDistrictOption) => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n      case 'sldu':\n      case 'sldl':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (this.state.selectedTypeOption && !this._showDistrictOption()) return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption) return true;\n    return false;\n  }\n\n  _deleteTurf = async () => {\n    try {\n      await fetch('https://'+this.props.server+'/canvass/v1/turf/delete', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({name: this.state.thisTurf.name}),\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n    this._loadTurf(this);\n    window.location.href = \"/HelloVoter/#/turf/\";\n  }\n\n  _createTurf = async () => {\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({saving: true});\n\n    let uri;\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'state':\n        uri = 'states/'+state+'/shape.geojson';\n        break;\n      case 'cd':\n        // TODO: handle the fact there are new years with less in them\n        uri = 'cds/2016/'+this.state.selectedDistrictOption.value+'/shape.geojson';\n        break;\n      case 'sldu':\n        uri = 'states/'+state+'/sldu/'+this.state.selectedDistrictOption.value+'.geojson';\n        break;\n      case 'sldl':\n        uri = 'states/'+state+'/sldl/'+this.state.selectedDistrictOption.value+'.geojson';\n        break;\n      default:\n        throw new Error(\"unknown selectedTypeOption\");\n    }\n\n    try {\n\n      let res = await fetch ('https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/'+uri)\n      let obj = await res.json();\n      let geometry;\n\n      if (obj.geometry) geometry = obj.geometry;\n      else geometry = obj;\n\n      res = await fetch('https://'+this.props.server+'/canvass/v1/turf/create', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: json.name,\n          geometry: geometry,\n        }),\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoter/#/turf/\";\n    this._loadTurf();\n  }\n\n  componentDidMount() {\n    this._loadTurf();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({districtOptions: []})\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n        // TODO: handle the fact there are new years with less in them\n        uri = 'cds/2016/';\n        break;\n      case 'sldu':\n        uri = 'states/'+state+'/sldu/';\n        break;\n      case 'sldl':\n        uri = 'states/'+state+'/sldl/';\n        break;\n      default:\n        return;\n    }\n\n    let res = await fetch('https://api.github.com/repos/OurVoiceUSA/districts/contents/'+uri);\n\n    let dist = [];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n        objs.forEach((o) => {\n          if (o.name.includes(this.state.selectedStateOption.value)) dist.push({value: o.name, label: o.name});\n          return;\n        });\n        break;\n      default:\n        objs.forEach((o) => {\n          let val = o.name.replace('.geojson', '');\n          dist.push({value: val, label: val});\n        });\n      }\n\n    this.setState({districtOptions: dist});\n\n  }\n\n  _loadTurf = async () => {\n    this.setState({loading: true})\n    let turf = await _loadTurf(this);\n    this.setState({loading: false, turf: turf})\n  }\n\n  render() {\n\n    let drawOptions = [\n      {value: 'select', label: 'Select from legislative boundary'},\n      {value: 'radius', label: 'Area surrounding an address'},\n      {value: 'draw', label: 'Manually draw with your mouse'},\n    ];\n    let stateOptions = [];\n    let typeOptions = [\n      {value: 'state', label: 'State'},\n      {value: 'cd', label: 'Congressional'},\n      {value: 'sldu', label: 'State Senate'},\n      {value: 'sldl', label: 'State House'},\n    ];\n\n    Object.keys(us_states).map((k) => stateOptions.push({value: k, label: us_states[k]}));\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/turf/\" render={() => (\n            <RootLoader flag={this.state.loading} func={this._loadTurf}>\n              {(this.state.loading?'loading':this.state.turf.map(t => <CardTurf key={t.name} turf={t} refer={this} />))}\n              <Link to={'/turf/add'}><button>Add Turf</button></Link>\n            </RootLoader>\n          )} />\n          <Route exact={true} path=\"/turf/add\" render={() => (\n            <div>\n              Turf Name:\n              <t.form.Form\n                ref={(ref) => this.addTurfForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTurf(e)}\n                value={this.state.addTurfForm}\n              />\n\n              <br />\n              Method of generating turf:\n              <Select\n                value={this.state.selectedDrawOption}\n                onChange={this.handleDrawChange}\n                options={drawOptions}\n                placeholder=\"Select method\"\n              />\n\n              {this.state.selectedDrawOption && this.state.selectedDrawOption.value === 'select'?\n              <div><br />\n                State or region:\n                <Select\n                  value={this.state.selectedStateOption}\n                  onChange={this.handleStateChange}\n                  options={stateOptions}\n                  isSearchable={true}\n                  placeholder=\"Select state or region\"\n                />\n              </div>\n              :(this.state.selectedDrawOption?'This method is not currently available.':'')}\n\n              {this.state.selectedStateOption?\n              <div><br />\n                District Type:\n                <Select\n                  value={this.state.selectedTypeOption}\n                  onChange={this.handleTypeChange}\n                  onMenuClose={this.selectedTypeFetch}\n                  options={typeOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n              </div>\n              :''}\n\n              {this._showDistrictOption()?\n              <div><br />\n                District Number:\n                {this.state.districtOptions.length?\n                <Select\n                  value={this.state.selectedDistrictOption}\n                  onChange={this.handleDistrictChange}\n                  options={this.state.districtOptions}\n                  isSearchable={true}\n                  placeholder=\"Select district for this turf\"\n                />\n                :<Loader />}\n              </div>\n              :''}\n\n              {this._showSubmitButton()?\n              <div><br />\n                <button onClick={() => this._createTurf()}>\n                  Submit\n                </button>\n              </div>\n              :''}\n            </div>\n          )} />\n          <Route path=\"/turf/view/:name\" render={() => (\n            <div>\n              <h3>{this.state.thisTurf.name}</h3>\n              {this.state.thisTurf.geometry}\n              <br />\n              <br />\n              <br />\n              <button onClick={() => this._deleteTurf()}>Delete Turf</button>\n            </div>\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport t from 'tcomb-form';\n\nimport { faTimesCircle, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { RootLoader, CardForm, Icon, Loader, _loadForms } from '../common.js';\n\nModal.setAppElement(document.getElementById('root'));\n\nconst customStyles = {\n  content : {\n    top                   : '15%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nconst FTYPE = t.enums({\n  'String': 'Text Input',\n  'TEXTBOX': 'Large Text Box',\n  'Number': 'Number',\n  'Boolean': 'On/Off Switch',\n  'SAND': 'Agree/Disagree',\n//  'List': 'Select from List',\n}, 'FTYPE');\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE,\n};\n\nvar options = {\n  fields: {\n    key: {\n      label: 'Input Key',\n      help: 'The spreadsheet column name.',\n    },\n    label: {\n      label: 'Input Label',\n      help: 'Label the user sees on the form.',\n    },\n    type: {\n      help: 'The type of input the user can enter.',\n    },\n  },\n};\n\nvar premade = {\n  'FullName': { label: 'Full Name', type: 'String', optional: true },\n  'Phone': { label: 'Phone Number', type: 'Number', optional: true },\n  'Email': { label: 'Email Address', type: 'String', optional: true },\n  'RegisteredToVote': { label: 'Are you registered to vote?', type: 'Boolean', optional: true },\n  'PartyAffiliation': { label: 'Party Affiliation', type: 'List', optional: true,\n    options: [\n      'No Party Preference',\n      'Democratic',\n      'Republican',\n      'Green',\n      'Libertarian',\n      'Other',\n    ]},\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // TODO: this is only for brand new forms\n    let fields = JSON.parse(JSON.stringify(premade)); // deep copy\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      'name': t.String,\n    });\n\n    this.state = {\n      loading: true,\n      forms: [],\n      thisForm: {},\n      fields: fields,\n      order: order,\n      customForm: null,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.',\n        },\n      },\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.doAddCustom = this.doAddCustom.bind(this);\n  }\n\n  openModal() {\n    this.setState({customForm: t.struct(addItem)})\n  }\n\n  closeModal() {\n    this.setState({customForm: null});\n  }\n\n  doAddCustom() {\n    let { fields, order } = this.state;\n\n    let ref = this.customForm.getValue();\n    if (ref === null) return;\n    let json = JSON.parse(JSON.stringify(ref)); // deep copy\n\n    let key = json.key;\n    delete json.key;\n    json.optional = true; // backwards compatability\n\n    // check for duplicate keys\n    if (fields[key]) {\n      //return Alert.alert('Error', 'Duplicate Input Key. Change your Input Key to add this item.', [{text: 'OK'}], { cancelable: false });    }\n      console.warn(\"Duplicate\");\n      return;\n    }\n\n    fields[key] = json;\n    order[order.length] = key;\n\n    this.setState({customForm: null, fields: fields, order: order});\n\n  }\n\n  doShowCustom() {\n    this.setState({customForm: t.struct(addItem)});\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n      case 'String': return 'Text Input';\n      case 'TEXTBOX': return 'Text Box';\n      case 'Number': return 'Number';\n      case 'Boolean': return 'On/Off Switch';\n      case 'SAND': return 'Agree/Disagree';\n      case 'List': return 'Select from List';\n      default: return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({fields, order});\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({addFormForm})\n  }\n\n  componentDidMount() {\n    this._loadForms();\n  }\n\n  _loadForms = async () => {\n    this.setState({forms: await _loadForms(this)});\n  }\n\n  _createForm = async () => {\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    this.setState({saving: true});\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      console.warn('From name can only contain alphanumeric characters, and spaces and dashes.');\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      console.warn('Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    // make sure this name doesn't exist\n    try {\n\n      let obj;\n\n      obj = {\n        name: formName,\n        questions: this.state.fields,\n        questions_order: this.state.order,\n      };\n\n      await fetch('https://'+this.props.server+'/canvass/v1/form/create', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(obj),\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoter/#/forms/\";\n    this._loadForms();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/forms/\" render={() => (\n            <RootLoader flag={this.state.loading} func={() => this._loadForms()}>\n              {this.state.forms.map(f => (<CardForm key={f.id} form={f} refer={this} />))}\n              <Link to={'/forms/add'}><button>Add Form</button></Link>\n            </RootLoader>\n          )} />\n          <Route path=\"/forms/add\" render={(props) => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addFormForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeForm(e)}\n                value={this.state.addFormForm}\n              />\n\n              <div style={{margin: 25}}>Items in your Canvassing form: <button onClick={this.openModal}><Icon icon={faPlusCircle} /> Add Item</button></div>\n\n              {Object.keys(this.state.fields).map((f) => {\n                let field = this.state.fields[f];\n                return (\n                  <li key={f} style={{marginLeft: 25}}>{field.label+(field.required?' *':'')} : {this.inputTypeToReadable(field.type)} <Icon icon={faTimesCircle} color=\"red\" /></li>\n                );\n              })}\n\n              {this.state.saving?\n              <Loader />\n              :\n              <button style={{margin: 25}} onClick={() => this._createForm()}>\n                Create Form\n              </button>\n              }\n\n              <Modal\n                isOpen={(this.state.customForm !== null)}\n                onAfterOpen={this.afterOpenModal}\n                onRequestClose={this.closeModal}\n                style={customStyles}\n                contentLabel=\"Add item to form\"\n              >\n              <t.form.Form\n                ref={(ref) => this.customForm = ref}\n                type={this.customFormItems}\n                options={options}\n                onChange={this.onChange}\n                value={this.state.customForm}\n              />\n                <button onClick={this.doAddCustom}>Add this item</button>\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                <button onClick={() => this.setState({customForm: null})}>Dismiss</button>\n              </Modal>\n            </div>\n          )} />\n          <Route path=\"/forms/edit/:id\" render={(props) => (\n            <CardForm key={this.state.thisForm.id} form={this.state.thisForm} refer={this} />\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport { _browserLocation, _loadTurf, _loadAddresses } from '../common.js';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let addresses = [];\n\n    let turfs = await _loadTurf(this);\n    let data = (await _loadAddresses(this)).nodes;\n\n    if (!data) data = {};\n\n    // only care about address objects\n    Object.keys(data).forEach((d) => {\n      if (data[d] && data[d].type === \"address\") {\n        addresses.push(data[d]);\n      }\n    })\n\n    this.setState({turfs, addresses});\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  };\n\n  render() {\n    let polygons = [];\n    const { addresses } = this.state;\n\n    let location = _browserLocation(this.props);\n\n    this.state.turfs.forEach((c) => {\n      geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push(p));\n    });\n\n    return (\n      <Map google={this.props.google} zoom={14} center={location} onClick={this.onMapClicked}>\n        {addresses.map((a, idx) => (\n          <Marker\n            key={idx}\n            onClick={this.onMarkerClick}\n            title={a.address.join(\" \")}\n            position={{lat: a.latlng.latitude, lng: a.latlng.longitude}} />\n        ))}\n        {polygons.map((p, idx) => (\n          <Polygon\n            key={idx}\n            paths={p}\n            strokeColor=\"#0000FF\"\n            strokeWeight={5}\n            fillColor=\"#000000\"\n            fillOpacity={0} />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}>\n          <div>\n            <h1>{this.state.selectedPlace.title}</h1>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport CSVReader from 'react-csv-reader';\nimport t from 'tcomb-form';\n\nimport { Loader } from '../common.js';\n\nconst HEADER = t.enums({\n  'address1': 'Address 1',\n  'address2': 'Address 2',\n  'city': 'City',\n  'state': 'State',\n  'zip': 'Zip Code',\n}, 'HEADER');\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      data: null,\n      headers: [],\n    };\n  }\n\n  preProcessError(e) {\n    console.warn(\"BOOO = \"+e);\n  }\n\n  preProcess = async (data) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({data, headers});\n  }\n\n  onHeadersSubmit = (evt) => {\n    evt.preventDefault();\n\n  /*\n    const value = this.refs.form.getValue();\n\n    if (value) {\n      // required import fields\n      let address1 = null;\n      let address2 = null;\n      let city = null;\n      let state = null;\n      let zip = null;\n\n      for (let val in value) {\n        let v = value[val];\n        if (v === 'address1') address1 = val;\n        if (v === 'address2') address2 = val;\n        if (v === 'city') city = val;\n        if (v === 'state') state = val;\n        if (v === 'zip') zip = val;\n      }\n\n      if (address1 == null || address2 == null || city == null || state == null || zip == null) {\n        this.setState({formError: 'All address elements must be assigned'});\n        return;\n      }\n\n      this.processData(address1, address2, city, state, zip);\n    }\n  */\n\n    this.setState({loading: true});\n    // fake data loaded after 3 seconds\n    setTimeout(() => this.setState({loading: false, headers: []}), 3000);\n\n  }\n\n  render() {\n\n    if (this.state.loading) return (<Loader />);\n\n    if (this.state.headers.length) {\n      let obj = {};\n\n      let FormOptions = {fields: {}};\n\n      for (let h in this.state.headers) {\n        obj[h] = t.maybe(HEADER);\n        FormOptions.fields[h] = {label: this.state.headers[h]};\n      }\n\n      let FormSchema = t.struct(obj);\n\n      return (\n        <div>\n          Assign each header to its data type <br />\n\n          <form onSubmit={this.onHeadersSubmit}>\n            <t.form.Form ref=\"form\" type={FormSchema} options={FormOptions} />\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            </div>\n          </form>\n\n          <hr />\n            NOTE: This import tool does not work on all voter files, as there is no standard format.\n            We do our best to accommodate the most common patterns. If your import doesn't work,&nbsp;\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoter/issues/new\">\n            submit an issue</a> and a volunteer programmer can work to fix the issue in the future.\n            If you need the import done now, contact someone you know who's good with Microsoft&copy; Excel\n            or LibreOffice&copy; and they can reformat your voter file so it works with this import tool.\n        </div>\n        );\n    }\n\n    return (\n      <CSVReader\n        label=\"Data Importa\"\n        onError={this.preProcessError}\n        onFileLoaded={this.preProcess}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport {PieChart, Pie, Cell, Legend, Label, LabelList} from 'recharts';\n\nconst data01 = [\n  { name: 'Republican', value: 400, v: 89, color: 'red' },\n  { name: 'Democratic', value: 300, v: 100 },\n  { name: 'UUP', value: 200, v: 200 },\n  { name: 'Unaffiliated', value: 200, v: 20 },\n];\n\nconst data02 = [\n  { name: 'Republican', value: 2400 },\n  { name: 'Democratic', value: 4567 },\n  { name: 'UUP', value: 1398 },\n  { name: 'Unaffiliated', value: 9800 },\n];\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animation: true,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Analytics</h3>\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={data01}\n            dataKey=\"value\"\n            cx={200}\n            cy={200}\n            startAngle={180}\n            endAngle={0}\n            outerRadius={80}\n            label\n          >\n            {\n              data01.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={[\"red\",\"blue\",\"yellow\",\"grey\"][index]} />\n              ))\n            }\n            <Label value=\"Canvassing\" position=\"outside\" />\n            <LabelList position=\"outside\" />\n          </Pie>\n          <Pie\n            data={data02}\n            dataKey=\"value\"\n            cx={600}\n            cy={200}\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              data02.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={[\"red\",\"blue\",\"yellow\",\"grey\"][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              Agreed with you\n            </Label>\n          </Pie>\n        </PieChart>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router'\nimport jwt_decode from 'jwt-decode';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let jwt;\n\n    try {\n      jwt = this.props.location.pathname.split('/').pop();\n      jwt_decode(jwt);\n    } catch (e) {\n      console.warn(\"Unable to extract jwt from URI: \"+e);\n      jwt = 'error';\n    }\n\n    this.state = {jwt: jwt};\n    this.props.refer.setState({jwt: jwt});\n    localStorage.setItem('jwt', jwt);\n  }\n\n  render() {\n    if (this.state.jwt === 'error') return (<div>There was an error parsing the jwt</div>);\n\n    return (\n      <Route render={() => (\n        <Redirect to=\"/\" />\n      )} />\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\n\nimport { Icon } from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cb_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let data = {};\n    try {\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/dashboard', {\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n      });\n\n      data = await res.json();\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({cb_version: (data.version?data.version:'unknown')});\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}</div>\n        <div>{(this.state.cb_version?'canvass-broker version '+this.state.cb_version:<Loader height={15} type=\"ThreeDots\" />)}</div>\n        <div>&copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not for any candidate or political party.</div>\n        <div>This program is free software; refer to our <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoter/blob/master/LICENSE\">License</a> for more details.</div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/OurVoiceUSA\"><Icon icon={faTwitter} /> @OurVoiceUSA</a></div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/OurVoiceUsa\"><Icon icon={faFacebook} /> @OurVoiceUSA</a></div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ourvoiceusa.org/\"><Icon icon={faGlobe} /> ourvoiceusa.org</a></div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport t from 'tcomb-form';\nimport jwt_decode from 'jwt-decode';\nimport queryString from 'query-string';\n\nimport Dashboard from './components/Dashboard';\nimport Canvassers from './components/Canvassers';\nimport Teams from './components/Teams';\nimport Turf from './components/Turf';\nimport Forms from './components/Forms';\nimport Map from './components/Map';\nimport ImportData from './components/ImportData';\nimport Analytics from './components/Analytics';\nimport Settings from './components/Settings';\nimport Jwt from './components/Jwt';\nimport About from './components/About';\n\nimport { Root, Sidebar, SidebarItem, Main, Icon } from './common.js';\n\nimport { faColumns, faUser, faUsers, faMap, faGlobe, faClipboard, faChartPie,\n         faFileUpload, faSignOutAlt, faAward, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n\n    this.state = {\n      jwt: localStorage.getItem('jwt'),\n      server: localStorage.getItem('server'),\n      connectForm: {server: v.server},\n    };\n\n    this.formServerItems = t.struct({\n      server: t.String,\n      ack: t.subtype(t.Boolean, function (s) { return s }), // boolean that fails validation if not selected\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Server Domain Name',\n          help: 'Enter the domain name of the server you wish to connect to.',\n          error: 'You must enter a domain name.',\n        },\n        ack: {\n          label: 'Terms of Use',\n          help: 'By checking this you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server\\'s terms of use.',\n          error: 'You must acknowledge the terms of use.',\n        },\n      },\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.doSave = this.doSave.bind(this);\n\n  }\n\n  componentDidMount = async () => {\n    let res = await fetch('https://'+this.state.server+'/canvass/v1/google_maps_key', {\n      headers: {\n        'Authorization': 'Bearer '+(this.state.jwt?this.state.jwt:\"of the one ring\"),\n        'Content-Type': 'application/json',\n      },\n    });\n    let data = await res.json();\n    this.setState({google_maps_key: data.google_maps_key});\n  }\n\n  onChange(connectForm) {\n    this.setState({connectForm})\n  }\n\n  getName() {\n    let name;\n\n    try {\n      name = jwt_decode(this.state.jwt).name;\n    } catch (e) {\n      console.warn(e);\n    }\n\n    return name;\n  }\n\n  _logout() {\n    localStorage.removeItem('server');\n    localStorage.removeItem('jwt');\n    this.setState({server: null, jwt: null});\n  }\n\n  doSave = async () => {\n\n    let json = this.refs.mainForm.getValue();\n    if (json === null) return;\n\n    if (json.ack !== true) return;\n\n    let ret = await this.singHello(json.server);\n\n    if (ret.flag !== true) console.warn((ret.error?'Error':'Connection Successful'), ret.msg, [{text: 'OK'}], { cancelable: false });\n    else console.warn(ret)\n\n  }\n\n  singHello = async (server) => {\n    let res;\n\n    localStorage.setItem('server', server);\n\n    try {\n      res = await fetch('https://'+server+'/canvass/v1/hello', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.state.jwt?this.state.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({longitude: -118, latitude: 40}),\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url) return {error: true, msg: \"Missing required header.\"}\n\n      switch (res.status) {\n        case 200:\n          break; // valid - break to proceed\n        case 400:\n          return {error: true, msg: \"The server didn't understand the request sent from this device.\"};\n        case 401:\n          window.location.href = sm_oauth_url+\"/gm?app=HelloVoter\";\n          return {error: false, flag: true};\n        case 403:\n          return {error: true, msg: \"We're sorry, but your request to canvass with this server has been rejected.\"};\n        default:\n          return {error: true, msg: \"Unknown error connecting to server.\"};\n      }\n\n      let body = await res.json();\n\n      console.warn(body);\n\n      this.setState({server: server});\n      localStorage.setItem('server', server);\n\n      if (body.data.ready !== true) return {error: false, msg: \"The server said: \"+body.msg};\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({server: server, dbx: null, user: this.state.user});\n        return {error: false, flag: true};\n      }\n    } catch (e) {\n      console.warn(\"singHello: \"+e);\n      return {error: true, msg: \"Unable to make a connection to target server\"};\n    }\n\n  }\n\n  render() {\n    let { server, jwt } = this.state;\n\n    if (!server) {\n      return (\n        <div align=\"center\">\n          <br />\n          <strong>{process.env.REACT_APP_NAME}</strong>\n          <div>Version {process.env.REACT_APP_VERSION}</div>\n          <br />\n          <t.form.Form\n            ref=\"mainForm\"\n            type={this.formServerItems}\n            options={this.formServerOptions}\n            onChange={this.onChange}\n            value={this.state.connectForm}\n          />\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.doSave}>Connect to Server</button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n    <Router>\n      <Root>\n        <Sidebar>\n          <div style={{margin: 10}}>Welcome, {this.getName()}!<br />Server: {this.state.server}</div>\n          <hr />\n          <SidebarItem><Icon icon={faColumns} /> <Link to={'/'}>Dashboard</Link></SidebarItem>\n          <SidebarItem><Icon icon={faUser} /> <Link to={'/canvassers/'}>Canvassers</Link></SidebarItem>\n          <SidebarItem><Icon icon={faUsers} /> <Link to={'/teams/'}>Teams</Link></SidebarItem>\n          <SidebarItem><Icon icon={faMap} /> <Link to={'/turf/'}>Turf</Link></SidebarItem>\n          <SidebarItem><Icon icon={faClipboard} /> <Link to={'/forms/'}>Forms</Link></SidebarItem>\n          <SidebarItem><Icon icon={faGlobe} /> <Link to={'/map/'}>Map</Link></SidebarItem>\n          <SidebarItem><Icon icon={faFileUpload} /> <Link to={'/import/'}>Import Data</Link></SidebarItem>\n          <SidebarItem><Icon icon={faChartPie} /> <Link to={'/analytics/'}>Analytics</Link></SidebarItem>\n          <SidebarItem><Icon icon={faCog} /> <Link to={'/settings/'}>Settings</Link></SidebarItem>\n          <SidebarItem><Icon icon={faSignOutAlt} /> <button onClick={() => this._logout()}>Logout</button></SidebarItem>\n          <hr />\n          <SidebarItem><Icon icon={faAward} /> <Link to={'/about/'}>About</Link></SidebarItem>\n          <SidebarItem><Icon icon={faGithub} /> <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoter/tree/master/docs/\">Help</a></SidebarItem>\n        </Sidebar>\n        <Main>\n          <Route exact={true} path=\"/\" render={() => <Dashboard server={server} jwt={jwt} />} />\n          <Route path=\"/canvassers/\" render={(props) => <Canvassers server={server} jwt={jwt} {...props} />} />\n          <Route path=\"/teams/\" render={() => <Teams server={server} jwt={jwt} />} />\n          <Route path=\"/turf/\" render={() => <Turf server={server} jwt={jwt} />} />\n          <Route path=\"/forms/\" render={() => <Forms server={server} jwt={jwt} />} />\n          <Route path=\"/map/\" render={() => <Map server={server} jwt={jwt} apiKey={this.state.google_maps_key} />} />\n          <Route path=\"/import/\" render={() => <ImportData server={server} jwt={jwt} />} />\n          <Route path=\"/analytics/\" render={() => <Analytics server={server} jwt={jwt} />} />\n          <Route path=\"/settings/\" render={() => <Settings server={server} jwt={jwt} />} />\n          <Route path=\"/jwt/\" render={(props) => <Jwt {...props} refer={this} />} />\n          <Route path=\"/about/\" render={() => <About server={server} jwt={jwt} />} />\n        </Main>\n      </Root>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}