{"version":3,"sources":["components/Dashboard.js","components/Canvassers.js","components/Teams.js","components/Turf.js","components/Questions.js","components/Forms.js","components/Map.js","components/ImportData.js","components/Jwt.js","App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","Component","TimeAgo","locale","en","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","canvassers","res","data","wrap","_context","prev","next","fetch","server","headers","Authorization","jwt","Content-Type","sent","json","t0","console","warn","setState","loading","stop","state","_this2","BrowserRouter","basename","Route","exact","path","render","map","c","Canvassers_Canvasser","key","id","canvasser","match","params","Canvasser","timeAgo","name","Link","to","email","format","Date","last_seen","admin","doCreateTeam","addTeamForm","getValue","abrupt","method","body","JSON","stringify","_callee2","teams","_context2","formServerItems","t","struct","String","formServerOptions","fields","label","error","Teams_Team","team","main_default","form","Form","ref","type","options","onChange","e","onChangeTeam","value","onClick","Team","turf","Turf_Turf","Turf","google_maps_key","style","height","width","google_map_react_lib_default","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","Map_Pin","Pin","enums","address1","address2","city","zip","location","pathname","split","pop","jwt_decode","sessionStorage","setItem","es_Route","Redirect","doSave","ret","refs","mainForm","ack","singHello","flag","msg","text","cancelable","_ref2","longitude","latitude","status","window","href","ready","dbx","user","t1","_x","apply","arguments","getItem","subtype","Boolean","s","help","bind","assertThisInitialized","connectForm","removeItem","_this$state","reload","App_Root","App_Sidebar","getName","App_SidebarItem","_logout","App_Main","component","Dashboard","Canvassers_App","Teams_App","Turf_App","Questions","Forms","Map_App","ImportData_App","Jwt","align","Root","assign","display","Sidebar","overlow","background","SidebarItem","whiteSpace","textOverflow","overflow","padding","Main","flex","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.27286931.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Dashboard Component</div>);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\n\nTimeAgo.locale(en);\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      canvassers: [],\n    };\n\n  }\n\n  componentDidMount = async () => {\n    let canvassers = [];\n\n    try {\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/canvasser/list', {\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n      });\n      let data = await res.json();\n      canvassers = (data.data?data.data:[]);\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({loading: false, canvassers: canvassers});\n  }\n\n  render() {\n    return (\n      <Router basename=\"/HelloVoter/\">\n        <div>\n          <Route exact={true} path=\"/canvassers/\" render={() => {\n            return (this.state.loading?'loading':this.state.canvassers.map(c => <Canvasser key={c.id} canvasser={c} />))\n          }} />\n          <Route path=\"/canvassers/:id\" render={(props) => {\n            return (<div>{props.match.params.id}</div>)\n          }} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Canvasser = (props) => {\n  const timeAgo = new TimeAgo('en-US')\n  return (\n    <div>\n      Name: {props.canvasser.name} (<Link to={'/canvassers/'+props.canvasser.id}>view profile</Link>)<br />\n      Email: {props.canvasser.email} <br />\n      Last Login: {timeAgo.format(new Date(props.canvasser.last_seen-30000))} <br />\n      Admin: {(props.canvasser.admin?'Yes':'No')}\n    <hr />\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport t from 'tcomb-form';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n  }\n\n  onChangeTeam(addTeamForm) {\n    this.setState({addTeamForm})\n  }\n\n  doCreateTeam = async () => {\n\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    try {\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/team/create', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({name: json.name}),\n      });\n\n      console.warn(res);\n    } catch (e) {\n      console.warn(e);\n    }\n\n  }\n\n\n  componentDidMount = async () => {\n    let teams = {};\n\n    try {\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/team/list', {\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n      });\n      teams = await res.json();\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({loading: false, teams: teams.data});\n  }\n\n  render() {\n    return (\n      <Router basename=\"/HelloVoter/\">\n        <div>\n          <Route exact={true} path=\"/teams/\" render={() => (\n            <div>\n              {(this.state.loading?'loading':this.state.teams.map(t => <Team key={t.name} team={t} />))}\n              <Link to={'/teams/add'}><button>Add Team</button></Link>\n            </div>\n          )} />\n          <Route exact={true} path=\"/teams/add\" render={() => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addTeamForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTeam(e)}\n                value={this.state.addTeamForm}\n              />\n              <button onClick={() => this.doCreateTeam()}>\n                Submit\n              </button>\n            </div>\n          )} />\n          <Route path=\"/teams/edit\" render={() => (\n            <div>\n              LIST / EDIT / etc\n            </div>\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Team = (props) => (\n  <div>\n    Name: {props.team.name} (<Link to={'/teams/edit/'+props.team.name}>edit</Link>)<br />\n  <hr />\n  </div>\n)\n\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n\n  }\n\n  componentDidMount = async () => {\n    let turf = {};\n\n    try {\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/turf/list', {\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n      });\n      turf = await res.json();\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({loading: false, turf: turf.data});\n  }\n\n  render() {\n    return (\n      <div>\n        {(this.state.loading?'loading':this.state.turf.map(t => <Turf key={t.id} turf={t} />))}\n      </div>);\n  }\n}\n\nconst Turf = (props) => (\n  <div>\n    Name: {props.turf.name} <br />\n  <hr />\n  </div>\n)\n\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Questions Component</div>);\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Forms Component</div>);\n  }\n}\n","import React, { Component } from 'react';\n\nimport GoogleMaps from 'google-map-react';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      google_maps_key: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let key;\n    try {\n      let res = await fetch('https://'+this.props.server+'/canvass/v1/google_maps_key', {\n        headers: {\n          'Authorization': 'Bearer '+(this.props.jwt?this.props.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n      });\n\n      let body = await res.json();\n      key = body.google_maps_key;\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({google_maps_key: (key?{key: key}:null), loading: false});\n  }\n\n  render() {\n    if (this.state.loading) return (<div>loading</div>);\n\n    return (\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMaps\n          bootstrapURLKeys={this.state.google_maps_key}\n          defaultCenter={{lat: 33.9208231, lng: -118.3281370}}\n          defaultZoom={11}\n        >\n          <Pin\n            lat={59.955413}\n            lng={30.337844}\n          />\n        </GoogleMaps>\n      </div>\n    );\n  }\n}\n\nconst Pin = (props) => (\n  <div>\n    FOOBAR\n  </div>\n)\n\n","import React, { Component } from 'react';\n\nimport t from 'tcomb-form';\n\nconst HEADER = t.enums({\n  'address1': 'Address 1',\n  'address2': 'Address 2',\n  'city': 'City',\n  'state': 'State',\n  'zip': 'Zip Code',\n}, 'HEADER');\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>Import Data</div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router'\nimport jwt_decode from 'jwt-decode';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let jwt;\n\n    try {\n      jwt = this.props.location.pathname.split('/').pop();\n      jwt_decode(jwt);\n    } catch (e) {\n      console.warn(\"Unable to extract jwt from URI: \"+e);\n      jwt = 'error';\n    }\n\n    this.state = {jwt: jwt};\n\n    sessionStorage.setItem('jwt', jwt);\n  }\n\n  render() {\n    if (this.state.jwt === 'error') return (<div>There was an error parsing the jwt</div>);\n\n    return (\n      <Route render={() => (\n        <Redirect to=\"/\" />\n      )} />\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport t from 'tcomb-form';\nimport jwt_decode from 'jwt-decode';\n\nimport Dashboard from './components/Dashboard';\nimport Canvassers from './components/Canvassers';\nimport Teams from './components/Teams';\nimport Turf from './components/Turf';\nimport Questions from './components/Questions';\nimport Forms from './components/Forms';\nimport Map from './components/Map';\nimport ImportData from './components/ImportData';\nimport Jwt from './components/Jwt';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jwt: sessionStorage.getItem('jwt'),\n      server: sessionStorage.getItem('server'),\n    };\n\n    this.formServerItems = t.struct({\n      server: t.String,\n      ack: t.subtype(t.Boolean, function (s) { return s }), // boolean that fails validation if not selected\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Server Domain Name',\n          help: 'Enter the domain name of the server you wish to connect to.',\n          error: 'You must enter a domain name.',\n        },\n        ack: {\n          label: 'Terms of Use',\n          help: 'By checking this you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server\\'s terms of use.',\n          error: 'You must acknowledge the terms of use.',\n        },\n      },\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.doSave = this.doSave.bind(this);\n  }\n\n  onChange(connectForm) {\n    this.setState({connectForm})\n  }\n\n  getName() {\n    let name;\n\n    try {\n      name = jwt_decode(this.state.jwt).name;\n    } catch (e) {\n      console.warn(e);\n    }\n\n    return name;\n  }\n\n  _logout() {\n    sessionStorage.removeItem('server');\n    sessionStorage.removeItem('jwt');\n    this.setState({server: null, jwt: null});\n  }\n\n  doSave = async () => {\n\n    let json = this.refs.mainForm.getValue();\n    if (json === null) return;\n\n    if (json.ack !== true) return;\n\n    let ret = await this.singHello(json.server);\n\n    if (ret.flag !== true) console.warn((ret.error?'Error':'Connection Successful'), ret.msg, [{text: 'OK'}], { cancelable: false });\n    else console.warn(ret)\n\n  }\n\n  singHello = async (server) => {\n    let res;\n\n    sessionStorage.setItem('server', server);\n\n    try {\n      res = await fetch('https://'+server+'/canvass/v1/hello', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.state.jwt?this.state.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({longitude: -118, latitude: 40}),\n      });\n\n      switch (res.status) {\n        case 200:\n          break; // valid - break to proceed\n        case 400:\n          return {error: true, msg: \"The server didn't understand the request sent from this device.\"};\n        case 401:\n          window.location.href = \"https://\"+server+\"/auth/gm?app=HelloVoter\";\n          return {error: false, flag: true};\n        case 403:\n          return {error: true, msg: \"We're sorry, but your request to canvass with this server has been rejected.\"};\n        default:\n          return {error: true, msg: \"Unknown error connecting to server.\"};\n      }\n\n      let body = await res.json();\n\n      console.warn(body);\n\n      this.setState({server: server});\n      sessionStorage.setItem('server', server);\n\n      if (body.data.ready !== true) return {error: false, msg: \"The server said: \"+body.msg};\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({server: server, dbx: null, user: this.state.user});\n        return {error: false, flag: true};\n      }\n    } catch (e) {\n      console.warn(\"singHello: \"+e);\n      return {error: true, msg: \"Unable to make a connection to target server\"};\n    }\n\n  }\n\n  render() {\n    const { server, jwt } = this.state;\n\n    if (!server) {\n      return (\n        <div align=\"center\">\n          <h3>HelloVoter</h3>\n          <t.form.Form\n            ref=\"mainForm\"\n            type={this.formServerItems}\n            options={this.formServerOptions}\n            onChange={this.onChange}\n            value={this.state.connectForm}\n          />\n          <button onClick={this.doSave}>\n            Connect to Server\n          </button>\n        </div>\n      );\n    }\n\n    // TODO: this is a hack to load the new session from the /jwt/ redirect back to here. Need a cleaner way\n    if (!jwt) window.location.reload();\n\n    return (\n    <Router basename=\"/HelloVoter/\">\n      <Root>\n        <Sidebar>\n          <div>Welcome, {this.getName()}!</div>\n          <SidebarItem><Link to={'/'}>Dashboard</Link></SidebarItem>\n          <SidebarItem><Link to={'/canvassers/'}>Canvassers</Link></SidebarItem>\n          <SidebarItem><Link to={'/teams/'}>Teams</Link></SidebarItem>\n          <SidebarItem><Link to={'/turf/'}>Turf</Link></SidebarItem>\n          <SidebarItem><Link to={'/questions/'}>Questions</Link></SidebarItem>\n          <SidebarItem><Link to={'/forms/'}>Forms</Link></SidebarItem>\n          <SidebarItem><Link to={'/map/'}>Map</Link></SidebarItem>\n          <SidebarItem><Link to={'/import/'}>Import Data</Link></SidebarItem>\n          <SidebarItem><button onClick={() => this._logout()}>Logout</button></SidebarItem>\n        </Sidebar>\n        <Main>\n          <Route exact={true} path=\"/\" component={Dashboard} />\n          <Route path=\"/canvassers/\" render={() => <Canvassers server={server} jwt={jwt} />} />\n          <Route path=\"/teams/\" render={() => <Teams server={server} jwt={jwt} />} />\n          <Route path=\"/turf/\" render={() => <Turf server={server} jwt={jwt} />} />\n          <Route path=\"/questions/\" component={Questions} />\n          <Route path=\"/forms/\" component={Forms} />\n          <Route path=\"/map/\" render={() => <Map server={server} jwt={jwt} />} />\n          <Route path=\"/import/\" render={() => <ImportData server={server} jwt={jwt} />} />\n          <Route path=\"/jwt/\" component={Jwt} />\n        </Main>\n      </Root>\n    </Router>\n    );\n  }\n}\n\nconst Root = (props) => (\n  <div style={{display: 'flex'}} {...props}/>\n)\n\nconst Sidebar = (props) => (\n  <div style={{width: '22vw', height: '100vh', overlow: 'auto', background: '#eee'}} {...props}/>\n)\n\nconst SidebarItem = (props) => (\n  <div style={{whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden', padding: '5px 10px'}} {...props}/>\n)\n\nconst Main = (props) => (\n  <div style={{flex: 1, height: '100vh', overflow: 'auto'}}>\n    <div style={{padding: '20px'}} {...props}/>\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}