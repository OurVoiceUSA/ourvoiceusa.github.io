{"version":3,"sources":["common.js","components/Dashboard.js","components/Canvassers.js","components/Teams.js","components/Turf.js","components/Forms.js","components/Map.js","components/ImportData.js","components/Analytics.js","components/Settings.js","components/Jwt.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["TimeAgo","locale","en","us_states","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","_fetch","_x","_x2","_x3","_x4","_fetch2","apply","this","arguments","_callee6","server","uri","method","body","regenerator_default","a","wrap","_context6","prev","next","hostname","console","error","abrupt","fetch","headers","Authorization","jwt","Content-Type","JSON","stringify","stop","Root","props","react_default","createElement","Object","assign","style","display","Sidebar","width","height","overlow","background","SidebarItem","whiteSpace","textOverflow","overflow","padding","Main","flex","Icon","index_es","data-tip","icon","iconName","Loader","react_loader_spinner_default","type","RootLoader","flag","common_Loader","common_Icon","faSync","color","onClick","func","children","_searchStringCanvasser","c","name","email","location","admin","toLowerCase","_loadCanvasser","_x5","_x6","_loadCanvasser2","_callee7","refer","id","canvasser","res","_context7","state","sent","json","t0","warn","CardCanvasser","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTeamsChange","_ref","asyncToGenerator","mark","_callee","selectedTeamsOption","prior","now","ni","n","pi","p","_context","map","e","value","keys","t1","done","indexOf","teamName","cId","t2","t3","assertThisInitialized","setState","selectedFormsOption","selectedTurfOption","t4","_x7","handleFormsChange","_ref2","_callee2","_context2","fId","_x8","handleTurfChange","_ref3","_callee3","_context3","turfName","_x9","_loadData","_callee4","forms","turf","teams","teamOptions","formOptions","turfOptions","f","t","_context4","loading","_loadForms","_loadTurf","_loadTeams","label","forEach","push","common_CardTeam","key","ass","common_CardForm","form","length","common_CardTurf","_lockCanvasser","_ref5","_callee5","_context5","_x10","_x11","inherits","createClass","ReactTooltip","rebuild","_this2","timeAgo","es_default","src","avatar","loader","unloader","faUser","edit","Link","to","thisCanvasser","common_CanvasserBadges","format","Date","last_seen","common_CardCanvasserFull","Component","CardTeam","faUsers","CardCanvasserFull","locked","phone","direct","react_select_esm","onChange","options","isMulti","isSearchable","placeholder","CanvasserBadges","badges","faCrown","faBan","ready","faCheckCircle","faExclamationTriangle","_loadCanvassers","_x12","_x13","_loadCanvassers2","_callee8","canvassers","_context8","CardTurf","faStreetView","_x14","_x15","_loadTurf2","_callee9","data","_context9","CardForm","faClipboard","_x16","_loadTeams2","_callee10","_context10","_x17","_x18","_loadForms2","_callee11","_context11","_loadAddresses","_x19","_loadAddresses2","_callee12","addresses","_context12","nodes","PlacesAutocomplete","react_places_autocomplete_dist_default","addressSearch","_ref6","getInputProps","getSuggestionItemProps","suggestions","className","suggestion","description","App","common_RootLoader","search","onTypeSearch","bind","event","target","denied","unassigned","includes","common_CardCanvasser","HashRouter","Route","exact","path","render","match","params","handleMembersChange","selectedMembersOption","handleFormChange","selectedFormOption","_saveTeam","saving","thisTeam","_deleteTeam","window","href","_createTeam","addTeamForm","getValue","memberOptions","formServerItems","struct","String","formServerOptions","fields","Teams_Team","team","main_default","Form","ref","onChangeTeam","Team","submitAddress","address","pos","geocodeByAddress","getLatLng","addressCoords","handleDrawChange","selectedDrawOption","selectedStateOption","selectedTypeOption","selectedDistrictOption","importFileData","handleStateChange","handleTypeChange","handleDistrictChange","handleImportFiles","files","reader","FileReader","onload","result","readAsText","_deleteTurf","thisTurf","_createTurf","obj","geometry","addTurfForm","parse","circleToPolygon","lng","lat","Error","selectedTypeFetch","dist","objs","districtOptions","o","val","replace","onTypeAddress","_showDistrictOption","drawOptions","onChangeTurf","Turf_TurfOptions","_showSubmitButton","TurfOptions","stateOptions","k","onMenuClose","accept","common_PlacesAutocomplete","debounce","onSelect","rel","Modal","setAppElement","document","getElementById","customStyles","content","top","left","right","bottom","marginRight","transform","FTYPE","enums","TEXTBOX","Number","Boolean","SAND","addItem","help","premade","FullName","optional","Phone","Email","RegisteredToVote","PartyAffiliation","_createForm","formName","addFormForm","trim","questions","questions_order","order","mainForm","thisForm","customForm","customFormItems","openModal","closeModal","doAddCustom","_this$state","_this$state2","splice","forceUpdate","onChangeForm","margin","faPlusCircle","field","marginLeft","required","inputTypeToReadable","faTimesCircle","react_modal_lib_default","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","turfs","d","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","polygons","isGeolocationAvailable","isGeolocationEnabled","coords","access","longitude","latitude","geojson2polygons","google_maps_react_dist","google","zoom","center","idx","title","join","position","latlng","paths","strokeColor","strokeWeight","fillColor","fillOpacity","visible","GoogleApiWrapper","apiKey","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","HEADER","address1","address2","city","zip","preProcess","shift","pop","onHeadersSubmit","evt","preventDefault","setTimeout","FormOptions","h","maybe","FormSchema","onSubmit","react_csv_reader_default","onError","preProcessError","onFileLoaded","data01","v","data02","renderLabelContent","percent","x","y","midAngle","concat","textAnchor","toFixed","animation","PieChart","Legend","Pie","dataKey","cx","cy","startAngle","endAngle","outerRadius","entry","index","Cell","fill","Label","LabelList","innerRadius","paddingAngle","isAnimationActive","pathname","split","jwt_decode","localStorage","setItem","es_Route","Redirect","componentDidMount","cb_version","version","process","faTwitter","faFacebook","faGlobe","_loadKeys","aScript","google_maps_key","head","appendChild","doSave","ret","refs","ack","singHello","msg","text","cancelable","sm_oauth_url","get","status","dbx","user","queryString","getItem","connectForm","subtype","s","removeItem","common_Root","dist_default","common_Sidebar","getName","common_SidebarItem","faColumns","faMap","faFileUpload","faChartPie","faCog","faSignOutAlt","_logout","faAward","faGithub","common_Main","Dashboard_App","Canvassers_App","Teams_App","Turf_App","Forms_App","Map","ImportData_App","Analytics_App","Settings_App","Jwt_App","About_App","align","ReactDOM","src_App","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4c74066.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSync, faUser, faUsers, faCrown, faStreetView, faClipboard,\n  faExclamationTriangle, faCheckCircle, faBan\n} from '@fortawesome/free-solid-svg-icons';\n\nimport GooglePlacesAutocomplete from 'react-places-autocomplete';\nimport LoaderSpinner from 'react-loader-spinner';\nimport Select from 'react-select';\nimport Img from 'react-image';\nimport { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.locale(en);\n\nexport const us_states = {\n    \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AS\": \"American Samoa\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"DC\": \"District Of Columbia\",\n    \"FM\": \"Federated States Of Micronesia\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"GU\": \"Guam\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MH\": \"Marshall Islands\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PW\": \"Palau\",\n    \"PA\": \"Pennsylvania\",\n    \"PR\": \"Puerto Rico\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VI\": \"Virgin Islands\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\"\n};\n\nexport async function _fetch(server, uri, method, body) {\n  if (!method) method = 'GET';\n\n  if (!server.hostname) {\n    console.error(\"server is undefined in fetch\");\n    return;\n  }\n\n  return fetch('https://'+server.hostname+uri, {\n    method: method,\n    headers: {\n      'Authorization': 'Bearer '+server.jwt,\n      'Content-Type': 'application/json',\n    },\n    body: (body?JSON.stringify(body):null),\n  });\n}\n\nexport function _browserLocation(props) {\n  if (!props.isGeolocationAvailable || !props.isGeolocationEnabled) return {access: false};\n  if (props.coords) return {access: true, lng: props.coords.longitude, lat: props.coords.latitude};\n  return {access: true};\n}\n\nexport const Root = (props) => (\n  <div style={{display: 'flex'}} {...props}/>\n)\n\nexport const Sidebar = (props) => (\n  <div style={{width: '22vw', height: '100vh', overlow: 'auto', background: '#eee'}} {...props}/>\n)\n\nexport const SidebarItem = (props) => (\n  <div style={{whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden', padding: '5px 10px'}} {...props}/>\n)\n\nexport const Main = (props) => (\n  <div style={{flex: 1, height: '100vh', overflow: 'auto'}}>\n    <div style={{padding: '20px'}} {...props}/>\n  </div>\n)\n\nexport const Icon = (props) => (\n  <FontAwesomeIcon style={{width: 25}} data-tip={(props['data-tip']?props['data-tip']:props.icon.iconName)} {...props} />\n)\n\nexport const Loader = (props) => (\n  <LoaderSpinner type=\"ThreeDots\" {...props} />\n)\n\nexport const RootLoader = (props) => {\n  if (props.flag) return (<Loader />);\n  else return (\n    <div>\n      <Icon icon={faSync} color=\"green\" onClick={props.func} data-tip=\"Reload Data\" />\n      <div>{props.children}</div>\n    </div>\n  );\n}\n\nexport function _searchStringCanvasser(c) {\n    return (c.name+c.email+c.location+(c.admin?\"admin\":\"\")).toLowerCase();\n}\n\nexport async function _loadCanvasser(refer, id) {\n  let canvasser = {};\n  try {\n    let res = await _fetch(refer.state.server, '/canvass/v1/canvasser/get?id='+id);\n    canvasser = await res.json();\n  } catch (e) {\n    console.warn(e);\n  }\n  return canvasser;\n}\n\nexport class CardCanvasser extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      server: this.props.refer.props.server,\n      canvasser: this.props.canvasser,\n      selectedTeamsOption: null,\n      selectedFormsOption: {},\n      selectedTurfOption: {},\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.canvasser) this._loadData();\n    ReactTooltip.rebuild();\n  }\n\n  componentDidUpdate() {\n    ReactTooltip.rebuild();\n  }\n\n  handleTeamsChange = async (selectedTeamsOption) => {\n    try {\n\n      let prior = this.state.selectedTeamsOption.map((e) => {\n        return e.value;\n      });\n\n      let now = selectedTeamsOption.map((e) => {\n        return e.value;\n      });\n\n      // anything in \"now\" that isn't in \"prior\" gets added\n      for (let ni in now) {\n        let n = now[ni];\n        if (prior.indexOf(n) === -1) {\n          await _fetch(this.state.server, '/canvass/v1/team/members/add', 'POST', {teamName: n, cId: this.props.id});\n        }\n      };\n\n      // anything in \"prior\" that isn't in \"now\" gets removed\n      for (let pi in prior) {\n        let p = prior[pi];\n        if (now.indexOf(p) === -1) {\n          await _fetch(this.state.server, '/canvass/v1/team/members/remove', 'POST', {teamName: p, cId: this.props.id});\n        }\n      };\n\n      // refresh canvasser info\n      let canvasser = await _loadCanvasser(this, this.props.id);\n\n      this.setState({ selectedTeamsOption, selectedFormsOption: {}, selectedTurfOption: {}, canvasser });\n    } catch (e) {\n\n    }\n  }\n\n  handleFormsChange = async (selectedFormsOption) => {\n    try {\n      if (this.state.selectedFormsOption.value) {\n        await _fetch(this.state.server, '/canvass/v1/form/assigned/canvasser/remove', 'POST', {\n          fId: this.state.selectedFormsOption.value,\n          cId: this.props.id,\n        });\n      }\n      if (selectedFormsOption.value) {\n        await _fetch(this.state.server, '/canvass/v1/form/assigned/canvasser/add', 'POST', {\n          fId: selectedFormsOption.value,\n          cId: this.props.id,\n        });\n      }\n      // refresh canvasser info\n      let canvasser = await _loadCanvasser(this, this.props.id);\n      this.setState({canvasser, selectedFormsOption});\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  handleTurfChange = async (selectedTurfOption) => {\n    try {\n      if (this.state.selectedTurfOption.value) {\n        await _fetch(this.state.server, '/canvass/v1/turf/assigned/canvasser/remove', 'POST', {\n          turfName: this.state.selectedTurfOption.value,\n          cId: this.props.id,\n        });\n      }\n      if (selectedTurfOption.value) {\n        await _fetch(this.state.server, '/canvass/v1/turf/assigned/canvasser/add', 'POST', {\n          turfName: selectedTurfOption.value,\n          cId: this.props.id,\n        });\n      }\n      // refresh canvasser info\n      let canvasser = await _loadCanvasser(this, this.props.id);\n      this.setState({canvasser, selectedTurfOption});\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  _loadData = async () => {\n    let canvasser = {};\n\n    this.setState({loading: true})\n\n    try {\n       canvasser = await _loadCanvasser(this, this.props.id);\n    } catch (e) {\n      console.warn(e);\n    }\n\n    let forms = await _loadForms(this.props.refer);\n    let turf = await _loadTurf(this.props.refer);\n    let teams = await _loadTeams(this.props.refer);\n\n    let teamOptions = [];\n    let selectedTeamsOption = [];\n    let selectedFormsOption = {};\n    let selectedTurfOption = {};\n\n    let formOptions = [\n      {value: '', label: \"None\"},\n    ];\n\n    let turfOptions = [\n      {value: '', label: \"None\"},\n      {value: 'auto', label: \"Auto-cut turf with 1km of this canvasser's home address\"},\n    ];\n\n    teams.forEach((t) => {\n      teamOptions.push({value: t.name, label: (\n        <CardTeam key={t.name} t={t} />\n      )});\n      canvasser.ass.teams.forEach((a) => {\n        if (a.name === t.name) {\n          selectedTeamsOption.push({value: t.name, label: (\n            <CardTeam key={t.name} t={t} />\n          )});\n        }\n      });\n    });\n\n    forms.forEach((f) => {\n      formOptions.push({value: f.id, label: (<CardForm key={f.id} form={f} />)});\n    });\n\n    if (canvasser.ass.forms.length) {\n      let f = canvasser.ass.forms[0];\n      selectedFormsOption = {value: f.id, label: (<CardForm key={f.id} form={f} />)};\n    }\n\n    turf.forEach((t) => {\n      turfOptions.push({value: t.name, label: (<CardTurf key={t.id} turf={t} />)})\n    });\n\n    if (canvasser.ass.turf.length) {\n      let t = canvasser.ass.turf[0];\n      selectedTurfOption = {value: t.name, label: (<CardTurf key={t.id} turf={t} />)};\n    }\n\n    this.setState({canvasser, teamOptions, formOptions, turfOptions, selectedTeamsOption, selectedFormsOption, selectedTurfOption, loading: false});\n  }\n\n  _lockCanvasser = async (canvasser, flag) => {\n    try {\n      await _fetch(this.state.server, '/canvass/v1/canvasser/'+(flag?'lock':'unlock'), 'POST', {id: canvasser.id});\n    } catch (e) {\n      console.warn(e);\n    }\n    this._loadData();\n  }\n\n  render() {\n    const { canvasser } = this.state;\n\n    if (!canvasser || this.state.loading) {\n      return (<Loader />);\n    }\n\n    const timeAgo = new TimeAgo('en-US');\n    return (\n      <div>\n        <div style={{display: 'flex', padding: '10px'}}>\n          <div style={{padding: '5px 10px'}}>\n            <Img width={50} src={this.state.canvasser.avatar} loader={<Loader width={50} />} unloader={<Icon style={{width: 50, height: 50, color: \"gray\"}} icon={faUser} />} />\n          </div>\n          <div style={{flex: 1, overflow: 'auto'}}>\n            Name: {canvasser.name} {(this.props.edit?'':(<Link to={'/canvassers/'+canvasser.id} onClick={() => this.props.refer.setState({thisCanvasser: this.props.canvasser})}>view profile</Link>))}\n            <CanvasserBadges canvasser={canvasser} />\n            <br />\n            Location: {(canvasser.location?canvasser.location:'N/A')} <br />\n            Last Login: {timeAgo.format(new Date(canvasser.last_seen-30000))}\n          </div>\n        </div>\n        {this.props.edit?<CardCanvasserFull canvasser={canvasser} refer={this} />:''}\n      </div>\n    );\n  }\n}\n\nexport const CardTeam = (props) => (\n  <div style={{display: 'flex', padding: '10px'}}>\n    <div style={{padding: '5px 10px'}}>\n      <Icon style={{width: 50, height: 50, color: \"gray\"}} icon={faUsers} />\n    </div>\n    <div style={{flex: 1, overflow: 'auto'}}>\n      {props.t.name}\n    </div>\n  </div>\n);\n\nexport const CardCanvasserFull = (props) => (\n  <div>\n    <br />\n    {props.canvasser.locked?\n      (<button onClick={() => props.refer._lockCanvasser(props.canvasser, false)}>Restore Access</button>)\n    :\n      (<button onClick={() => props.refer._lockCanvasser(props.canvasser, true)}>Deny Access</button>)\n    }\n    <br />\n    Email: {(props.canvasser.email?props.canvasser.email:'N/A')}\n    <br />\n    Phone: {(props.canvasser.phone?props.canvasser.phone:'N/A')}\n    <br />\n    # of doors knocked: 0\n    <br />\n    <br />\n    {props.canvasser.ass.direct?\n    <div>\n      This canvasser is not assigned to any teams. To do so, you must remove the direct form and turf assignments below.\n    </div>\n    :\n    <div>\n      Teams this canvasser is a part of:\n      <Select\n        value={props.refer.state.selectedTeamsOption}\n        onChange={props.refer.handleTeamsChange}\n        options={props.refer.state.teamOptions}\n        isMulti={true}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    }\n    <br />\n    {props.refer.state.selectedTeamsOption.length?\n    <div>\n      Forms / Turf this users sees based on the above team(s):\n      <br />\n      {props.canvasser.ass.forms.map((f) => (<CardForm key={f.name} form={f} />))}\n      {props.canvasser.ass.turf.map((t) => (<CardTurf key={t.name} turf={t} />))}\n    </div>\n    :\n    <div>\n      Forms this canvasser is directly assigned to:\n      <Select\n        value={props.refer.state.selectedFormsOption}\n        onChange={props.refer.handleFormsChange}\n        options={props.refer.state.formOptions}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n      <br />\n      Turf this canvasser is directly assigned to:\n      <Select\n        value={props.refer.state.selectedTurfOption}\n        onChange={props.refer.handleTurfChange}\n        options={props.refer.state.turfOptions}\n        isSearchable={true}\n        placeholder=\"None\"\n      />\n    </div>\n    }\n\n  </div>\n)\n\nexport const CanvasserBadges = (props) => {\n  let badges = [];\n  let id = props.canvasser.id;\n\n  if (props.canvasser.admin) badges.push(<Icon icon={faCrown} color=\"gold\" key={id+\"admin\"} data-tip=\"Administrator\" />);\n  if (props.canvasser.locked) badges.push(<Icon icon={faBan} color=\"red\" key={id+\"locked\"} data-tip=\"Denied access\" />);\n  else {\n    if (props.canvasser.ass.ready) badges.push(<Icon icon={faCheckCircle} color=\"green\" key={id+\"ready\"} data-tip=\"Ready to Canvass\" />);\n    else badges.push(<Icon icon={faExclamationTriangle} color=\"red\" key={id+\"notready\"} data-tip=\"Not ready to canvass, check assignments\" />);\n  }\n\n  return badges;\n}\n\nexport async function _loadCanvassers(refer, teamName) {\n  let canvassers = [];\n\n  refer.setState({loading: true})\n\n  try {\n    let call = 'canvasser/list';\n    if (teamName) call = 'team/members/list?teamName='+teamName;\n\n    let res = await _fetch(refer.props.server, '/canvass/v1/'+call);\n    canvassers = await res.json();\n  } catch (e) {\n    console.warn(e);\n  }\n\n  refer.setState({loading: false});\n\n  return canvassers;\n}\n\nexport const CardTurf = (props) => (\n  <div style={{display: 'flex', padding: '10px'}}>\n    <div style={{padding: '5px 10px'}}>\n      <Icon style={{width: 50, height: 50, color: \"gray\"}} icon={faStreetView} />\n    </div>\n    <div style={{flex: 1, overflow: 'auto'}}>\n      {props.turf.name}\n    </div>\n  </div>\n)\n\nexport async function _loadTurf(refer, teamName) {\n  let turf = [];\n\n  refer.setState({loading: true})\n\n  try {\n    let call = 'turf/list';\n    if (teamName) call = 'team/turf/list?teamName='+teamName;\n    let res = await _fetch(refer.props.server, '/canvass/v1/'+call);\n    let data = await res.json();\n    turf = (data.data?data.data:[]);\n  } catch (e) {\n    console.warn(e);\n  }\n\n  refer.setState({loading: false});\n\n  return turf;\n}\n\nexport const CardForm = (props) => (\n  <div style={{display: 'flex', padding: '10px'}}>\n    <div style={{padding: '5px 10px'}}>\n      <Icon style={{width: 50, height: 50, color: \"gray\"}} icon={faClipboard} />\n    </div>\n    <div style={{flex: 1, overflow: 'auto'}}>\n      {props.form.name}\n    </div>\n  </div>\n)\n\nexport async function _loadTeams(refer) {\n  let teams = [];\n\n  try {\n    let res = await _fetch(refer.props.server, '/canvass/v1/team/list');\n    teams = await res.json();\n  } catch (e) {\n    console.warn(e);\n  }\n\n  return teams.data;\n}\n\nexport async function _loadForms(refer, teamName) {\n  let forms = [];\n\n  refer.setState({loading: true})\n\n  try {\n    let uri;\n\n    if (teamName) uri = 'team/form/list?teamName='+teamName;\n    else uri = 'form/list';\n\n    let res = await _fetch(refer.props.server, '/canvass/v1/'+uri);\n    let data = await res.json();\n    forms = (data.data?data.data:[]);\n  } catch (e) {\n    console.warn(e);\n  }\n\n  refer.setState({loading: false});\n\n  return forms;\n}\n\nexport async function _loadAddresses(refer) {\n  let addresses = {};\n  try {\n    let res = await _fetch(refer.props.server, '/canvass/v1/sync', 'POST', {nodes: {}});\n    addresses = await res.json();\n  } catch (e) {\n    console.warn(e)\n  }\n  return addresses;\n}\n\nexport const PlacesAutocomplete = (props) => (\n  <GooglePlacesAutocomplete {...props}>\n    {addressSearch}\n  </GooglePlacesAutocomplete>\n)\n\nconst addressSearch = ({ getInputProps, getSuggestionItemProps, suggestions, loading }) => (\n  <div className=\"autocomplete-root\">\n    <input {...getInputProps()} />\n    <div className=\"autocomplete-dropdown-container\">\n      {loading && <div>Loading...</div>}\n      {suggestions.map(suggestion => (\n        <div {...getSuggestionItemProps(suggestion)}>\n          <span>{suggestion.description}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\n\nimport { _fetch, RootLoader } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let data = {};\n\n    this.setState({loading: true})\n\n    try {\n      let res = await _fetch(this.props.server, '/canvass/v1/dashboard');\n\n      data = await res.json();\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({data: data, loading: false});\n  }\n\n  render() {\n    return (\n      <RootLoader flag={this.state.loading} func={this._loadData}>\n        {JSON.stringify(this.state.data)}\n      </RootLoader>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport { RootLoader, CardCanvasser, _loadCanvassers, _searchStringCanvasser } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      canvassers: [],\n      search: \"\",\n    };\n\n    this.onTypeSearch = this.onTypeSearch.bind(this);\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  onTypeSearch (event) {\n    this.setState({search: event.target.value.toLowerCase()})\n  }\n\n  _loadData = async () => {\n    this.setState({canvassers: await _loadCanvassers(this), search: \"\"});\n  }\n\n  render() {\n\n    let denied = [];\n    let ready = [];\n    let unassigned = [];\n\n    this.state.canvassers.forEach(c => {\n      if (this.state.search && !_searchStringCanvasser(c).includes(this.state.search)) return;\n      if (c.locked) {\n        denied.push(<CardCanvasser key={c.id} canvasser={c} refer={this} />)\n      } else {\n        if (c.ass.ready || c.ass.teams.length)\n          ready.push(<CardCanvasser key={c.id} canvasser={c} refer={this} />)\n        else\n          unassigned.push(<CardCanvasser key={c.id} canvasser={c} refer={this} />);\n      }\n    });\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/canvassers/\" render={() => (\n            <RootLoader flag={this.state.loading} func={() => this._loadData()}>\n              Search: <input type=\"text\" value={this.state.value} onChange={this.onTypeSearch} data-tip=\"Search by name, email, location, or admin\" />\n              <br />\n              {unassigned.length?\n              <div>\n                <h3>Unassigned Canvassers ({unassigned.length})</h3>\n                {unassigned}\n              </div>\n              :''}\n              <h3>Canvassers ({ready.length})</h3>\n              {ready}\n              {denied.length?\n              <div>\n                <h3>Denied access ({denied.length})</h3>\n                {denied}\n              </div>\n              :''}\n            </RootLoader>\n          )} />\n          <Route path=\"/canvassers/:id\" render={(props) => (\n            <CardCanvasser key={props.match.params.id} id={props.match.params.id} edit={true} refer={this} />\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport t from 'tcomb-form';\nimport Select from 'react-select';\n\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport { _fetch, RootLoader, Loader, Icon, CardCanvasser, _loadCanvassers,\n  CardTurf, _loadTurf, CardForm, _loadForms, _loadTeams, _searchStringCanvasser }\nfrom '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      saving: false,\n      selectedMembersOption: null,\n      selectedTurfOption: null,\n      selectedFormOption: null,\n      teams: [],\n      thisTeam: null,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Team Name',\n          error: 'You must enter a team name.',\n        },\n      },\n    };\n\n  }\n\n  onChangeTeam(addTeamForm) {\n    this.setState({addTeamForm})\n  }\n\n  handleMembersChange = (selectedMembersOption) => {\n    this.setState({ selectedMembersOption });\n  }\n\n  handleTurfChange = (selectedTurfOption) => {\n    this.setState({ selectedTurfOption });\n  }\n\n  handleFormChange = (selectedFormOption) => {\n    this.setState({ selectedFormOption });\n  }\n\n  _saveTeam = async () => {\n\n    this.setState({saving: true});\n\n    try {\n      await _fetch(this.props.server, '/canvass/v1/team/members/wipe', 'POST', {teamName: this.state.thisTeam});\n      await _fetch(this.props.server, '/canvass/v1/team/turf/wipe', 'POST', {teamName: this.state.thisTeam});\n      await _fetch(this.props.server, '/canvass/v1/team/form/wipe', 'POST', {teamName: this.state.thisTeam});\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.state.selectedMembersOption.map(async (c) => {\n      try {\n        await _fetch(this.props.server, '/canvass/v1/team/members/add', 'POST', {teamName: this.state.thisTeam, cId: c.id});\n      } catch (e) {\n        console.warn(e);\n      }\n    });\n\n    try {\n      await _fetch(this.props.server, '/canvass/v1/team/turf/add', 'POST', {\n        teamName: this.state.thisTeam,\n        turfName: this.state.selectedTurfOption.value,\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    try {\n      await _fetch(this.props.server, '/canvass/v1/team/form/add', 'POST', {\n        teamName: this.state.thisTeam,\n        fId: this.state.selectedFormOption.value,\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({saving: false});\n  }\n\n  _deleteTeam = async () => {\n    try {\n      await _fetch(this.props.server, '/canvass/v1/team/delete', 'POST', {name: this.state.thisTeam});\n    } catch (e) {\n      console.warn(e);\n    }\n    window.location.href = \"/HelloVoter/#/teams/\";\n    this._loadData();\n  }\n\n  _createTeam = async () => {\n    let json = this.addTeamForm.getValue();\n    if (json === null) return;\n\n    await _fetch(this.props.server, '/canvass/v1/team/create', 'POST', {name: json.name});\n\n    window.location.href = \"/HelloVoter/#/teams/\";\n    this._loadData();\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    this.setState({loading: true})\n\n    let teams = await _loadTeams(this);\n\n    this.setState({teams: teams});\n\n    // also load canvassers & turf & forms\n    let canvassers = await _loadCanvassers(this);\n    let turf = await _loadTurf(this);\n    let forms = await _loadForms(this);\n\n    let memberOptions = [];\n    let turfOptions = [];\n    let formOptions = [];\n\n    canvassers.forEach((c) => {\n      if (!c.locked && !c.ass.direct)\n        memberOptions.push({value: _searchStringCanvasser(c), id: c.id, label: (<CardCanvasser key={c.id} canvasser={c} refer={this} />)})\n    });\n\n    turf.forEach((t) => {\n      turfOptions.push({value: t.name, label: (<CardTurf key={t.name} turf={t} />)})\n    })\n\n    forms.forEach((f) => {\n      formOptions.push({value: f.id, label: (<CardForm key={f.id} form={f} />)})\n    })\n\n    this.setState({memberOptions, turfOptions, formOptions});\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/teams/\" render={() => (\n            <RootLoader flag={this.state.loading} func={this._loadData}>\n              {(this.state.loading?'loading':this.state.teams.map(t => <Team key={t.name} team={t} refer={this} />))}\n              <Link to={'/teams/add'}><button>Add Team</button></Link>\n            </RootLoader>\n          )} />\n          <Route exact={true} path=\"/teams/add\" render={() => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addTeamForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTeam(e)}\n                value={this.state.addTeamForm}\n              />\n              <button onClick={() => this._createTeam()}>\n                Submit\n              </button>\n            </div>\n          )} />\n          <Route path=\"/teams/edit/:name\" render={() => (\n            <div>\n              <h3>{this.state.thisTeam}</h3>\n              Canvassers:\n              <Select\n                value={this.state.selectedMembersOption}\n                onChange={this.handleMembersChange}\n                options={this.state.memberOptions}\n                isMulti={true}\n                isSearchable={true}\n                placeholder=\"Select team members to add\"\n              />\n              <br />\n              Turf:\n              <Select\n                value={this.state.selectedTurfOption}\n                onChange={this.handleTurfChange}\n                options={this.state.turfOptions}\n                isSearchable={true}\n                placeholder=\"Select turf for this team\"\n              />\n              <br />\n              Form:\n              <Select\n                value={this.state.selectedFormOption}\n                onChange={this.handleFormChange}\n                options={this.state.formOptions}\n                isSearchable={true}\n                placeholder=\"Select form for this team\"\n              />\n              <br />\n              {(this.state.saving?<Loader />:<button onClick={() => this._saveTeam()}>Save Team</button>)}\n              <br />\n              <br />\n              <br />\n              <button onClick={() => this._deleteTeam()}>Delete Team</button>\n            </div>\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Team = (props) => {\n  return (\n    <div style={{display: 'flex', padding: '10px'}}>\n      <div style={{padding: '5px 10px'}}>\n        <Icon style={{width: 35, height: 35, color: \"gray\"}} icon={faUsers} />\n      </div>\n      <div style={{flex: 1, overflow: 'auto'}}>\n        {props.team.name} (<Link to={'/teams/edit/'+props.team.name} onClick={async () => {\n          props.refer.setState({thisTeam: props.team.name, selectedMembersOption: null, selectedTurfOption: null, selectedFormOption: null});\n\n          let memberOptions = [];\n          let turfOptions = null;\n          let formOptions = null;\n\n          try {\n            let canvassers = await _loadCanvassers(props.refer, props.team.name);\n\n            canvassers.forEach((c) => {\n              if (!c.locked && !c.ass.direct)\n                memberOptions.push({value: c.name+c.email+c.location+(c.admin?\"admin\":\"\"), id: c.id, label: (<CardCanvasser key={c.id} canvasser={c} refer={props.refer} />)})\n            });\n          } catch (e) {\n            console.warn(e);\n          }\n\n          try {\n            let turf = await _loadTurf(props.refer, props.team.name);\n            if (turf.length)\n              turfOptions = {value: turf[0].name, label: (<CardTurf key={turf[0].name} turf={turf[0]} />)};\n          } catch (e) {\n            console.warn(e);\n          }\n\n          try {\n            let form = await _loadForms(props.refer, props.team.name);\n            if (form.length)\n              formOptions = {value: form[0].id, label: (<CardForm key={form[0].id} form={form[0]} />)};\n          } catch (e) {\n            console.warn(e);\n          }\n\n          props.refer.setState({\n            selectedMembersOption: memberOptions,\n            selectedTurfOption: turfOptions,\n            selectedFormOption: formOptions,\n          });\n\n        }}>edit</Link>)\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport {geocodeByAddress, getLatLng} from 'react-places-autocomplete';\nimport circleToPolygon from 'circle-to-polygon';\nimport t from 'tcomb-form';\nimport Select from 'react-select';\n\nimport { _fetch, PlacesAutocomplete, RootLoader, Loader, CardTurf, _loadTurf, us_states } from '../common.js';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      saving: false,\n      selectedDrawOption: null,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      districtOptions: [],\n      turf: [],\n      thisTurf: {},\n      importFileData: null,\n      address: \"\",\n      addressCoords: null,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Turf Name',\n          error: 'You must enter a turf name.',\n        },\n      },\n    };\n\n    this.onTypeAddress = (address) => this.setState({ address })\n  }\n\n  submitAddress = async (address) => {\n    this.setState({address})\n    try {\n      let res = await geocodeByAddress(address);\n      let pos = await getLatLng(res[0]);\n      this.setState({addressCoords: pos});\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  onChangeTurf(addTurfForm) {\n    this.setState({addTurfForm})\n  }\n\n  handleDrawChange = (selectedDrawOption) => {\n    // reset other states\n    this.setState({\n      selectedDrawOption,\n      selectedStateOption: null,\n      selectedTypeOption: null,\n      selectedDistrictOption: null,\n      importFileData: null,\n      addressCoords: null,\n      address: \"\",\n     });\n  }\n\n  handleStateChange = (selectedStateOption) => {\n    this.setState({ selectedStateOption });\n  }\n\n  handleTypeChange = (selectedTypeOption) => {\n    this.setState({ selectedTypeOption });\n  }\n\n  handleDistrictChange = (selectedDistrictOption) => {\n    this.setState({ selectedDistrictOption });\n  }\n\n  handleImportFiles = (files: FileList) => {\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      this.setState({importFileData: event.target.result});\n    };\n    reader.readAsText(files[0]);\n  }\n\n  _showDistrictOption() {\n    if (!this.state.selectedTypeOption) return false;\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n      case 'sldu':\n      case 'sldl':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  _showSubmitButton() {\n    if (!this.state.selectedDrawOption) return false;\n    if (this.state.selectedTypeOption && this.state.selectedTypeOption.value === \"state\") return true;\n    if (this._showDistrictOption() && this.state.selectedDistrictOption) return true;\n    if (this.state.importFileData !== null) return true;\n    if (this.state.addressCoords !== null) return true;\n    return false;\n  }\n\n  _deleteTurf = async () => {\n    try {\n      await _fetch(this.props.server, '/canvass/v1/turf/delete', 'POST', {name: this.state.thisTurf.name});\n    } catch (e) {\n      console.warn(e);\n    }\n    this._loadTurf(this);\n    window.location.href = \"/HelloVoter/#/turf/\";\n  }\n\n  _createTurf = async () => {\n    let json = this.addTurfForm.getValue();\n    if (json === null) return;\n\n    this.setState({saving: true});\n    let obj = {};\n\n    if (this.state.importFileData !== null) {\n      try {\n        obj = JSON.parse(this.state.importFileData);\n      } catch (e) {\n        console.warn(e);\n        return;\n      }\n    } else if (this.state.selectedDrawOption.value === \"radius\") {\n      obj = circleToPolygon([this.state.addressCoords.lng,this.state.addressCoords.lat],1000);\n    } else {\n      let uri;\n      let state = this.state.selectedStateOption.value;\n\n      switch (this.state.selectedTypeOption.value) {\n        case 'state':\n          uri = 'states/'+state+'/shape.geojson';\n          break;\n        case 'cd':\n          // TODO: handle the fact there are new years with less in them\n          uri = 'cds/2016/'+this.state.selectedDistrictOption.value+'/shape.geojson';\n          break;\n        case 'sldu':\n          uri = 'states/'+state+'/sldu/'+this.state.selectedDistrictOption.value+'.geojson';\n          break;\n        case 'sldl':\n          uri = 'states/'+state+'/sldl/'+this.state.selectedDistrictOption.value+'.geojson';\n          break;\n        default:\n          throw new Error(\"unknown selectedTypeOption\");\n      }\n\n      try {\n        let res = await fetch ('https://raw.githubusercontent.com/OurVoiceUSA/districts/gh-pages/'+uri)\n        obj = await res.json();\n      } catch (e) {\n        console.warn(e);\n        return;\n      }\n    }\n\n    try {\n      let geometry;\n\n      if (obj.geometry) geometry = obj.geometry;\n      else geometry = obj;\n\n      await _fetch(this.props.server, '/canvass/v1/turf/create', 'POST', {\n        name: json.name,\n        geometry: geometry,\n      });\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoter/#/turf/\";\n    this._loadTurf();\n  }\n\n  componentDidMount() {\n    this._loadTurf();\n  }\n\n  selectedTypeFetch = async () => {\n    let uri;\n\n    if (!this.state.selectedTypeOption) return;\n\n    this.setState({districtOptions: []})\n\n    let state = this.state.selectedStateOption.value;\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n        // TODO: handle the fact there are new years with less in them\n        uri = 'cds/2016/';\n        break;\n      case 'sldu':\n        uri = 'states/'+state+'/sldu/';\n        break;\n      case 'sldl':\n        uri = 'states/'+state+'/sldl/';\n        break;\n      default:\n        return;\n    }\n\n    let res = await fetch('https://api.github.com/repos/OurVoiceUSA/districts/contents/'+uri);\n\n    let dist = [];\n    let objs = await res.json();\n\n    switch (this.state.selectedTypeOption.value) {\n      case 'cd':\n        objs.forEach((o) => {\n          if (o.name.includes(this.state.selectedStateOption.value)) dist.push({value: o.name, label: o.name});\n          return;\n        });\n        break;\n      default:\n        objs.forEach((o) => {\n          let val = o.name.replace('.geojson', '');\n          dist.push({value: val, label: val});\n        });\n      }\n\n    this.setState({districtOptions: dist});\n\n  }\n\n  _loadTurf = async () => {\n    this.setState({loading: true})\n    let turf = await _loadTurf(this);\n    this.setState({loading: false, turf: turf})\n  }\n\n  render() {\n\n    let drawOptions = [\n      {value: 'select', label: 'Select from legislative boundary'},\n      {value: 'import', label: 'Import GeoJSON shape file'},\n      {value: 'radius', label: 'Area surrounding an address'},\n      {value: 'draw', label: 'Manually draw with your mouse'},\n    ];\n\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/turf/\" render={() => (\n            <RootLoader flag={this.state.loading} func={this._loadTurf}>\n              {(this.state.loading?'loading':this.state.turf.map(t => <CardTurf key={t.name} turf={t} refer={this} />))}\n              <Link to={'/turf/add'}><button>Add Turf</button></Link>\n            </RootLoader>\n          )} />\n          <Route exact={true} path=\"/turf/add\" render={() => (\n            <div>\n              Turf Name:\n              <t.form.Form\n                ref={(ref) => this.addTurfForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeTurf(e)}\n                value={this.state.addTurfForm}\n              />\n\n              <br />\n              Method of generating turf:\n              <Select\n                value={this.state.selectedDrawOption}\n                onChange={this.handleDrawChange}\n                options={drawOptions}\n                placeholder=\"Select method\"\n              />\n\n              <TurfOptions refer={this} />\n\n              {this._showSubmitButton()?\n              <div><br />\n                <button onClick={() => this._createTurf()}>\n                  Submit\n                </button>\n              </div>\n              :''}\n            </div>\n          )} />\n          <Route path=\"/turf/view/:name\" render={() => (\n            <div>\n              <h3>{this.state.thisTurf.name}</h3>\n              {this.state.thisTurf.geometry}\n              <br />\n              <br />\n              <br />\n              <button onClick={() => this._deleteTurf()}>Delete Turf</button>\n            </div>\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst TurfOptions = (props) => {\n  if (!props.refer.state.selectedDrawOption) return (<br />);\n\n  let stateOptions = [];\n  Object.keys(us_states).map((k) => stateOptions.push({value: k, label: us_states[k]}));\n\n  let typeOptions = [\n    {value: 'state', label: 'State'},\n    {value: 'cd', label: 'Congressional'},\n    {value: 'sldu', label: 'State Senate'},\n    {value: 'sldl', label: 'State House'},\n  ];\n\n  switch (props.refer.state.selectedDrawOption.value) {\n    case \"select\":\n      return (\n        <div>\n          <div><br />\n            State or region:\n            <Select\n              value={props.refer.state.selectedStateOption}\n              onChange={props.refer.handleStateChange}\n              options={stateOptions}\n              isSearchable={true}\n              placeholder=\"Select state or region\"\n            />\n          </div>\n          {props.refer.state.selectedStateOption?\n          <div><br />\n            District Type:\n            <Select\n              value={props.refer.state.selectedTypeOption}\n              onChange={props.refer.handleTypeChange}\n              onMenuClose={props.refer.selectedTypeFetch}\n              options={typeOptions}\n              isSearchable={true}\n              placeholder=\"Select district for this turf\"\n            />\n          </div>\n          :''}\n\n          {props.refer._showDistrictOption()?\n          <div><br />\n            District Number:\n            {props.refer.state.districtOptions.length?\n            <Select\n              value={props.refer.state.selectedDistrictOption}\n              onChange={props.refer.handleDistrictChange}\n              options={props.refer.state.districtOptions}\n              isSearchable={true}\n              placeholder=\"Select district for this turf\"\n            />\n            :<Loader />}\n          </div>\n          :''}\n        </div>\n      );\n    case \"import\":\n      return (\n        <div><br />\n          <input type=\"file\" accept=\".geojson,.json\" onChange={ (e) => props.refer.handleImportFiles(e.target.files) } />\n        </div>\n      );\n    case \"radius\":\n      return (\n        <div><br />\n          Type your address:\n          <PlacesAutocomplete\n            debounce={500}\n            value={props.refer.state.address}\n            onChange={props.refer.onTypeAddress}\n            onSelect={props.refer.submitAddress}\n          />\n        </div>\n      );\n    case \"draw\":\n      return (\n        <div><br />\n          Use a <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://google-developers.appspot.com/maps/documentation/utils/geojson/\">GeoJSON Draw Tool</a>,\n          save the file, and then select the \"Import GeoJSON shape file\" option.\n        </div>\n      );\n    default:\n      return (<div>Unknown generation method.</div>);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport t from 'tcomb-form';\n\nimport { faTimesCircle, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { _fetch, RootLoader, CardForm, Icon, Loader, _loadForms } from '../common.js';\n\nModal.setAppElement(document.getElementById('root'));\n\nconst customStyles = {\n  content : {\n    top                   : '15%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nconst FTYPE = t.enums({\n  'String': 'Text Input',\n  'TEXTBOX': 'Large Text Box',\n  'Number': 'Number',\n  'Boolean': 'On/Off Switch',\n  'SAND': 'Agree/Disagree',\n//  'List': 'Select from List',\n}, 'FTYPE');\n\nvar addItem = {\n  key: t.String,\n  label: t.String,\n  type: FTYPE,\n};\n\nvar options = {\n  fields: {\n    key: {\n      label: 'Input Key',\n      help: 'The spreadsheet column name.',\n    },\n    label: {\n      label: 'Input Label',\n      help: 'Label the user sees on the form.',\n    },\n    type: {\n      help: 'The type of input the user can enter.',\n    },\n  },\n};\n\nvar premade = {\n  'FullName': { label: 'Full Name', type: 'String', optional: true },\n  'Phone': { label: 'Phone Number', type: 'Number', optional: true },\n  'Email': { label: 'Email Address', type: 'String', optional: true },\n  'RegisteredToVote': { label: 'Are you registered to vote?', type: 'Boolean', optional: true },\n  'PartyAffiliation': { label: 'Party Affiliation', type: 'List', optional: true,\n    options: [\n      'No Party Preference',\n      'Democratic',\n      'Republican',\n      'Green',\n      'Libertarian',\n      'Other',\n    ]},\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // TODO: this is only for brand new forms\n    let fields = JSON.parse(JSON.stringify(premade)); // deep copy\n    let order = Object.keys(fields);\n    this.mainForm = t.struct({\n      'name': t.String,\n    });\n\n    this.state = {\n      loading: true,\n      forms: [],\n      thisForm: {},\n      fields: fields,\n      order: order,\n      customForm: null,\n    };\n\n    this.formServerItems = t.struct({\n      name: t.String,\n    });\n\n    this.customFormItems = t.struct(addItem);\n\n    this.formServerOptions = {\n      fields: {\n        name: {\n          label: 'Form Name',\n          error: 'You must enter a form name.',\n        },\n      },\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.doAddCustom = this.doAddCustom.bind(this);\n  }\n\n  openModal() {\n    this.setState({customForm: t.struct(addItem)})\n  }\n\n  closeModal() {\n    this.setState({customForm: null});\n  }\n\n  doAddCustom() {\n    let { fields, order } = this.state;\n\n    let ref = this.customForm.getValue();\n    if (ref === null) return;\n    let json = JSON.parse(JSON.stringify(ref)); // deep copy\n\n    let key = json.key;\n    delete json.key;\n    json.optional = true; // backwards compatability\n\n    // check for duplicate keys\n    if (fields[key]) {\n      //return Alert.alert('Error', 'Duplicate Input Key. Change your Input Key to add this item.', [{text: 'OK'}], { cancelable: false });    }\n      console.warn(\"Duplicate\");\n      return;\n    }\n\n    fields[key] = json;\n    order[order.length] = key;\n\n    this.setState({customForm: null, fields: fields, order: order});\n\n  }\n\n  doShowCustom() {\n    this.setState({customForm: t.struct(addItem)});\n  }\n\n  inputTypeToReadable(type) {\n    switch (type) {\n      case 'String': return 'Text Input';\n      case 'TEXTBOX': return 'Text Box';\n      case 'Number': return 'Number';\n      case 'Boolean': return 'On/Off Switch';\n      case 'SAND': return 'Agree/Disagree';\n      case 'List': return 'Select from List';\n      default: return type;\n    }\n  }\n\n  rmField(obj) {\n    let { fields, order } = this.state;\n    for (let f in fields) {\n      if (fields[f] === obj) {\n        delete fields[f];\n        order.splice(order.indexOf(f), 1);\n      }\n    }\n    this.setState({fields, order});\n    this.forceUpdate();\n  }\n\n  onChange(value) {\n    if (value.type === 'List') value = t.String; // do something...\n  }\n\n  onChangeForm(addFormForm) {\n    this.setState({addFormForm})\n  }\n\n  componentDidMount() {\n    this._loadForms();\n  }\n\n  _loadForms = async () => {\n    this.setState({forms: await _loadForms(this)});\n  }\n\n  _createForm = async () => {\n    let json = this.addFormForm.getValue();\n    if (json === null) return;\n\n    this.setState({saving: true});\n\n    // get rid of ending whitespace\n    let formName = json.name.trim();\n\n    // disallow anything other than alphanumeric and a few other chars\n    if (!formName.match(/^[a-zA-Z0-9\\-_ ]+$/)) {\n      console.warn('From name can only contain alphanumeric characters, and spaces and dashes.');\n      return;\n    }\n\n    // max length\n    if (formName.length > 255) {\n      console.warn('Form name cannot be longer than 255 characters.');\n      return;\n    }\n\n    // make sure this name doesn't exist\n    try {\n\n      let obj;\n\n      obj = {\n        name: formName,\n        questions: this.state.fields,\n        questions_order: this.state.order,\n      };\n\n      await _fetch(this.props.server, '/canvass/v1/form/create', 'POST', obj);\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({saving: false});\n\n    window.location.href = \"/HelloVoter/#/forms/\";\n    this._loadForms();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact={true} path=\"/forms/\" render={() => (\n            <RootLoader flag={this.state.loading} func={() => this._loadForms()}>\n              {this.state.forms.map(f => (<CardForm key={f.id} form={f} refer={this} />))}\n              <Link to={'/forms/add'}><button>Add Form</button></Link>\n            </RootLoader>\n          )} />\n          <Route path=\"/forms/add\" render={(props) => (\n            <div>\n              <t.form.Form\n                ref={(ref) => this.addFormForm = ref}\n                type={this.formServerItems}\n                options={this.formServerOptions}\n                onChange={(e) => this.onChangeForm(e)}\n                value={this.state.addFormForm}\n              />\n\n              <div style={{margin: 25}}>Items in your Canvassing form: <button onClick={this.openModal}><Icon icon={faPlusCircle} /> Add Item</button></div>\n\n              {Object.keys(this.state.fields).map((f) => {\n                let field = this.state.fields[f];\n                return (\n                  <li key={f} style={{marginLeft: 25}}>{field.label+(field.required?' *':'')} : {this.inputTypeToReadable(field.type)} <Icon icon={faTimesCircle} color=\"red\" /></li>\n                );\n              })}\n\n              {this.state.saving?\n              <Loader />\n              :\n              <button style={{margin: 25}} onClick={() => this._createForm()}>\n                Create Form\n              </button>\n              }\n\n              <Modal\n                isOpen={(this.state.customForm !== null)}\n                onAfterOpen={this.afterOpenModal}\n                onRequestClose={this.closeModal}\n                style={customStyles}\n                contentLabel=\"Add item to form\"\n              >\n              <t.form.Form\n                ref={(ref) => this.customForm = ref}\n                type={this.customFormItems}\n                options={options}\n                onChange={this.onChange}\n                value={this.state.customForm}\n              />\n                <button onClick={this.doAddCustom}>Add this item</button>\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                <button onClick={() => this.setState({customForm: null})}>Dismiss</button>\n              </Modal>\n            </div>\n          )} />\n          <Route path=\"/forms/edit/:id\" render={(props) => (\n            <CardForm key={this.state.thisForm.id} form={this.state.thisForm} refer={this} />\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport {Map, InfoWindow, Marker, Polygon, GoogleApiWrapper} from 'google-maps-react';\nimport {geojson2polygons} from 'ourvoiceusa-sdk-js';\nimport {geolocated} from 'react-geolocated';\n\nimport { _browserLocation, _loadTurf, _loadAddresses } from '../common.js';\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      turfs: [],\n      addresses: [],\n      showingInfoWindow: false,\n      selectedPlace: {},\n    };\n  }\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  _loadData = async () => {\n    let addresses = [];\n\n    let turfs = await _loadTurf(this);\n    let data = (await _loadAddresses(this)).nodes;\n\n    if (!data) data = {};\n\n    // only care about address objects\n    Object.keys(data).forEach((d) => {\n      if (data[d] && data[d].type === \"address\") {\n        addresses.push(data[d]);\n      }\n    })\n\n    this.setState({turfs, addresses});\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  };\n\n  render() {\n    let polygons = [];\n    const { addresses } = this.state;\n\n    let location = _browserLocation(this.props);\n\n    this.state.turfs.forEach((c) => {\n      geojson2polygons(JSON.parse(c.geometry)).forEach((p) => polygons.push(p));\n    });\n\n    return (\n      <Map google={this.props.google} zoom={14} center={location} onClick={this.onMapClicked}>\n        {addresses.map((a, idx) => (\n          <Marker\n            key={idx}\n            onClick={this.onMarkerClick}\n            title={a.address.join(\" \")}\n            position={{lat: a.latlng.latitude, lng: a.latlng.longitude}} />\n        ))}\n        {polygons.map((p, idx) => (\n          <Polygon\n            key={idx}\n            paths={p}\n            strokeColor=\"#0000FF\"\n            strokeWeight={5}\n            fillColor=\"#000000\"\n            fillOpacity={0} />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}>\n          <div>\n            <h1>{this.state.selectedPlace.title}</h1>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper((props) => ({apiKey: props.apiKey}))(geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(App));\n","import React, { Component } from 'react';\n\nimport CSVReader from 'react-csv-reader';\nimport t from 'tcomb-form';\n\nimport { Loader } from '../common.js';\n\nconst HEADER = t.enums({\n  'address1': 'Address 1',\n  'address2': 'Address 2',\n  'city': 'City',\n  'state': 'State',\n  'zip': 'Zip Code',\n}, 'HEADER');\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      data: null,\n      headers: [],\n    };\n  }\n\n  preProcessError(e) {\n    console.warn(\"BOOO = \"+e);\n  }\n\n  preProcess = async (data) => {\n    let headers = data.shift();\n    data.pop();\n\n    this.setState({data, headers});\n  }\n\n  onHeadersSubmit = (evt) => {\n    evt.preventDefault();\n\n  /*\n    const value = this.refs.form.getValue();\n\n    if (value) {\n      // required import fields\n      let address1 = null;\n      let address2 = null;\n      let city = null;\n      let state = null;\n      let zip = null;\n\n      for (let val in value) {\n        let v = value[val];\n        if (v === 'address1') address1 = val;\n        if (v === 'address2') address2 = val;\n        if (v === 'city') city = val;\n        if (v === 'state') state = val;\n        if (v === 'zip') zip = val;\n      }\n\n      if (address1 == null || address2 == null || city == null || state == null || zip == null) {\n        this.setState({formError: 'All address elements must be assigned'});\n        return;\n      }\n\n      this.processData(address1, address2, city, state, zip);\n    }\n  */\n\n    this.setState({loading: true});\n    // fake data loaded after 3 seconds\n    setTimeout(() => this.setState({loading: false, headers: []}), 3000);\n\n  }\n\n  render() {\n\n    if (this.state.loading) return (<Loader />);\n\n    if (this.state.headers.length) {\n      let obj = {};\n\n      let FormOptions = {fields: {}};\n\n      for (let h in this.state.headers) {\n        obj[h] = t.maybe(HEADER);\n        FormOptions.fields[h] = {label: this.state.headers[h]};\n      }\n\n      let FormSchema = t.struct(obj);\n\n      return (\n        <div>\n          Assign each header to its data type <br />\n\n          <form onSubmit={this.onHeadersSubmit}>\n            <t.form.Form ref=\"form\" type={FormSchema} options={FormOptions} />\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            </div>\n          </form>\n\n          <hr />\n            NOTE: This import tool does not work on all voter files, as there is no standard format.\n            We do our best to accommodate the most common patterns. If your import doesn't work,&nbsp;\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoter/issues/new\">\n            submit an issue</a> and a volunteer programmer can work to fix the issue in the future.\n            If you need the import done now, contact someone you know who's good with Microsoft&copy; Excel\n            or LibreOffice&copy; and they can reformat your voter file so it works with this import tool.\n        </div>\n        );\n    }\n\n    return (\n      <CSVReader\n        label=\"Data Importa\"\n        onError={this.preProcessError}\n        onFileLoaded={this.preProcess}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport {PieChart, Pie, Cell, Legend, Label, LabelList} from 'recharts';\n\nconst data01 = [\n  { name: 'Republican', value: 400, v: 89, color: 'red' },\n  { name: 'Democratic', value: 300, v: 100 },\n  { name: 'UUP', value: 200, v: 200 },\n  { name: 'Unaffiliated', value: 200, v: 20 },\n];\n\nconst data02 = [\n  { name: 'Republican', value: 2400 },\n  { name: 'Democratic', value: 4567 },\n  { name: 'UUP', value: 1398 },\n  { name: 'Unaffiliated', value: 9800 },\n];\n\nconst renderLabelContent = (props) => {\n  const { value, percent, x, y, midAngle } = props;\n\n  return (\n    <g transform={`translate(${x}, ${y})`} textAnchor={ (midAngle < -90 || midAngle >= 90) ? 'end' : 'start'}>\n      <text x={0} y={0}>{`Count: ${value}`}</text>\n      <text x={0} y={20}>{`(Percent: ${(percent * 100).toFixed(2)}%)`}</text>\n    </g>\n  );\n};\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animation: true,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Analytics</h3>\n        <PieChart width={800} height={400}>\n          <Legend />\n          <Pie\n            data={data01}\n            dataKey=\"value\"\n            cx={200}\n            cy={200}\n            startAngle={180}\n            endAngle={0}\n            outerRadius={80}\n            label\n          >\n            {\n              data01.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={[\"red\",\"blue\",\"yellow\",\"grey\"][index]} />\n              ))\n            }\n            <Label value=\"Canvassing\" position=\"outside\" />\n            <LabelList position=\"outside\" />\n          </Pie>\n          <Pie\n            data={data02}\n            dataKey=\"value\"\n            cx={600}\n            cy={200}\n            startAngle={180}\n            endAngle={-180}\n            innerRadius={60}\n            outerRadius={80}\n            label={renderLabelContent}\n            paddingAngle={5}\n            isAnimationActive={this.state.animation}\n          >\n            {\n              data02.map((entry, index) => (\n                <Cell key={`slice-${index}`} fill={[\"red\",\"blue\",\"yellow\",\"grey\"][index]} />\n              ))\n            }\n            <Label width={50} position=\"center\">\n              Agreed with you\n            </Label>\n          </Pie>\n        </PieChart>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class App extends Component {\n  render() {\n    return (<div>Settings Component</div>);\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Route, Redirect } from 'react-router'\nimport jwt_decode from 'jwt-decode';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let jwt;\n\n    try {\n      jwt = this.props.location.pathname.split('/').pop();\n      jwt_decode(jwt);\n    } catch (e) {\n      console.warn(\"Unable to extract jwt from URI: \"+e);\n      jwt = 'error';\n    }\n\n    this.state = {jwt: jwt};\n    this.props.refer.setState({jwt: jwt});\n    localStorage.setItem('jwt', jwt);\n  }\n\n  render() {\n    if (this.state.jwt === 'error') return (<div>There was an error parsing the jwt</div>);\n\n    return (\n      <Route render={() => (\n        <Redirect to=\"/\" />\n      )} />\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\n\nimport { _fetch, Icon } from '../common.js';\n\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cb_version: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    let data = {};\n    try {\n      let res = await _fetch(this.props.server, '/canvass/v1/dashboard');\n\n      data = await res.json();\n    } catch (e) {\n      console.warn(e);\n    }\n\n    this.setState({cb_version: (data.version?data.version:'unknown')});\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{process.env.REACT_APP_NAME} version {process.env.REACT_APP_VERSION}</div>\n        <div>{(this.state.cb_version?'canvass-broker version '+this.state.cb_version:<Loader height={15} type=\"ThreeDots\" />)}</div>\n        <div>&copy; 2018, Our Voice USA, a 501(c)(3) Non-Profit Organization. Not for any candidate or political party.</div>\n        <div>This program is free software; refer to our <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoter/blob/master/LICENSE\">License</a> for more details.</div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/OurVoiceUSA\"><Icon icon={faTwitter} /> @OurVoiceUSA</a></div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/OurVoiceUsa\"><Icon icon={faFacebook} /> @OurVoiceUSA</a></div>\n        <div><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ourvoiceusa.org/\"><Icon icon={faGlobe} /> ourvoiceusa.org</a></div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport t from 'tcomb-form';\nimport jwt_decode from 'jwt-decode';\nimport queryString from 'query-string';\nimport ReactTooltip from 'react-tooltip';\n\nimport Dashboard from './components/Dashboard';\nimport Canvassers from './components/Canvassers';\nimport Teams from './components/Teams';\nimport Turf from './components/Turf';\nimport Forms from './components/Forms';\nimport Map from './components/Map';\nimport ImportData from './components/ImportData';\nimport Analytics from './components/Analytics';\nimport Settings from './components/Settings';\nimport Jwt from './components/Jwt';\nimport About from './components/About';\n\nimport { _fetch, Root, Sidebar, SidebarItem, Main, Icon } from './common.js';\n\nimport { faColumns, faUser, faUsers, faMap, faGlobe, faClipboard, faChartPie,\n         faFileUpload, faSignOutAlt, faAward, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const v = queryString.parse(window.location.search);\n\n    this.state = {\n      server: {\n        hostname: localStorage.getItem('server'),\n        jwt: localStorage.getItem('jwt'),\n      },\n      connectForm: {server: v.server},\n    };\n\n    this.formServerItems = t.struct({\n      server: t.String,\n      ack: t.subtype(t.Boolean, function (s) { return s }), // boolean that fails validation if not selected\n    });\n\n    this.formServerOptions = {\n      fields: {\n        server: {\n          label: 'Server Domain Name',\n          help: 'Enter the domain name of the server you wish to connect to.',\n          error: 'You must enter a domain name.',\n        },\n        ack: {\n          label: 'Terms of Use',\n          help: 'By checking this you acknowledge that the server to which you are connecting is not affiliated with Our Voice USA and the data you send and receive is governed by that server\\'s terms of use.',\n          error: 'You must acknowledge the terms of use.',\n        },\n      },\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.doSave = this.doSave.bind(this);\n\n  }\n\n  componentDidMount() {\n    this._loadKeys();\n  }\n\n  _loadKeys = async () => {\n    if (!this.state.server.hostname) return;\n\n    let res = await _fetch(this.state.server, '/canvass/v1/google_maps_key')\n    let data = await res.json();\n\n    // load google places API\n    var aScript = document.createElement('script');\n    aScript.type = 'text/javascript';\n    aScript.src = \"https://maps.googleapis.com/maps/api/js?key=\"+data.google_maps_key+\"&libraries=places\";\n    document.head.appendChild(aScript);\n\n    this.setState({google_maps_key: data.google_maps_key});\n  }\n\n  onChange(connectForm) {\n    this.setState({connectForm})\n  }\n\n  getName() {\n    let name;\n\n    try {\n      name = jwt_decode(this.state.server.jwt).name;\n    } catch (e) {\n      console.warn(e);\n    }\n\n    return name;\n  }\n\n  _logout() {\n    localStorage.removeItem('server');\n    localStorage.removeItem('jwt');\n    this.setState({server: {}});\n  }\n\n  doSave = async () => {\n\n    let json = this.refs.mainForm.getValue();\n    if (json === null) return;\n\n    if (json.ack !== true) return;\n\n    let ret = await this.singHello(json.server);\n\n    if (ret.flag !== true) console.warn((ret.error?'Error':'Connection Successful'), ret.msg, [{text: 'OK'}], { cancelable: false });\n    else console.warn(ret)\n\n  }\n\n  singHello = async (server) => {\n    let res;\n\n    localStorage.setItem('server', server);\n\n    try {\n      res = await fetch('https://'+server+'/canvass/v1/hello', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer '+(this.state.jwt?this.state.jwt:\"of the one ring\"),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({longitude: -118, latitude: 40}),\n      });\n\n      let sm_oauth_url = res.headers.get('x-sm-oauth-url');\n\n      if (!sm_oauth_url) return {error: true, msg: \"Missing required header.\"}\n\n      switch (res.status) {\n        case 200:\n          break; // valid - break to proceed\n        case 400:\n          return {error: true, msg: \"The server didn't understand the request sent from this device.\"};\n        case 401:\n          window.location.href = sm_oauth_url+\"/gm?app=HelloVoter\";\n          return {error: false, flag: true};\n        case 403:\n          return {error: true, msg: \"We're sorry, but your request to canvass with this server has been rejected.\"};\n        default:\n          return {error: true, msg: \"Unknown error connecting to server.\"};\n      }\n\n      let body = await res.json();\n\n      console.warn(body);\n\n      this.setState({server: {hostname: server}});\n      localStorage.setItem('server', server);\n\n      if (body.data.ready !== true) return {error: false, msg: \"The server said: \"+body.msg};\n      else {\n        // TODO: use form data from body.data.forms[0] and save it in the forms_local cache\n        // TODO: if there's more than one form in body.data.forms - don't navigate\n        console.warn({server: server, dbx: null, user: this.state.user});\n        return {error: false, flag: true};\n      }\n    } catch (e) {\n      console.warn(\"singHello: \"+e);\n      return {error: true, msg: \"Unable to make a connection to target server\"};\n    }\n\n  }\n\n  render() {\n    let { server } = this.state;\n\n    if (!server.hostname) {\n      return (\n        <div align=\"center\">\n          <br />\n          <strong>{process.env.REACT_APP_NAME}</strong>\n          <div>Version {process.env.REACT_APP_VERSION}</div>\n          <br />\n          <t.form.Form\n            ref=\"mainForm\"\n            type={this.formServerItems}\n            options={this.formServerOptions}\n            onChange={this.onChange}\n            value={this.state.connectForm}\n          />\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={this.doSave}>Connect to Server</button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n    <Router>\n      <Root>\n        <ReactTooltip />\n        <Sidebar>\n          <div style={{margin: 10}}>Welcome, {this.getName()}!<br />Server: {this.state.server.hostname}</div>\n          <hr />\n          <SidebarItem><Icon icon={faColumns} /> <Link to={'/'}>Dashboard</Link></SidebarItem>\n          <SidebarItem><Icon icon={faUser} /> <Link to={'/canvassers/'}>Canvassers</Link></SidebarItem>\n          <SidebarItem><Icon icon={faUsers} /> <Link to={'/teams/'}>Teams</Link></SidebarItem>\n          <SidebarItem><Icon icon={faMap} /> <Link to={'/turf/'}>Turf</Link></SidebarItem>\n          <SidebarItem><Icon icon={faClipboard} /> <Link to={'/forms/'}>Forms</Link></SidebarItem>\n          <SidebarItem><Icon icon={faGlobe} /> <Link to={'/map/'}>Map</Link></SidebarItem>\n          <SidebarItem><Icon icon={faFileUpload} /> <Link to={'/import/'}>Import Data</Link></SidebarItem>\n          <SidebarItem><Icon icon={faChartPie} /> <Link to={'/analytics/'}>Analytics</Link></SidebarItem>\n          <SidebarItem><Icon icon={faCog} /> <Link to={'/settings/'}>Settings</Link></SidebarItem>\n          <SidebarItem><Icon icon={faSignOutAlt} /> <button onClick={() => this._logout()}>Logout</button></SidebarItem>\n          <hr />\n          <SidebarItem><Icon icon={faAward} /> <Link to={'/about/'}>About</Link></SidebarItem>\n          <SidebarItem><Icon icon={faGithub} /> <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/OurVoiceUSA/HelloVoter/tree/master/docs/\">Help</a></SidebarItem>\n        </Sidebar>\n        <Main>\n          <Route exact={true} path=\"/\" render={() => <Dashboard server={server} />} />\n          <Route path=\"/canvassers/\" render={(props) => <Canvassers server={server} {...props} />} />\n          <Route path=\"/teams/\" render={() => <Teams server={server} />} />\n          <Route path=\"/turf/\" render={() => <Turf server={server} />} />\n          <Route path=\"/forms/\" render={() => <Forms server={server} />} />\n          <Route path=\"/map/\" render={() => <Map server={server} apiKey={this.state.google_maps_key} />} />\n          <Route path=\"/import/\" render={() => <ImportData server={server} />} />\n          <Route path=\"/analytics/\" render={() => <Analytics server={server} />} />\n          <Route path=\"/settings/\" render={() => <Settings server={server} />} />\n          <Route path=\"/jwt/\" render={(props) => <Jwt {...props} refer={this} />} />\n          <Route path=\"/about/\" render={() => <About server={server} />} />\n        </Main>\n      </Root>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}